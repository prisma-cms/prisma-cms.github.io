{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","serviceWorker.js","App.js","index.js","schema/generated/api.fragments.js","components/pages/layout/index.js","components/pages/UsersPage/View/index.js","components/pages/UsersPage/index.js","components/Renderer/pages/UsersPage/UserPage/View/NotificationTypes/index.js","components/Renderer/pages/UsersPage/UserPage/View/ChatRooms/index.js","components/Renderer/pages/UsersPage/UserPage/View/EthWallet/Balances/index.js","components/Renderer/pages/UsersPage/UserPage/View/EthWallet/index.js","components/Renderer/pages/UsersPage/UserPage/View/index.js","components/Renderer/pages/layout/index.js","components/Renderer/pages/UsersPage/UserPage/index.js","components/view/forum/view/header/index.js","components/view/List/index.js","components/pages/404/index.js","components/view/forum/view/index.js","components/pages/Topics/query.js","components/view/forum/index.js","components/pages/Topics/index.js","components/pages/Topics/Topic/view/Comments/index.js","components/pages/Topics/Topic/view/Blog/View/index.js","components/pages/Topics/Topic/view/Blog/index.js","components/pages/Topics/Topic/view/index.js","components/pages/Topics/Topic/index.js","components/pages/Topics/Topic/Create/index.js","components/pages/Tags/Tag/View/index.js","components/pages/Tags/Tag/index.js","components/pages/Blogs/View/List/index.js","components/pages/List/index.js","components/pages/Blogs/index.js","components/pages/Blogs/query.js","components/pages/Blogs/Blog/View/index.js","components/pages/Blogs/Blog/index.js","components/pages/Blogs/Blog/Create/index.js","components/pages/Comments/query.js","components/pages/Comments/View/index.js","components/pages/Comments/index.js","components/pages/Comments/Comment/index.js","components/pages/cooperation/Projects/query.js","components/pages/cooperation/Projects/View/Project/index.js","components/pages/cooperation/Timers/query.js","components/pages/cooperation/Timers/View/Timer/index.js","components/pages/cooperation/Timers/View/List/index.js","components/pages/cooperation/Tasks/query.js","components/pages/cooperation/Tasks/View/Task/index.js","components/pages/cooperation/Projects/View/Project/Tasks/Task/index.js","components/pages/cooperation/Projects/View/Project/Tasks/index.js","components/pages/cooperation/Projects/View/List/Project/index.js","components/pages/cooperation/Projects/View/List/index.js","components/pages/cooperation/Projects/View/index.js","components/pages/cooperation/Projects/index.js","components/pages/cooperation/Projects/Project/index.js","components/pages/cooperation/Projects/Project/Create/index.js","components/pages/cooperation/Tasks/index.js","components/pages/cooperation/Tasks/Task/index.js","components/pages/cooperation/Tasks/Task/Create/index.js","components/pages/cooperation/Timers/index.js","components/pages/cooperation/Timers/Timer/index.js","components/pages/ethereum/Transactions/index.js","components/pages/ethereum/Transactions/Transaction/index.js","components/pages/society/ChatRooms/index.js","components/pages/society/ChatRooms/ChatRoom/index.js","components/pages/society/ChatRooms/ChatRoom/Create/index.js","components/pages/society/ChatMessages/index.js","components/pages/society/ChatMessages/ChatMessage/index.js","components/Renderer/SubscriptionProvider/index.js","components/pages/lessons/react/lesson1/index.js","components/Renderer/ContextProvider/index.js","components/Renderer/MainMenu/index.js","components/Renderer/pages/Root/components/pages/Users/User/index.js","components/menu/mainMenu/User/index.js","components/menu/mainMenu/index.js","components/Renderer/pages/Root/components/OldPageHeader/index.js","components/Renderer/pages/Root/components/pages/OldPages/index.js","components/Renderer/pages/Root/components/Link/SwitchTemplate/index.js","components/Renderer/pages/UsersPage/UserPage/Create/index.js","components/Renderer/pages/Root/components/pages/Users/User/Create/index.js","components/Renderer/pages/Root/components/Resource/index.js","components/Renderer/pages/Root/components/Resource/Topic/index.js","components/Renderer/pages/Root/components/Resource/Fields/Field/index.js","components/Renderer/pages/Root/components/Resource/Fields/index.js","components/Renderer/pages/Root/components/Resource/Fields/Field/ResourceContent/index.js","components/Renderer/pages/Root/components/Resource/Comments/index.js","components/Renderer/pages/Root/components/Resource/Topic/TopicBlog/index.js","components/Renderer/pages/Root/components/Resource/Fields/Field/Youtube/index.js","components/Renderer/pages/society/ChatRooms/index.js","components/Renderer/pages/Root/components/pages/ChatRooms/index.js","components/Renderer/pages/Root/components/pages/ChatRooms/ChatRoom/index.js","components/Renderer/pages/Root/index.js","components/Renderer/index.js","../node_modules/graphql-language-service-interface/dist sync /^.*$","components/App/index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Boolean","window","location","hostname","match","App","node","document","getElementById","ReactDOM","render","react_default","a","createElement","App_default","apolloOptions","endpoint","apiQuery","concat","UserNoNestingFragment","navigator","serviceWorker","ready","then","registration","unregister","__webpack_require__","r","__webpack_exports__","d","ChatRoomPreviousValuesFragment","RouteResponseFragment","NoticeSubscriptionPayloadFragment","UserGroupFragment","NoticePreviousValuesFragment","WorldFragment","GameSubscriptionPayloadFragment","PlayerFragment","GamePreviousValuesFragment","MessageFragment","GameResultSubscriptionPayloadFragment","LogedInFragment","GameResultPreviousValuesFragment","FileFragment","TournamentSubscriptionPayloadFragment","ResourceTagFragment","TournamentPreviousValuesFragment","ServiceFragment","TournamentGroupSubscriptionPayloadFragment","ProjectFragment","TournamentGroupPreviousValuesFragment","TaskFragment","TourneySubscriptionPayloadFragment","TimerFragment","TourneyPreviousValuesFragment","ChatRoomFragment","EthTransactionSubscriptionPayloadFragment","ChatMessageReadedFragment","CallRequestSubscriptionPayloadFragment","NoticeFragment","CallRequestPreviousValuesFragment","TeamFragment","PositionSubscriptionPayloadFragment","EthAccountFragment","PositionPreviousValuesFragment","EthBlockFragment","ProjectMemberSubscriptionPayloadFragment","ServiceCategoryFragment","ProjectMemberPreviousValuesFragment","GameFragment","ServiceSubscriptionPayloadFragment","TournamentFragment","ServicePreviousValuesFragment","GameResultFragment","TaskSubscriptionPayloadFragment","RouteFragment","TaskPreviousValuesFragment","WorldConnectionFragment","TaskReactionSubscriptionPayloadFragment","WorldEdgeFragment","TaskReactionPreviousValuesFragment","ResourceConnectionFragment","TeamMemberSubscriptionPayloadFragment","AggregateResourceFragment","TeamMemberPreviousValuesFragment","ChatMessageReadedEdgeFragment","TimerSubscriptionPayloadFragment","ChatRoomConnectionFragment","TimerPreviousValuesFragment","AggregateChatRoomFragment","RouteSubscriptionPayloadFragment","NoticeEdgeFragment","RoutePreviousValuesFragment","NotificationTypeConnectionFragment","TeamSubscriptionPayloadFragment","AggregateNotificationTypeFragment","TeamPreviousValuesFragment","ResourceTagEdgeFragment","ProjectSubscriptionPayloadFragment","TagConnectionFragment","ProjectPreviousValuesFragment","AggregateTagFragment","TemplateSubscriptionPayloadFragment","GameEdgeFragment","TemplatePreviousValuesFragment","GameResultConnectionFragment","ChatMessageSubscriptionPayloadFragment","AggregateGameResultFragment","ChatMessagePreviousValuesFragment","TournamentEdgeFragment","UserSubscriptionPayloadFragment","TournamentGroupConnectionFragment","UserPreviousValuesFragment","AggregateTournamentGroupFragment","ImportResponseFragment","TourneyEdgeFragment","ImportFragment","VoteConnectionFragment","LogFragment","AggregateVoteFragment","AggregateBlockFragment","EthAccountEdgeFragment","AggregateChatRoomInvitationFragment","EthTransactionConnectionFragment","AggregateFileFragment","AggregateEthTransactionFragment","AggregateImportFragment","CallRequestEdgeFragment","AggregateInventoryFragment","PositionConnectionFragment","AggregateLetsadsSmsMessageStatusFragment","AggregatePositionFragment","AggregateLetsadsSmsMessageStatusItemFragment","ProjectMemberEdgeFragment","AggregateLetterFragment","ServiceConnectionFragment","AggregateLogFragment","AggregateServiceFragment","AggregateLogedInFragment","TaskEdgeFragment","AggregateMessageFragment","TaskReactionConnectionFragment","AggregatePlayerFragment","AggregateTaskReactionFragment","AggregateResetPasswordFragment","TeamMemberEdgeFragment","AggregateServiceCategoryFragment","TimerConnectionFragment","AggregateSettingsFragment","AggregateTimerFragment","AggregateSmsMessageFragment","RouteEdgeFragment","AggregateSmsProviderFragment","TestConnectionFragment","AggregateTaskMemberFragment","AggregateTestFragment","AggregateUserGroupFragment","EthBlockEdgeFragment","BlockConnectionFragment","TeamConnectionFragment","BlockEdgeFragment","AggregateTeamFragment","BlockPreviousValuesFragment","EthContractSourceEdgeFragment","BlockSubscriptionPayloadFragment","ProjectConnectionFragment","ChatRoomInvitationConnectionFragment","AggregateProjectFragment","ChatRoomInvitationEdgeFragment","TemplateEdgeFragment","ChatRoomInvitationPreviousValuesFragment","ChatMessageConnectionFragment","ChatRoomInvitationSubscriptionPayloadFragment","AggregateChatMessageFragment","EthAccountPreviousValuesFragment","UserEdgeFragment","EthAccountSubscriptionPayloadFragment","ethNetFragment","EthBlockPreviousValuesFragment","ethSyncStateFragment","EthBlockSubscriptionPayloadFragment","ErrorFragment","EthContractSourcePreviousValuesFragment","TimerResponseFragment","EthContractSourceSubscriptionPayloadFragment","TestResponseFragment","EthTransactionPreviousValuesFragment","EthAccountResponseFragment","FileConnectionFragment","McJsAuthPayloadFragment","FileEdgeFragment","ResetPasswordResponseFragment","FilePreviousValuesFragment","TemplateResponseFragment","FileSubscriptionPayloadFragment","ChatMessageResponseFragment","ImportConnectionFragment","CallRequestResponseFragment","ImportEdgeFragment","PlayerSubscriptionPayloadFragment","ImportPreviousValuesFragment","WorldSubscriptionPayloadFragment","ImportSubscriptionPayloadFragment","MessageSubscriptionPayloadFragment","InventoryConnectionFragment","ResourceSubscriptionPayloadFragment","InventoryEdgeFragment","ChatMessageReadedSubscriptionPayloadFragment","InventoryPreviousValuesFragment","ChatRoomSubscriptionPayloadFragment","InventorySubscriptionPayloadFragment","BlockFragment","LetsadsSmsMessageStatusFragment","SettingsFragment","SmsMessageFragment","VoteFragment","SmsProviderFragment","ProjectMemberFragment","LetsadsSmsMessageStatusItemFragment","TaskMemberFragment","LetsadsSmsMessageStatusConnectionFragment","ChatMessageFragment","LetsadsSmsMessageStatusEdgeFragment","CallRequestFragment","LetsadsSmsMessageStatusItemConnectionFragment","EthTransactionFragment","LetsadsSmsMessageStatusItemEdgeFragment","NotificationTypeFragment","LetsadsSmsMessageStatusItemPreviousValuesFragment","TournamentGroupFragment","LetsadsSmsMessageStatusItemSubscriptionPayloadFragment","TestFragment","LetsadsSmsMessageStatusPreviousValuesFragment","AggregateWorldFragment","LetsadsSmsMessageStatusSubscriptionPayloadFragment","ChatMessageReadedConnectionFragment","LetterFragment","ChatRoomEdgeFragment","LetterConnectionFragment","AggregateNoticeFragment","LetterEdgeFragment","ResourceTagConnectionFragment","LetterPreviousValuesFragment","TagEdgeFragment","LetterSubscriptionPayloadFragment","AggregateGameFragment","LogConnectionFragment","TournamentConnectionFragment","LogEdgeFragment","TournamentGroupEdgeFragment","LogedInConnectionFragment","AggregateTourneyFragment","LogedInEdgeFragment","EthAccountConnectionFragment","LogedInPreviousValuesFragment","EthTransactionEdgeFragment","LogedInSubscriptionPayloadFragment","AggregateCallRequestFragment","LogPreviousValuesFragment","ProjectMemberConnectionFragment","LogSubscriptionPayloadFragment","ServiceEdgeFragment","MessageConnectionFragment","AggregateTaskFragment","MessageEdgeFragment","TeamMemberConnectionFragment","NotificationTypePreviousValuesFragment","TimerEdgeFragment","NotificationTypeSubscriptionPayloadFragment","AggregateRouteFragment","PlayerConnectionFragment","EthBlockConnectionFragment","PlayerEdgeFragment","TeamEdgeFragment","ResetPasswordConnectionFragment","AggregateEthContractSourceFragment","ResetPasswordEdgeFragment","TemplateConnectionFragment","ResetPasswordPreviousValuesFragment","ChatMessageEdgeFragment","ResetPasswordSubscriptionPayloadFragment","AggregateUserFragment","ResourceTagPreviousValuesFragment","ProjectResponseFragment","ResourceTagSubscriptionPayloadFragment","ResourceResponseFragment","ServiceCategoryConnectionFragment","BatchPayloadFragment","ServiceCategoryEdgeFragment","ResetPasswordFragment","ServiceCategoryPreviousValuesFragment","EthTransactionResponseFragment","ServiceCategorySubscriptionPayloadFragment","PlayerPreviousValuesFragment","SettingsConnectionFragment","MessagePreviousValuesFragment","SettingsEdgeFragment","ChatMessageReadedPreviousValuesFragment","SettingsPreviousValuesFragment","InventoryFragment","SettingsSubscriptionPayloadFragment","TagFragment","SmsMessageConnectionFragment","TaskReactionFragment","SmsMessageEdgeFragment","TeamMemberFragment","SmsMessagePreviousValuesFragment","TourneyFragment","SmsMessageSubscriptionPayloadFragment","PageInfoFragment","SmsProviderConnectionFragment","AggregateChatMessageReadedFragment","SmsProviderEdgeFragment","NotificationTypeEdgeFragment","SmsProviderPreviousValuesFragment","GameConnectionFragment","SmsProviderSubscriptionPayloadFragment","AggregateTournamentFragment","TagPreviousValuesFragment","VoteEdgeFragment","TagSubscriptionPayloadFragment","CallRequestConnectionFragment","TaskMemberConnectionFragment","AggregateProjectMemberFragment","TaskMemberEdgeFragment","TaskReactionEdgeFragment","TaskMemberPreviousValuesFragment","RouteConnectionFragment","TaskMemberSubscriptionPayloadFragment","AggregateEthBlockFragment","TestPreviousValuesFragment","ProjectEdgeFragment","TestSubscriptionPayloadFragment","UserConnectionFragment","UserGroupConnectionFragment","TaskResponseFragment","UserGroupEdgeFragment","UserResponseFragment","UserGroupPreviousValuesFragment","TaskReactionResponseFragment","UserGroupSubscriptionPayloadFragment","ResourcePreviousValuesFragment","VotePreviousValuesFragment","ResourceFragment","VoteSubscriptionPayloadFragment","ChatRoomInvitationFragment","SmsMessageResponseFragment","PositionFragment","SmsProviderResponseFragment","NoticeConnectionFragment","MarketplaceAuthResponseFragment","GameResultEdgeFragment","ChatMessageReadedResponseFragment","AggregateEthAccountFragment","GameResponseFragment","TaskConnectionFragment","GameResultResponseFragment","TestEdgeFragment","TournamentResponseFragment","AggregateTemplateFragment","TournamentGroupResponseFragment","AuthPayloadFragment","TourneyResponseFragment","WorldPreviousValuesFragment","EthBlockResponseFragment","TemplateFragment","EthContractSourceResponseFragment","ResourceEdgeFragment","EthPersonalAccountResponseFragment","TourneyConnectionFragment","IceCandidateFragment","AggregateTeamMemberFragment","PositionResponseFragment","EthPersonalAccountFragment","ProjectMemberResponseFragment","UserFragment","AggregateResourceTagFragment","TeamMemberResponseFragment","TeamResponseFragment","ServiceCategoryResponseFragment","ServiceResponseFragment","PositionEdgeFragment","EthContractSourceFragment","ChatRoomResponseFragment","EthContractSourceConnectionFragment","ChatRoomPreviousValuesNoNestingFragment","RouteResponseNoNestingFragment","NoticeSubscriptionPayloadNoNestingFragment","UserGroupNoNestingFragment","NoticePreviousValuesNoNestingFragment","WorldNoNestingFragment","GameSubscriptionPayloadNoNestingFragment","PlayerNoNestingFragment","GamePreviousValuesNoNestingFragment","MessageNoNestingFragment","GameResultSubscriptionPayloadNoNestingFragment","LogedInNoNestingFragment","GameResultPreviousValuesNoNestingFragment","FileNoNestingFragment","TournamentSubscriptionPayloadNoNestingFragment","ResourceTagNoNestingFragment","TournamentPreviousValuesNoNestingFragment","ServiceNoNestingFragment","TournamentGroupSubscriptionPayloadNoNestingFragment","ProjectNoNestingFragment","TournamentGroupPreviousValuesNoNestingFragment","TaskNoNestingFragment","TourneySubscriptionPayloadNoNestingFragment","TimerNoNestingFragment","TourneyPreviousValuesNoNestingFragment","ChatRoomNoNestingFragment","EthTransactionSubscriptionPayloadNoNestingFragment","ChatMessageReadedNoNestingFragment","CallRequestSubscriptionPayloadNoNestingFragment","NoticeNoNestingFragment","CallRequestPreviousValuesNoNestingFragment","TeamNoNestingFragment","PositionSubscriptionPayloadNoNestingFragment","EthAccountNoNestingFragment","PositionPreviousValuesNoNestingFragment","EthBlockNoNestingFragment","ProjectMemberSubscriptionPayloadNoNestingFragment","ServiceCategoryNoNestingFragment","ProjectMemberPreviousValuesNoNestingFragment","GameNoNestingFragment","ServiceSubscriptionPayloadNoNestingFragment","TournamentNoNestingFragment","ServicePreviousValuesNoNestingFragment","GameResultNoNestingFragment","TaskSubscriptionPayloadNoNestingFragment","RouteNoNestingFragment","TaskPreviousValuesNoNestingFragment","TaskReactionSubscriptionPayloadNoNestingFragment","WorldEdgeNoNestingFragment","TaskReactionPreviousValuesNoNestingFragment","TeamMemberSubscriptionPayloadNoNestingFragment","AggregateResourceNoNestingFragment","TeamMemberPreviousValuesNoNestingFragment","ChatMessageReadedEdgeNoNestingFragment","TimerSubscriptionPayloadNoNestingFragment","TimerPreviousValuesNoNestingFragment","AggregateChatRoomNoNestingFragment","RouteSubscriptionPayloadNoNestingFragment","NoticeEdgeNoNestingFragment","RoutePreviousValuesNoNestingFragment","TeamSubscriptionPayloadNoNestingFragment","AggregateNotificationTypeNoNestingFragment","TeamPreviousValuesNoNestingFragment","ResourceTagEdgeNoNestingFragment","ProjectSubscriptionPayloadNoNestingFragment","ProjectPreviousValuesNoNestingFragment","AggregateTagNoNestingFragment","TemplateSubscriptionPayloadNoNestingFragment","GameEdgeNoNestingFragment","TemplatePreviousValuesNoNestingFragment","ChatMessageSubscriptionPayloadNoNestingFragment","AggregateGameResultNoNestingFragment","ChatMessagePreviousValuesNoNestingFragment","TournamentEdgeNoNestingFragment","UserSubscriptionPayloadNoNestingFragment","UserPreviousValuesNoNestingFragment","AggregateTournamentGroupNoNestingFragment","ImportResponseNoNestingFragment","TourneyEdgeNoNestingFragment","ImportNoNestingFragment","LogNoNestingFragment","AggregateVoteNoNestingFragment","AggregateBlockNoNestingFragment","EthAccountEdgeNoNestingFragment","AggregateChatRoomInvitationNoNestingFragment","AggregateFileNoNestingFragment","AggregateEthTransactionNoNestingFragment","AggregateImportNoNestingFragment","CallRequestEdgeNoNestingFragment","AggregateInventoryNoNestingFragment","AggregateLetsadsSmsMessageStatusNoNestingFragment","AggregatePositionNoNestingFragment","AggregateLetsadsSmsMessageStatusItemNoNestingFragment","ProjectMemberEdgeNoNestingFragment","AggregateLetterNoNestingFragment","AggregateLogNoNestingFragment","AggregateServiceNoNestingFragment","AggregateLogedInNoNestingFragment","TaskEdgeNoNestingFragment","AggregateMessageNoNestingFragment","AggregatePlayerNoNestingFragment","AggregateTaskReactionNoNestingFragment","AggregateResetPasswordNoNestingFragment","TeamMemberEdgeNoNestingFragment","AggregateServiceCategoryNoNestingFragment","AggregateSettingsNoNestingFragment","AggregateTimerNoNestingFragment","AggregateSmsMessageNoNestingFragment","RouteEdgeNoNestingFragment","AggregateSmsProviderNoNestingFragment","AggregateTaskMemberNoNestingFragment","AggregateTestNoNestingFragment","AggregateUserGroupNoNestingFragment","EthBlockEdgeNoNestingFragment","BlockEdgeNoNestingFragment","AggregateTeamNoNestingFragment","BlockPreviousValuesNoNestingFragment","EthContractSourceEdgeNoNestingFragment","BlockSubscriptionPayloadNoNestingFragment","AggregateProjectNoNestingFragment","ChatRoomInvitationEdgeNoNestingFragment","TemplateEdgeNoNestingFragment","ChatRoomInvitationPreviousValuesNoNestingFragment","ChatRoomInvitationSubscriptionPayloadNoNestingFragment","AggregateChatMessageNoNestingFragment","EthAccountPreviousValuesNoNestingFragment","UserEdgeNoNestingFragment","EthAccountSubscriptionPayloadNoNestingFragment","ethNetNoNestingFragment","EthBlockPreviousValuesNoNestingFragment","ethSyncStateNoNestingFragment","EthBlockSubscriptionPayloadNoNestingFragment","ErrorNoNestingFragment","EthContractSourcePreviousValuesNoNestingFragment","TimerResponseNoNestingFragment","EthContractSourceSubscriptionPayloadNoNestingFragment","TestResponseNoNestingFragment","EthTransactionPreviousValuesNoNestingFragment","EthAccountResponseNoNestingFragment","McJsAuthPayloadNoNestingFragment","FileEdgeNoNestingFragment","ResetPasswordResponseNoNestingFragment","FilePreviousValuesNoNestingFragment","TemplateResponseNoNestingFragment","FileSubscriptionPayloadNoNestingFragment","ChatMessageResponseNoNestingFragment","CallRequestResponseNoNestingFragment","ImportEdgeNoNestingFragment","PlayerSubscriptionPayloadNoNestingFragment","ImportPreviousValuesNoNestingFragment","WorldSubscriptionPayloadNoNestingFragment","ImportSubscriptionPayloadNoNestingFragment","MessageSubscriptionPayloadNoNestingFragment","ResourceSubscriptionPayloadNoNestingFragment","InventoryEdgeNoNestingFragment","ChatMessageReadedSubscriptionPayloadNoNestingFragment","InventoryPreviousValuesNoNestingFragment","ChatRoomSubscriptionPayloadNoNestingFragment","InventorySubscriptionPayloadNoNestingFragment","BlockNoNestingFragment","LetsadsSmsMessageStatusNoNestingFragment","SettingsNoNestingFragment","SmsMessageNoNestingFragment","VoteNoNestingFragment","SmsProviderNoNestingFragment","ProjectMemberNoNestingFragment","LetsadsSmsMessageStatusItemNoNestingFragment","TaskMemberNoNestingFragment","ChatMessageNoNestingFragment","LetsadsSmsMessageStatusEdgeNoNestingFragment","CallRequestNoNestingFragment","EthTransactionNoNestingFragment","LetsadsSmsMessageStatusItemEdgeNoNestingFragment","NotificationTypeNoNestingFragment","LetsadsSmsMessageStatusItemPreviousValuesNoNestingFragment","TournamentGroupNoNestingFragment","LetsadsSmsMessageStatusItemSubscriptionPayloadNoNestingFragment","TestNoNestingFragment","LetsadsSmsMessageStatusPreviousValuesNoNestingFragment","AggregateWorldNoNestingFragment","LetsadsSmsMessageStatusSubscriptionPayloadNoNestingFragment","LetterNoNestingFragment","ChatRoomEdgeNoNestingFragment","AggregateNoticeNoNestingFragment","LetterEdgeNoNestingFragment","LetterPreviousValuesNoNestingFragment","TagEdgeNoNestingFragment","LetterSubscriptionPayloadNoNestingFragment","AggregateGameNoNestingFragment","LogEdgeNoNestingFragment","TournamentGroupEdgeNoNestingFragment","AggregateTourneyNoNestingFragment","LogedInEdgeNoNestingFragment","LogedInPreviousValuesNoNestingFragment","EthTransactionEdgeNoNestingFragment","LogedInSubscriptionPayloadNoNestingFragment","AggregateCallRequestNoNestingFragment","LogPreviousValuesNoNestingFragment","LogSubscriptionPayloadNoNestingFragment","ServiceEdgeNoNestingFragment","AggregateTaskNoNestingFragment","MessageEdgeNoNestingFragment","NotificationTypePreviousValuesNoNestingFragment","TimerEdgeNoNestingFragment","NotificationTypeSubscriptionPayloadNoNestingFragment","AggregateRouteNoNestingFragment","PlayerEdgeNoNestingFragment","TeamEdgeNoNestingFragment","AggregateEthContractSourceNoNestingFragment","ResetPasswordEdgeNoNestingFragment","ResetPasswordPreviousValuesNoNestingFragment","ChatMessageEdgeNoNestingFragment","ResetPasswordSubscriptionPayloadNoNestingFragment","AggregateUserNoNestingFragment","ResourceTagPreviousValuesNoNestingFragment","ProjectResponseNoNestingFragment","ResourceTagSubscriptionPayloadNoNestingFragment","ResourceResponseNoNestingFragment","BatchPayloadNoNestingFragment","ServiceCategoryEdgeNoNestingFragment","ResetPasswordNoNestingFragment","ServiceCategoryPreviousValuesNoNestingFragment","EthTransactionResponseNoNestingFragment","ServiceCategorySubscriptionPayloadNoNestingFragment","PlayerPreviousValuesNoNestingFragment","MessagePreviousValuesNoNestingFragment","SettingsEdgeNoNestingFragment","ChatMessageReadedPreviousValuesNoNestingFragment","SettingsPreviousValuesNoNestingFragment","InventoryNoNestingFragment","SettingsSubscriptionPayloadNoNestingFragment","TagNoNestingFragment","TaskReactionNoNestingFragment","SmsMessageEdgeNoNestingFragment","TeamMemberNoNestingFragment","SmsMessagePreviousValuesNoNestingFragment","TourneyNoNestingFragment","SmsMessageSubscriptionPayloadNoNestingFragment","PageInfoNoNestingFragment","AggregateChatMessageReadedNoNestingFragment","SmsProviderEdgeNoNestingFragment","NotificationTypeEdgeNoNestingFragment","SmsProviderPreviousValuesNoNestingFragment","SmsProviderSubscriptionPayloadNoNestingFragment","AggregateTournamentNoNestingFragment","TagPreviousValuesNoNestingFragment","VoteEdgeNoNestingFragment","TagSubscriptionPayloadNoNestingFragment","AggregateProjectMemberNoNestingFragment","TaskMemberEdgeNoNestingFragment","TaskReactionEdgeNoNestingFragment","TaskMemberPreviousValuesNoNestingFragment","TaskMemberSubscriptionPayloadNoNestingFragment","AggregateEthBlockNoNestingFragment","TestPreviousValuesNoNestingFragment","ProjectEdgeNoNestingFragment","TestSubscriptionPayloadNoNestingFragment","TaskResponseNoNestingFragment","UserGroupEdgeNoNestingFragment","UserResponseNoNestingFragment","UserGroupPreviousValuesNoNestingFragment","TaskReactionResponseNoNestingFragment","UserGroupSubscriptionPayloadNoNestingFragment","ResourcePreviousValuesNoNestingFragment","VotePreviousValuesNoNestingFragment","ResourceNoNestingFragment","VoteSubscriptionPayloadNoNestingFragment","ChatRoomInvitationNoNestingFragment","SmsMessageResponseNoNestingFragment","PositionNoNestingFragment","SmsProviderResponseNoNestingFragment","MarketplaceAuthResponseNoNestingFragment","GameResultEdgeNoNestingFragment","ChatMessageReadedResponseNoNestingFragment","AggregateEthAccountNoNestingFragment","GameResponseNoNestingFragment","GameResultResponseNoNestingFragment","TestEdgeNoNestingFragment","TournamentResponseNoNestingFragment","AggregateTemplateNoNestingFragment","TournamentGroupResponseNoNestingFragment","AuthPayloadNoNestingFragment","TourneyResponseNoNestingFragment","WorldPreviousValuesNoNestingFragment","EthBlockResponseNoNestingFragment","TemplateNoNestingFragment","EthContractSourceResponseNoNestingFragment","ResourceEdgeNoNestingFragment","EthPersonalAccountResponseNoNestingFragment","IceCandidateNoNestingFragment","AggregateTeamMemberNoNestingFragment","PositionResponseNoNestingFragment","EthPersonalAccountNoNestingFragment","ProjectMemberResponseNoNestingFragment","AggregateResourceTagNoNestingFragment","TeamMemberResponseNoNestingFragment","TeamResponseNoNestingFragment","ServiceCategoryResponseNoNestingFragment","ServiceResponseNoNestingFragment","PositionEdgeNoNestingFragment","EthContractSourceNoNestingFragment","ChatRoomResponseNoNestingFragment","ChatRoomPreviousValuesDeepNestingFragment","RouteResponseDeepNestingFragment","NoticeSubscriptionPayloadDeepNestingFragment","UserGroupDeepNestingFragment","NoticePreviousValuesDeepNestingFragment","WorldDeepNestingFragment","GameSubscriptionPayloadDeepNestingFragment","PlayerDeepNestingFragment","GamePreviousValuesDeepNestingFragment","MessageDeepNestingFragment","GameResultSubscriptionPayloadDeepNestingFragment","LogedInDeepNestingFragment","GameResultPreviousValuesDeepNestingFragment","FileDeepNestingFragment","TournamentSubscriptionPayloadDeepNestingFragment","ResourceTagDeepNestingFragment","TournamentPreviousValuesDeepNestingFragment","ServiceDeepNestingFragment","TournamentGroupSubscriptionPayloadDeepNestingFragment","ProjectDeepNestingFragment","TournamentGroupPreviousValuesDeepNestingFragment","TaskDeepNestingFragment","TourneySubscriptionPayloadDeepNestingFragment","TimerDeepNestingFragment","TourneyPreviousValuesDeepNestingFragment","ChatRoomDeepNestingFragment","EthTransactionSubscriptionPayloadDeepNestingFragment","ChatMessageReadedDeepNestingFragment","CallRequestSubscriptionPayloadDeepNestingFragment","NoticeDeepNestingFragment","CallRequestPreviousValuesDeepNestingFragment","TeamDeepNestingFragment","PositionSubscriptionPayloadDeepNestingFragment","EthAccountDeepNestingFragment","PositionPreviousValuesDeepNestingFragment","EthBlockDeepNestingFragment","ProjectMemberSubscriptionPayloadDeepNestingFragment","ServiceCategoryDeepNestingFragment","ProjectMemberPreviousValuesDeepNestingFragment","GameDeepNestingFragment","ServiceSubscriptionPayloadDeepNestingFragment","TournamentDeepNestingFragment","ServicePreviousValuesDeepNestingFragment","GameResultDeepNestingFragment","TaskSubscriptionPayloadDeepNestingFragment","RouteDeepNestingFragment","TaskPreviousValuesDeepNestingFragment","WorldConnectionDeepNestingFragment","TaskReactionSubscriptionPayloadDeepNestingFragment","WorldEdgeDeepNestingFragment","TaskReactionPreviousValuesDeepNestingFragment","ResourceConnectionDeepNestingFragment","TeamMemberSubscriptionPayloadDeepNestingFragment","AggregateResourceDeepNestingFragment","TeamMemberPreviousValuesDeepNestingFragment","ChatMessageReadedEdgeDeepNestingFragment","TimerSubscriptionPayloadDeepNestingFragment","ChatRoomConnectionDeepNestingFragment","TimerPreviousValuesDeepNestingFragment","AggregateChatRoomDeepNestingFragment","RouteSubscriptionPayloadDeepNestingFragment","NoticeEdgeDeepNestingFragment","RoutePreviousValuesDeepNestingFragment","NotificationTypeConnectionDeepNestingFragment","TeamSubscriptionPayloadDeepNestingFragment","AggregateNotificationTypeDeepNestingFragment","TeamPreviousValuesDeepNestingFragment","ResourceTagEdgeDeepNestingFragment","ProjectSubscriptionPayloadDeepNestingFragment","TagConnectionDeepNestingFragment","ProjectPreviousValuesDeepNestingFragment","AggregateTagDeepNestingFragment","TemplateSubscriptionPayloadDeepNestingFragment","GameEdgeDeepNestingFragment","TemplatePreviousValuesDeepNestingFragment","GameResultConnectionDeepNestingFragment","ChatMessageSubscriptionPayloadDeepNestingFragment","AggregateGameResultDeepNestingFragment","ChatMessagePreviousValuesDeepNestingFragment","TournamentEdgeDeepNestingFragment","UserSubscriptionPayloadDeepNestingFragment","TournamentGroupConnectionDeepNestingFragment","UserPreviousValuesDeepNestingFragment","AggregateTournamentGroupDeepNestingFragment","ImportResponseDeepNestingFragment","TourneyEdgeDeepNestingFragment","ImportDeepNestingFragment","VoteConnectionDeepNestingFragment","LogDeepNestingFragment","AggregateVoteDeepNestingFragment","AggregateBlockDeepNestingFragment","EthAccountEdgeDeepNestingFragment","AggregateChatRoomInvitationDeepNestingFragment","EthTransactionConnectionDeepNestingFragment","AggregateFileDeepNestingFragment","AggregateEthTransactionDeepNestingFragment","AggregateImportDeepNestingFragment","CallRequestEdgeDeepNestingFragment","AggregateInventoryDeepNestingFragment","PositionConnectionDeepNestingFragment","AggregateLetsadsSmsMessageStatusDeepNestingFragment","AggregatePositionDeepNestingFragment","AggregateLetsadsSmsMessageStatusItemDeepNestingFragment","ProjectMemberEdgeDeepNestingFragment","AggregateLetterDeepNestingFragment","ServiceConnectionDeepNestingFragment","AggregateLogDeepNestingFragment","AggregateServiceDeepNestingFragment","AggregateLogedInDeepNestingFragment","TaskEdgeDeepNestingFragment","AggregateMessageDeepNestingFragment","TaskReactionConnectionDeepNestingFragment","AggregatePlayerDeepNestingFragment","AggregateTaskReactionDeepNestingFragment","AggregateResetPasswordDeepNestingFragment","TeamMemberEdgeDeepNestingFragment","AggregateServiceCategoryDeepNestingFragment","TimerConnectionDeepNestingFragment","AggregateSettingsDeepNestingFragment","AggregateTimerDeepNestingFragment","AggregateSmsMessageDeepNestingFragment","RouteEdgeDeepNestingFragment","AggregateSmsProviderDeepNestingFragment","TestConnectionDeepNestingFragment","AggregateTaskMemberDeepNestingFragment","AggregateTestDeepNestingFragment","AggregateUserGroupDeepNestingFragment","EthBlockEdgeDeepNestingFragment","BlockConnectionDeepNestingFragment","TeamConnectionDeepNestingFragment","BlockEdgeDeepNestingFragment","AggregateTeamDeepNestingFragment","BlockPreviousValuesDeepNestingFragment","EthContractSourceEdgeDeepNestingFragment","BlockSubscriptionPayloadDeepNestingFragment","ProjectConnectionDeepNestingFragment","ChatRoomInvitationConnectionDeepNestingFragment","AggregateProjectDeepNestingFragment","ChatRoomInvitationEdgeDeepNestingFragment","TemplateEdgeDeepNestingFragment","ChatRoomInvitationPreviousValuesDeepNestingFragment","ChatMessageConnectionDeepNestingFragment","ChatRoomInvitationSubscriptionPayloadDeepNestingFragment","AggregateChatMessageDeepNestingFragment","EthAccountPreviousValuesDeepNestingFragment","UserEdgeDeepNestingFragment","EthAccountSubscriptionPayloadDeepNestingFragment","ethNetDeepNestingFragment","EthBlockPreviousValuesDeepNestingFragment","ethSyncStateDeepNestingFragment","EthBlockSubscriptionPayloadDeepNestingFragment","ErrorDeepNestingFragment","EthContractSourcePreviousValuesDeepNestingFragment","TimerResponseDeepNestingFragment","EthContractSourceSubscriptionPayloadDeepNestingFragment","TestResponseDeepNestingFragment","EthTransactionPreviousValuesDeepNestingFragment","EthAccountResponseDeepNestingFragment","FileConnectionDeepNestingFragment","McJsAuthPayloadDeepNestingFragment","FileEdgeDeepNestingFragment","ResetPasswordResponseDeepNestingFragment","FilePreviousValuesDeepNestingFragment","TemplateResponseDeepNestingFragment","FileSubscriptionPayloadDeepNestingFragment","ChatMessageResponseDeepNestingFragment","ImportConnectionDeepNestingFragment","CallRequestResponseDeepNestingFragment","ImportEdgeDeepNestingFragment","PlayerSubscriptionPayloadDeepNestingFragment","ImportPreviousValuesDeepNestingFragment","WorldSubscriptionPayloadDeepNestingFragment","ImportSubscriptionPayloadDeepNestingFragment","MessageSubscriptionPayloadDeepNestingFragment","InventoryConnectionDeepNestingFragment","ResourceSubscriptionPayloadDeepNestingFragment","InventoryEdgeDeepNestingFragment","ChatMessageReadedSubscriptionPayloadDeepNestingFragment","InventoryPreviousValuesDeepNestingFragment","ChatRoomSubscriptionPayloadDeepNestingFragment","InventorySubscriptionPayloadDeepNestingFragment","BlockDeepNestingFragment","LetsadsSmsMessageStatusDeepNestingFragment","SettingsDeepNestingFragment","SmsMessageDeepNestingFragment","VoteDeepNestingFragment","SmsProviderDeepNestingFragment","ProjectMemberDeepNestingFragment","LetsadsSmsMessageStatusItemDeepNestingFragment","TaskMemberDeepNestingFragment","LetsadsSmsMessageStatusConnectionDeepNestingFragment","ChatMessageDeepNestingFragment","LetsadsSmsMessageStatusEdgeDeepNestingFragment","CallRequestDeepNestingFragment","LetsadsSmsMessageStatusItemConnectionDeepNestingFragment","EthTransactionDeepNestingFragment","LetsadsSmsMessageStatusItemEdgeDeepNestingFragment","NotificationTypeDeepNestingFragment","LetsadsSmsMessageStatusItemPreviousValuesDeepNestingFragment","TournamentGroupDeepNestingFragment","LetsadsSmsMessageStatusItemSubscriptionPayloadDeepNestingFragment","TestDeepNestingFragment","LetsadsSmsMessageStatusPreviousValuesDeepNestingFragment","AggregateWorldDeepNestingFragment","LetsadsSmsMessageStatusSubscriptionPayloadDeepNestingFragment","ChatMessageReadedConnectionDeepNestingFragment","LetterDeepNestingFragment","ChatRoomEdgeDeepNestingFragment","LetterConnectionDeepNestingFragment","AggregateNoticeDeepNestingFragment","LetterEdgeDeepNestingFragment","ResourceTagConnectionDeepNestingFragment","LetterPreviousValuesDeepNestingFragment","TagEdgeDeepNestingFragment","LetterSubscriptionPayloadDeepNestingFragment","AggregateGameDeepNestingFragment","LogConnectionDeepNestingFragment","TournamentConnectionDeepNestingFragment","LogEdgeDeepNestingFragment","TournamentGroupEdgeDeepNestingFragment","LogedInConnectionDeepNestingFragment","AggregateTourneyDeepNestingFragment","LogedInEdgeDeepNestingFragment","EthAccountConnectionDeepNestingFragment","LogedInPreviousValuesDeepNestingFragment","EthTransactionEdgeDeepNestingFragment","LogedInSubscriptionPayloadDeepNestingFragment","AggregateCallRequestDeepNestingFragment","LogPreviousValuesDeepNestingFragment","ProjectMemberConnectionDeepNestingFragment","LogSubscriptionPayloadDeepNestingFragment","ServiceEdgeDeepNestingFragment","MessageConnectionDeepNestingFragment","AggregateTaskDeepNestingFragment","MessageEdgeDeepNestingFragment","TeamMemberConnectionDeepNestingFragment","NotificationTypePreviousValuesDeepNestingFragment","TimerEdgeDeepNestingFragment","NotificationTypeSubscriptionPayloadDeepNestingFragment","AggregateRouteDeepNestingFragment","PlayerConnectionDeepNestingFragment","EthBlockConnectionDeepNestingFragment","PlayerEdgeDeepNestingFragment","TeamEdgeDeepNestingFragment","ResetPasswordConnectionDeepNestingFragment","AggregateEthContractSourceDeepNestingFragment","ResetPasswordEdgeDeepNestingFragment","TemplateConnectionDeepNestingFragment","ResetPasswordPreviousValuesDeepNestingFragment","ChatMessageEdgeDeepNestingFragment","ResetPasswordSubscriptionPayloadDeepNestingFragment","AggregateUserDeepNestingFragment","ResourceTagPreviousValuesDeepNestingFragment","ProjectResponseDeepNestingFragment","ResourceTagSubscriptionPayloadDeepNestingFragment","ResourceResponseDeepNestingFragment","ServiceCategoryConnectionDeepNestingFragment","BatchPayloadDeepNestingFragment","ServiceCategoryEdgeDeepNestingFragment","ResetPasswordDeepNestingFragment","ServiceCategoryPreviousValuesDeepNestingFragment","EthTransactionResponseDeepNestingFragment","ServiceCategorySubscriptionPayloadDeepNestingFragment","PlayerPreviousValuesDeepNestingFragment","SettingsConnectionDeepNestingFragment","MessagePreviousValuesDeepNestingFragment","SettingsEdgeDeepNestingFragment","ChatMessageReadedPreviousValuesDeepNestingFragment","SettingsPreviousValuesDeepNestingFragment","InventoryDeepNestingFragment","SettingsSubscriptionPayloadDeepNestingFragment","TagDeepNestingFragment","SmsMessageConnectionDeepNestingFragment","TaskReactionDeepNestingFragment","SmsMessageEdgeDeepNestingFragment","TeamMemberDeepNestingFragment","SmsMessagePreviousValuesDeepNestingFragment","TourneyDeepNestingFragment","SmsMessageSubscriptionPayloadDeepNestingFragment","PageInfoDeepNestingFragment","SmsProviderConnectionDeepNestingFragment","AggregateChatMessageReadedDeepNestingFragment","SmsProviderEdgeDeepNestingFragment","NotificationTypeEdgeDeepNestingFragment","SmsProviderPreviousValuesDeepNestingFragment","GameConnectionDeepNestingFragment","SmsProviderSubscriptionPayloadDeepNestingFragment","AggregateTournamentDeepNestingFragment","TagPreviousValuesDeepNestingFragment","VoteEdgeDeepNestingFragment","TagSubscriptionPayloadDeepNestingFragment","CallRequestConnectionDeepNestingFragment","TaskMemberConnectionDeepNestingFragment","AggregateProjectMemberDeepNestingFragment","TaskMemberEdgeDeepNestingFragment","TaskReactionEdgeDeepNestingFragment","TaskMemberPreviousValuesDeepNestingFragment","RouteConnectionDeepNestingFragment","TaskMemberSubscriptionPayloadDeepNestingFragment","AggregateEthBlockDeepNestingFragment","TestPreviousValuesDeepNestingFragment","ProjectEdgeDeepNestingFragment","TestSubscriptionPayloadDeepNestingFragment","UserConnectionDeepNestingFragment","UserGroupConnectionDeepNestingFragment","TaskResponseDeepNestingFragment","UserGroupEdgeDeepNestingFragment","UserResponseDeepNestingFragment","UserGroupPreviousValuesDeepNestingFragment","TaskReactionResponseDeepNestingFragment","UserGroupSubscriptionPayloadDeepNestingFragment","ResourcePreviousValuesDeepNestingFragment","VotePreviousValuesDeepNestingFragment","ResourceDeepNestingFragment","VoteSubscriptionPayloadDeepNestingFragment","ChatRoomInvitationDeepNestingFragment","SmsMessageResponseDeepNestingFragment","PositionDeepNestingFragment","SmsProviderResponseDeepNestingFragment","NoticeConnectionDeepNestingFragment","MarketplaceAuthResponseDeepNestingFragment","GameResultEdgeDeepNestingFragment","ChatMessageReadedResponseDeepNestingFragment","AggregateEthAccountDeepNestingFragment","GameResponseDeepNestingFragment","TaskConnectionDeepNestingFragment","GameResultResponseDeepNestingFragment","TestEdgeDeepNestingFragment","TournamentResponseDeepNestingFragment","AggregateTemplateDeepNestingFragment","TournamentGroupResponseDeepNestingFragment","AuthPayloadDeepNestingFragment","TourneyResponseDeepNestingFragment","WorldPreviousValuesDeepNestingFragment","EthBlockResponseDeepNestingFragment","TemplateDeepNestingFragment","EthContractSourceResponseDeepNestingFragment","ResourceEdgeDeepNestingFragment","EthPersonalAccountResponseDeepNestingFragment","TourneyConnectionDeepNestingFragment","IceCandidateDeepNestingFragment","AggregateTeamMemberDeepNestingFragment","PositionResponseDeepNestingFragment","EthPersonalAccountDeepNestingFragment","ProjectMemberResponseDeepNestingFragment","UserDeepNestingFragment","AggregateResourceTagDeepNestingFragment","TeamMemberResponseDeepNestingFragment","TeamResponseDeepNestingFragment","ServiceCategoryResponseDeepNestingFragment","ServiceResponseDeepNestingFragment","PositionEdgeDeepNestingFragment","EthContractSourceDeepNestingFragment","ChatRoomResponseDeepNestingFragment","EthContractSourceConnectionDeepNestingFragment","PageLayout","content","Object","get","getPrototypeOf","prototype","this","call","style","padding","maxWidth","margin","height","PrismaCmsPageLayout","propTypes","UserLink","PropTypes","func","isRequired","TaskLink","Editor","ProjectLink","childContextTypes","defaultProps","UsersPageView","_PrismaCmsUsersPageVi","classCallCheck","possibleConstructorReturn","apply","arguments","inherits","createClass","key","value","_this$props","props","filters","setFilters","lib_App_default","queryName","_this$context","context","Link","numeric","disablePadding","label","renderer","record","user","moment","format","output","username","length","projects","map","n","object","listProjects","splice","moreProjects","react","reduce","b","to","index_es","variant","Project","PrismaCmsUsersPageView","withStyles","styles","View_UsersPageView","UsersPage","_PrismaCmsUsersPage","meta","title","PrismaCmsUsersPage","View","uri","history","router","newUri","clone","JSON","stringify","undefined","error","console","hasQuery","setQuery","addQuery","removeQuery","url","resource","push","_this","propsWhere","where","other","objectWithoutProperties","query","parse","AND","_default","UsersPage_UsersPage","assign","orderBy","Page","notificationsQuery","gql","_templateObject","UserNotificationTypes","data","inEditMode","currentUser","Grid","CheckBox","loading","objects","NotificationTypes","name","comment","item","xs","checked","findIndex","onChange","_ref","asyncToGenerator","regenerator_default","mark","_callee","event","mutate","action","wrap","_context","prev","next","target","variables","defineProperty","stop","_x","container","spacing","Component","contextType","Context","compose","graphql","ChatRooms","ChatRoomsProto","ChatRoomsByUser","classes","userId","fullname","sendMessage","currentUserId","society_lib_App","cacheKey","Room","onSave","result","response","rootId","root","message","ChatRooms_ChatRooms","Members_some","theme","ChatRooms_ChatRoomsByUser","locales","ru","values","Your wallet","User's wallet","Address","Balance","Send","Error while creating wallet","Top up","You may","create new wallet","or","set existing","Attention","We are not liable for any transactions and losses from ethereum wallets.","This wallet is not a wallet in the literal sense of the word, but a link to your personal address in the system","Close","Read more","in wikipedia","A new ethereum wallet will be created for you. The database will only save its public address, without any access keys.","Generate private key","Private key","The address will be determined by the private key","Send data to your email","If you don't know exactly what it is and how it works, you'd better not start it now, but try to get a better idea about this system.","We do not store your private keys. The key is needed only to get the address of your wallet and make sure that you have access to it. No key will be shown.","Private key must start with 0x","Could not decrypt private key","The received address does not match the address of your wallet","No account received","Your personal ethereum wallet will be replenished. The balance will be displayed on the site, but we have no control over your wallet and actions with it.","Enter your private key to make sure you have access to your wallet. Otherwise, you will transfer funds and you can not pick them up later.","We do not accept payment for the replenishment of the wallet. For replenishment, you can choose any service for the purchase of ethereum cryptocurrency.","We advise to use the service","since they have a minimum replenishment amount of just 0.01 etherium, and we ourselves paid, they did not deceive us","en","Приватный ключ должен начинаться с 0x","WalletBalances","_PrismaCmsComponent","state","objectSpread","showTopupBalanceForm","showForm","createInRequest","ethWalletPKSendEmail","showInfo","checkStatus","showSendEthForm","sendEthInRequest","amount","sendPrivateKey","sendSuccessTransaction","initLocales","_importWallet","_callee2","updateUserProcessor","_this$state","ethWalletPK","_this2","_context2","abrupt","setState","mutation","loadApiData","catch","_createWallet","_callee3","web3","account","_context3","Web3","givenProvider","eth","accounts","create","utils","randomHex","privateKey","addError","lexicon","errorMessage","address","ethAccount","ethWalletPKCheck","test","privateKeyToAccount","_sendEth","_callee4","createEthTransactionProcessor","_this$state2","_this3","_context4","type","parseFloat","success","transaction","_this4","children","TransactionLink","_ref5","balance","_this$state3","_ref6","currentUserEthAccounts","EthAccounts","currentUserEthAccount","currentUserBalance","actions","href","color","className","paragraph","alignItems","renderField","helperText","fullWidth","_this4$setState","_event$target","disabled","onClick","checkWallet","Check_default","rel","textSuccess","fieldProps","react_number_format_es","customInput","TextField","_event$target2","_event$target3","Progress","sendEth","Send_default","_locales2","form","","size","createWallet","_event$target4","importWallet","preventDefault","component","Help_default","join","AccountBalanceWallet_default","icon","PrismaCmsComponent","any","border","&.success","borderColor","&.failure","palette","primary","marginTop","marginBottom","Balances_WalletBalances","UserEthWallet","ownWallet","Balances","UserPageView","ethWallet","getObjectWithMutations","getEthAccount","isInEditMode","ethAccountList","md","EthWallet","renderAvatar","MetamaskAccount_default","UserAuthed","View_ChatRooms","View_NotificationTypes","_this$context2","_ref3","changePassword","objectDestructuringEmpty","getWalletAddress","width","opacity","cursor","getTextField","Groups_default","UserPageViewProto","UserPage","UserPage_default","customStyles","#root &","boxShadow","& table","& thead, tbody","& td, th","& thead","& th","textAlign","& tbody","& tr","&:hover","backgroundColor","ObjectsListView","columnData","Pagination","page","withPagination","_this$props$data","objectsConnection","limit","first","edges","_ref2$count","aggregate","count","Grid_default","total","TableView","bool","PageNotFound","status","Typography_default","string","ForumView","activeTag","tag","topicColumn","Tags","tagsList","Tag","ui_src","textClassName","tags","alignCenter","users","CreatedBy","Comments","usersWrapper","showName","member","updatedAt","date","latestComment","commentDate","fromNow","refetch","_this$props2","_this$props3","background","default","whiteSpace","display","view_ForumView","topicFragment","topicsListFragment","topicsFullFragment","topicsConnectionQuery","query_templateObject","topicQuery","_templateObject2","createTopicProcessor","_templateObject3","updateTopicProcessor","_templateObject4","TopicsConnector","TopicsQuery","TopicConnector","TopicQuery","ForumConnector","_Component","skip","tagName","_uri$query","parseInt","getCommentsText","TopicsPage","_Page","esm_extends","getQueryFragment","view_forum","NewComment","createCommentProcessor","Comment","UpdateComment","updateCommentProcessor","TopicComments","commentData","topic","topicId","comments","_dirty","blocks","text","depth","inlineStyleRanges","entityRanges","entityMap","topicID","log","TopicBlogView","opened","BlogLink","Autocomplete","getFilters","updateObject","name_contains","items","find","displayValue","inputProps","trim","onDelete","blogID","onMenuVisibilityChange","onSelect","viewElement","RemoveRedEye_default","TopicBlog","resources","Renderer","Topic","Blog","blogId","number","TopicView","addMessage","sudo","_ref2","createdById","getObject","topic_tags","createdAt","header","ui_Grid_default","avatarProps","withAvatar","getTitle","Blog_TopicBlog","getButtons","fullView","errors","allow_edit","canEdit","react_editor","readOnly","rawContent","view_Comments","renderDefaultView","EditableView","& pre","bullet","view_TopicView","TopicPage","longtitle","canonical","_404_PageNotFound","_props$getCommentsTex","query_TopicConnector","TopicCreatePage","_TopicPage","_getPrototypeOf2","_len","args","Array","_key","pathname","replace","CreatePage","Create_TopicCreatePage","TagView","forum","Tags_some","TagPage","BlogsPageView","ChatMessageLink","ChatRoomLink","List_BlogsPageView","ListPageLayout","BlogsPage","resourcesConnection","type_in","getPaginationParams","addObject","ListPage","blogFragment","blogsListFragment","blogFullFragment","blogsConnectionQuery","Blogs_query_templateObject","blogQuery","query_templateObject2","BlogConnector","BlogsQuery","BlogQuery","BlogView","_ref4","_this$getObjectWithMu","View_BlogView","BlogPage","options","updateBlogProcessor","client","blog","blogName","Blogs_Blog","BlogCreatePage","_BlogPage","createBlogProcessor","Create_BlogCreatePage","resourceFragment","resourcesListFragment","resourcesConnectionQuery","Comments_query_templateObject","resourceQuery","Comments_query_templateObject2","CommentsConnector","ResourcesQuery","ResourceQuery","CommentsView","Comments_List","linkType","CommentsPage","CommentPage","CommentTarget","topicName","Comment_UpdateComment","Comments_Comment","query_Comment","createProjectProcessor","Projects_query_templateObject","updateProjectProcessor","Projects_query_templateObject2","projectFragment","projectsListFragment","projectsConnectionQuery","query_templateObject3","projectQuery","query_templateObject4","projectResourceQuery","_templateObject5","ProjectsConnector","ProjectsQuery","ProjectResource","ProjectQuery","ProjectResourceQuery","baseStyles","thumb","imageOpened","memberLinks","& > div","marginRight","inputRoot","marginLeft","ProjectView","_PrismaCmsCooperation","handleOpen","image","open","openedImage","handleClose","singleUpload","path","editMembers","developer_id","companies","_object$developer_uri","developer_uri","developer_title","Members","createdby","Resource","_isDirty","_errors","newImage","Image","project_members","members","User","extras","extra","Chip_default","pagetitle","dialog_actions","Button_default","secondary","Card_default","Card","es","onUpload","src","flexWrap","textDecoration","renderTasks","Dialog_default","onClose","modal","contentStyle","autoScrollBodyContent","PrismaCmsCooperationProjectView","showDetails","tasksLimit","Project_ProjectView","createTimerProcessor","Timers_query_templateObject","updateTimerProcessor","Timers_query_templateObject2","timerFragment","timersListFragment","timersConnectionQuery","Timers_query_templateObject3","timerQuery","Timers_query_templateObject4","TimerView","TimersQuery","TimerQuery","timerId","stopedAt","buttons","stopTimer","Stop_default","Date","openLoginForm","Task","timer","Timer_TimerView","UpdateTimer","Timer","TimersList","timers","createTaskProcessor","Tasks_query_templateObject","updateTaskProcessor","Tasks_query_templateObject2","taskFragment","tasksListFragment","tasksConnectionQuery","Tasks_query_templateObject3","taskQuery","Tasks_query_templateObject4","TasksQuery","TaskQuery","TaskView","_EditableView","_saveObject","createTask","updateTask","getMutation","sent","createTimer","updateTimer","taskId","Timers","activeTimers","filter","activeTimer","button","connect","PlayArrow_default","_ref7","collaborators","task","details","startDatePlaning","endDatePlaning","startDate","endDate","Timers_View_List","processors","Task_TaskView","renderActiveTimers","CooperatorTaskView","Tasks_Task_TaskView","TasksList","tasks","index","Tasks_Task","projectId","Tasks","Project_Tasks","BaseProjectView","List_Project_ProjectView","UpdateProject","ProjectsList","sm","lg","ProjectsView","Projects_View_List","renderFilters","ProjectsPage","CreateProject","ProjectPage","project","Mutation","Projects_Project","CreateProjectPage","Project_ProjectPage","TasksPage","cooperation_lib_App","TaskPage","Task_default","CreateTaskPage","params","pages_Tasks_Task","TimersPage","TimerPage","Timer_UpdateTimer","TransactionsPage","ethereum_lib_App","TransactionPage","ChatRoomsPage","ChatRoomPage","ChatRoom_default","CreateChatRoomPage","ChatMessagesPage","ChatMessagePage","SubscriptionProvider","subscriptions","subscribe","unsubscribe","localStorage","Promise","contextTypes","Lesson1Page","handleClick","handleRequestClose","assertThisInitialized","vertical","horizontal","Snackbar_default","anchorOrigin","SnackbarContentProps","aria-describedby","es_Link","ContextProvider","prepareQuery","UI","context_lib_App_default","Provider","prepareUserQuery","prepareResourcesQuery","prepareTaskQuery","prepareTimerQuery","prepareProjectQuery","queryFragments","userFragment","usersConnection","createUserProcessor","deleteUser","deleteManyUsers","_this$context$queryFr","tasksConnection","taskStatusEnum","timersConnection","projectsConnection","MainMenu","logout","AppBar_default","link","Language_default","webrtc_lib_App","User_default","Signin","Signout","Chats","Users","Ethereum","API Schema","defaultStyles","position","flex","menuButton","MainMenu_MainMenu","getEditorContext","panelButton","parent","pages_UsersPage_UserPage","EditorComponent","Name","UserMenuItem","Link_User","_values","Topics","Blogs","Toolbar_default","Create_default","User_UserMenuItem","mainMenu_MainMenu","OldPageHeader","mainMenu","OldPages","oldRoutes","Switch","Route","SwitchTemplateLink","components","ListView","Consumer","templateId","CreateUserPage","createUser","UsersPage_UserPage_View","UserPage_Create","_EditorComponent","EditableObject","child","_Resource","App_context","Topic_TopicView","ResourceField","ResourceFields","ResourceFieldsProxy","objectContext","_EditorComponent2","addItem","_this$objectContext","customComponents","_this$getEditorContex5","Components","objectInEditMode","activeItem","setActiveItem","Fields_ResourceFieldsProxy","mode","RichTextCustom","_RichText","RichText","ResourceContent","_this$getEditorContex2","_this$getComponentPro","getComponentProps","getEditor","Youtube","onBeforeDrop","canBeDropped","dragItem","panelYoutube","settings","inner","renderComponent","description","paddingTop","overflow","frameborder","allow","allowfullscreen","top","left","updateComponentProps","pages_society_ChatRooms","ChatRoom","otherContext","ChatRoom_View_default","CustomComponents","RootPage","Root_default","BoilerplateRenderer","_PrismaCmsRenderer","routeIndex","baseRoutes","mainPageIndex","startsWith","exact","commentOldID","Topics_Topic","Tags_Tag","ProjectCreatePage","TaskCreatePage","cooperation_Tasks_Task","Transactions","ReactLesson1","society_ChatRooms_ChatRoom","ChatMessage","GraphqlVoyagerPage","TemplatesPage","Template_default","components_Renderer_MainMenu","iceServers","urls","credential","schema","getRoutes__","resource_lib_App","front_editor_lib_App","connectionProps","Renderer_ContextProvider","dangerouslySetInnerHTML","__html","SubscriptionProvider_SubscriptionProvider","PrismaCmsRenderer","_theme$typography","typography","fontFamily","fontSize","flexDirection","& #Renderer--body","zIndex","body","Renderer_BoilerplateRenderer",".","./","./GraphQLLanguageService","./GraphQLLanguageService.js","./GraphQLLanguageService.js.flow","./autocompleteUtils","./autocompleteUtils.js","./autocompleteUtils.js.flow","./getAutocompleteSuggestions","./getAutocompleteSuggestions.js","./getAutocompleteSuggestions.js.flow","./getDefinition","./getDefinition.js","./getDefinition.js.flow","./getDiagnostics","./getDiagnostics.js","./getDiagnostics.js.flow","./getHoverInformation","./getHoverInformation.js","./getHoverInformation.js.flow","./getOutline","./getOutline.js","./getOutline.js.flow","./index","./index.js","./index.js.flow","webpackContext","webpackContextResolve","ModxclubApp","themeOptions","uiTheme","direction","paletteType","_disk_kingstone_var_www_prisma_cms_com_prisma_cms_com_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_6__","createMuiTheme","_disk_kingstone_var_www_prisma_cms_com_prisma_cms_com_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","nprogress","blue","main","darken","pink","A400","display1","process","browser","global","getTheme","PrismaApp"],"mappings":"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","file":"static/js/main.59b1a5a7.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1478;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n\n  // navigator.serviceWorker\n  //   .register(swUrl)\n  //   .then(registration => {\n  //     registration.onupdatefound = () => {\n  //       const installingWorker = registration.installing;\n  //       if (installingWorker == null) {\n  //         return;\n  //       }\n  //       installingWorker.onstatechange = () => {\n  //         if (installingWorker.state === 'installed') {\n  //           if (navigator.serviceWorker.controller) {\n  //             // At this point, the updated precached content has been fetched,\n  //             // but the previous service worker will still serve the older\n  //             // content until all client tabs are closed.\n  //             console.log(\n  //               'New content is available and will be used when all ' +\n  //               'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n  //             );\n\n  //             // Execute callback\n  //             if (config && config.onUpdate) {\n  //               config.onUpdate(registration);\n  //             }\n  //           } else {\n  //             // At this point, everything has been precached.\n  //             // It's the perfect time to display a\n  //             // \"Content is cached for offline use.\" message.\n  //             console.log('Content is cached for offline use.');\n\n  //             // Execute callback\n  //             if (config && config.onSuccess) {\n  //               config.onSuccess(registration);\n  //             }\n  //           }\n  //         }\n  //       };\n  //     };\n  //   })\n  //   .catch(error => {\n  //     console.error('Error during service worker registration:', error);\n  //   });\n\n  navigator.serviceWorker\n    .register(\"push.worker.js\")\n    .then(registration => {\n      console.log(\"registered push.worker.js\", registration);\n\n      function urlB64ToUint8Array(base64String) {\n        const padding = '='.repeat((4 - base64String.length % 4) % 4);\n        const base64 = (base64String + padding)\n          .replace(/\\-/g, '+')\n          .replace(/_/g, '/');\n\n        const rawData = window.atob(base64);\n        const outputArray = new Uint8Array(rawData.length);\n\n        for (let i = 0; i < rawData.length; ++i) {\n          outputArray[i] = rawData.charCodeAt(i);\n        }\n        return outputArray;\n      }\n\n\n      function subscribeUser() {\n\n        const applicationServerPublicKey = \"BDDjn9yst9WhHLgEYbhFjP8HNXwLXhW6tdlr37gjedk_2Gbnzdq9NrlMLDuQIMw25ZM3VTiSaepr0JLAvMDmTlU\";\n\n        const applicationServerKey = urlB64ToUint8Array(applicationServerPublicKey);\n        registration.pushManager.subscribe({\n          userVisibleOnly: true,\n          applicationServerKey: applicationServerKey\n        })\n          .then(function (subscription) {\n            console.log('User is subscribed.');\n\n            // updateSubscriptionOnServer(subscription);\n\n            // isSubscribed = true;\n\n            // updateBtn();\n          })\n          .catch(function (err) {\n            console.log('Failed to subscribe the user: ', err);\n            // updateBtn();\n          });\n      }\n\n      console.log(\"subscribeUser\", subscribeUser);\n\n      registration.pushManager.getSubscription()\n        .then(function (subscription) {\n          const isSubscribed = !(subscription === null);\n\n          // updateSubscriptionOnServer(subscription);\n\n          if (isSubscribed) {\n            console.log('User IS subscribed.');\n          } else {\n            console.log('User is NOT subscribed.');\n          }\n\n          // updateBtn();\n        });\n\n    })\n    .catch(error => {\n      console.error('Error during service push.worker.js registration:', error);\n    });\n\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n\n// import { Component } from \"react\";\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\n// import {App as PrismaApp} from \"@prisma-cms/front\";\n\n// import Renderer from \"./components/Renderer\";\n\n// import * as queryFragments from \"./schema/generated/api.fragments\";\n\n// export {\n//   Renderer,\n//   queryFragments,\n// }\n\n// export default class App extends PrismaApp {\n\n//   static defaultProps = {\n//     ...PrismaApp.defaultProps,\n//     Renderer,\n//     queryFragments,\n//     lang: \"ru\",\n//     themeOptions: {\n//       direction: 'ltr',\n//       paletteType: 'light',\n//     },\n//   }\n\n// }\n\nimport App from \"./components/App\";\n\nexport default App;\n","\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport PrismaCms from \"@prisma-cms/front\";\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App, {\n  // queryFragments,\n} from \"./App\";\n\nimport {\n  UserNoNestingFragment,\n} from \"./schema/generated/api.fragments\";\n\n\nconst node = document.getElementById('root');\n\nif (node) {\n\n  ReactDOM.render(<PrismaCms\n    App={App}\n    apolloOptions={{\n      endpoint: \"https://api.prisma-cms.com/\",\n      apiQuery: `{\n        user:me{\n          ...UserNoNesting\n          EthAccounts {\n            id\n            address\n            balance(convert:ether)\n          }\n        } \n      }\n      ${UserNoNestingFragment}\n      `,\n    }}\n    // queryFragments={queryFragments}\n  />, node);\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n\n}\n\n\n","// THIS FILE HAS BEEN AUTO-GENERATED BY \"graphql-cli-generate-fragments\"\n// DO NOT EDIT THIS FILE DIRECTLY\n\nexport const ChatRoomPreviousValuesFragment = `fragment ChatRoomPreviousValues on ChatRoomPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  image\n  code\n  isPublic\n}\n`\n\nexport const RouteResponseFragment = `fragment RouteResponse on RouteResponse {\n  success\n  message\n  data {\n    ...RouteNoNesting\n  }\n}\n`\n\nexport const NoticeSubscriptionPayloadFragment = `fragment NoticeSubscriptionPayload on NoticeSubscriptionPayload {\n  mutation\n  node {\n    ...NoticeNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...NoticePreviousValuesNoNesting\n  }\n}\n`\n\nexport const UserGroupFragment = `fragment UserGroup on UserGroup {\n  id\n  name\n  Users {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const NoticePreviousValuesFragment = `fragment NoticePreviousValues on NoticePreviousValues {\n  id\n  createdAt\n  type\n}\n`\n\nexport const WorldFragment = `fragment World on World {\n  createdAt\n  updatedAt\n  CreatedBy {\n    ...UserNoNesting\n  }\n  id\n  name\n  seed\n  type\n  time\n  timeChanger\n  days\n  lastPlayed\n  changedBlocks {\n    ...BlockNoNesting\n  }\n  players {\n    ...PlayerNoNesting\n  }\n  messages {\n    ...MessageNoNesting\n  }\n}\n`\n\nexport const GameSubscriptionPayloadFragment = `fragment GameSubscriptionPayload on GameSubscriptionPayload {\n  mutation\n  node {\n    ...GameNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...GamePreviousValuesNoNesting\n  }\n}\n`\n\nexport const PlayerFragment = `fragment Player on Player {\n  createdAt\n  updatedAt\n  id\n  isAdmin\n  gamemode\n  user {\n    ...UserNoNesting\n  }\n  world {\n    ...WorldNoNesting\n  }\n  lastLogin\n  x\n  y\n  z\n  dirx\n  diry\n  inventory {\n    ...InventoryNoNesting\n  }\n}\n`\n\nexport const GamePreviousValuesFragment = `fragment GamePreviousValues on GamePreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  start_date\n  end_date\n  sequence\n}\n`\n\nexport const MessageFragment = `fragment Message on Message {\n  id\n  world {\n    ...WorldNoNesting\n  }\n  type\n  sender\n  body\n}\n`\n\nexport const GameResultSubscriptionPayloadFragment = `fragment GameResultSubscriptionPayload on GameResultSubscriptionPayload {\n  mutation\n  node {\n    ...GameResultNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...GameResultPreviousValuesNoNesting\n  }\n}\n`\n\nexport const LogedInFragment = `fragment LogedIn on LogedIn {\n  id\n  createdAt\n  fake\n  User {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const GameResultPreviousValuesFragment = `fragment GameResultPreviousValues on GameResultPreviousValues {\n  id\n  createdAt\n  updatedAt\n  date\n  name\n  value\n}\n`\n\nexport const FileFragment = `fragment File on File {\n  id\n  path\n  name\n  filename\n  mimetype\n  encoding\n  hash\n  size\n  CreatedBy {\n    ...UserNoNesting\n  }\n  ImageResource {\n    ...ResourceNoNesting\n  }\n}\n`\n\nexport const TournamentSubscriptionPayloadFragment = `fragment TournamentSubscriptionPayload on TournamentSubscriptionPayload {\n  mutation\n  node {\n    ...TournamentNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...TournamentPreviousValuesNoNesting\n  }\n}\n`\n\nexport const ResourceTagFragment = `fragment ResourceTag on ResourceTag {\n  id\n  createdAt\n  updatedAt\n  status\n  Resource {\n    ...ResourceNoNesting\n  }\n  Tag {\n    ...TagNoNesting\n  }\n  CreatedBy {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const TournamentPreviousValuesFragment = `fragment TournamentPreviousValues on TournamentPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n}\n`\n\nexport const ServiceFragment = `fragment Service on Service {\n  id\n  name\n  description\n  code\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Projects {\n    ...ProjectMemberNoNesting\n  }\n  Parent {\n    ...ServiceNoNesting\n  }\n  Childs {\n    ...ServiceNoNesting\n  }\n  rank\n  Category {\n    ...ServiceCategoryNoNesting\n  }\n  oldID\n  Resource {\n    ...ResourceNoNesting\n  }\n}\n`\n\nexport const TournamentGroupSubscriptionPayloadFragment = `fragment TournamentGroupSubscriptionPayload on TournamentGroupSubscriptionPayload {\n  mutation\n  node {\n    ...TournamentGroupNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...TournamentGroupPreviousValuesNoNesting\n  }\n}\n`\n\nexport const ProjectFragment = `fragment Project on Project {\n  id\n  name\n  domain\n  PrismaTemplates {\n    ...TemplateNoNesting\n  }\n  PrismaUsers {\n    ...UserNoNesting\n  }\n  PrismaResources {\n    ...ResourceNoNesting\n  }\n  createdAt\n  updatedAt\n  description\n  url\n  Members {\n    ...ProjectMemberNoNesting\n  }\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Tasks {\n    ...TaskNoNesting\n  }\n  Team {\n    ...TeamNoNesting\n  }\n  Customers {\n    ...TeamNoNesting\n  }\n  ChatRoom {\n    ...ChatRoomNoNesting\n  }\n  sequence\n  content\n  contentText\n  status\n  public\n  EthAccounts {\n    ...EthAccountNoNesting\n  }\n  oldID\n  Image {\n    ...FileNoNesting\n  }\n  Resource {\n    ...ResourceNoNesting\n  }\n}\n`\n\nexport const TournamentGroupPreviousValuesFragment = `fragment TournamentGroupPreviousValues on TournamentGroupPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n}\n`\n\nexport const TaskFragment = `fragment Task on Task {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  content\n  status\n  Project {\n    ...ProjectNoNesting\n  }\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Members {\n    ...TaskMemberNoNesting\n  }\n  Parent {\n    ...TaskNoNesting\n  }\n  Childs {\n    ...TaskNoNesting\n  }\n  RelatedFrom {\n    ...TaskNoNesting\n  }\n  RelatedTo {\n    ...TaskNoNesting\n  }\n  startDatePlaning\n  endDatePlaning\n  startDate\n  endDate\n  Timers {\n    ...TimerNoNesting\n  }\n  Reactions {\n    ...TaskReactionNoNesting\n  }\n  ChatRoom {\n    ...ChatRoomNoNesting\n  }\n}\n`\n\nexport const TourneySubscriptionPayloadFragment = `fragment TourneySubscriptionPayload on TourneySubscriptionPayload {\n  mutation\n  node {\n    ...TourneyNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...TourneyPreviousValuesNoNesting\n  }\n}\n`\n\nexport const TimerFragment = `fragment Timer on Timer {\n  id\n  createdAt\n  stopedAt\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Task {\n    ...TaskNoNesting\n  }\n}\n`\n\nexport const TourneyPreviousValuesFragment = `fragment TourneyPreviousValues on TourneyPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  date\n}\n`\n\nexport const ChatRoomFragment = `fragment ChatRoom on ChatRoom {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  image\n  code\n  Members {\n    ...UserNoNesting\n  }\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Messages {\n    ...ChatMessageNoNesting\n  }\n  isPublic\n  Invitations {\n    ...ChatRoomInvitationNoNesting\n  }\n  CallRequests {\n    ...CallRequestNoNesting\n  }\n  Task {\n    ...TaskNoNesting\n  }\n  Project {\n    ...ProjectNoNesting\n  }\n}\n`\n\nexport const EthTransactionSubscriptionPayloadFragment = `fragment EthTransactionSubscriptionPayload on EthTransactionSubscriptionPayload {\n  mutation\n  node {\n    ...EthTransactionNoNesting\n  }\n}\n`\n\nexport const ChatMessageReadedFragment = `fragment ChatMessageReaded on ChatMessageReaded {\n  id\n  createdAt\n  Message {\n    ...ChatMessageNoNesting\n  }\n  User {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const CallRequestSubscriptionPayloadFragment = `fragment CallRequestSubscriptionPayload on CallRequestSubscriptionPayload {\n  mutation\n  node {\n    ...CallRequestNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...CallRequestPreviousValuesNoNesting\n  }\n}\n`\n\nexport const NoticeFragment = `fragment Notice on Notice {\n  id\n  createdAt\n  type\n  User {\n    ...UserNoNesting\n  }\n  CreatedBy {\n    ...UserNoNesting\n  }\n  ChatMessage {\n    ...ChatMessageNoNesting\n  }\n  ChatRoomInvitation {\n    ...ChatRoomInvitationNoNesting\n  }\n}\n`\n\nexport const CallRequestPreviousValuesFragment = `fragment CallRequestPreviousValues on CallRequestPreviousValues {\n  id\n  called_descriptions\n  caller_descriptions\n  status\n  startedAt\n  endedAt\n}\n`\n\nexport const TeamFragment = `fragment Team on Team {\n  id\n  name\n  Parent {\n    ...TeamNoNesting\n  }\n  Childs {\n    ...TeamNoNesting\n  }\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Members {\n    ...TeamMemberNoNesting\n  }\n  Projects {\n    ...ProjectNoNesting\n  }\n  OrderedProjects {\n    ...ProjectNoNesting\n  }\n  status\n  oldID\n  address\n  website\n  email\n  phone\n  Resource {\n    ...ResourceNoNesting\n  }\n}\n`\n\nexport const PositionSubscriptionPayloadFragment = `fragment PositionSubscriptionPayload on PositionSubscriptionPayload {\n  mutation\n  node {\n    ...PositionNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...PositionPreviousValuesNoNesting\n  }\n}\n`\n\nexport const EthAccountFragment = `fragment EthAccount on EthAccount {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  address\n  type\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Transaction {\n    ...EthTransactionNoNesting\n  }\n  IncomeTransactions {\n    ...EthTransactionNoNesting\n  }\n  OutcomeTransactions {\n    ...EthTransactionNoNesting\n  }\n  source\n  bytecode\n  abi\n  ContractSource {\n    ...EthContractSourceNoNesting\n  }\n  BlocksMined {\n    ...EthBlockNoNesting\n  }\n  Project {\n    ...ProjectNoNesting\n  }\n  Resources {\n    ...ResourceNoNesting\n  }\n  UserAuthed {\n    ...UserNoNesting\n  }\n  balance\n}\n`\n\nexport const PositionPreviousValuesFragment = `fragment PositionPreviousValues on PositionPreviousValues {\n  id\n  code\n  name\n}\n`\n\nexport const EthBlockFragment = `fragment EthBlock on EthBlock {\n  id\n  createdAt\n  updatedAt\n  hash\n  number\n  difficulty\n  totalDifficulty\n  extraData\n  gasLimit\n  gasUsed\n  mixHash\n  nonce\n  parentHash\n  receiptsRoot\n  sha3Uncles\n  size\n  stateRoot\n  date\n  Miner {\n    ...EthAccountNoNesting\n  }\n  Transactions {\n    ...EthTransactionNoNesting\n  }\n  transactionsRoot\n  transactions_count\n  Uncles {\n    ...EthBlockNoNesting\n  }\n}\n`\n\nexport const ProjectMemberSubscriptionPayloadFragment = `fragment ProjectMemberSubscriptionPayload on ProjectMemberSubscriptionPayload {\n  mutation\n  node {\n    ...ProjectMemberNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...ProjectMemberPreviousValuesNoNesting\n  }\n}\n`\n\nexport const ServiceCategoryFragment = `fragment ServiceCategory on ServiceCategory {\n  id\n  name\n  description\n  code\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Services {\n    ...ServiceNoNesting\n  }\n  Parent {\n    ...ServiceCategoryNoNesting\n  }\n  Childs {\n    ...ServiceCategoryNoNesting\n  }\n}\n`\n\nexport const ProjectMemberPreviousValuesFragment = `fragment ProjectMemberPreviousValues on ProjectMemberPreviousValues {\n  id\n  status\n}\n`\n\nexport const GameFragment = `fragment Game on Game {\n  id\n  createdAt\n  updatedAt\n  name\n  start_date\n  end_date\n  sequence\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Tourney {\n    ...TourneyNoNesting\n  }\n  Users {\n    ...UserNoNesting\n  }\n  Teams {\n    ...TeamNoNesting\n  }\n  Parent {\n    ...GameNoNesting\n  }\n  Childs {\n    ...GameNoNesting\n  }\n  Results {\n    ...GameResultNoNesting\n  }\n}\n`\n\nexport const ServiceSubscriptionPayloadFragment = `fragment ServiceSubscriptionPayload on ServiceSubscriptionPayload {\n  mutation\n  node {\n    ...ServiceNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...ServicePreviousValuesNoNesting\n  }\n}\n`\n\nexport const TournamentFragment = `fragment Tournament on Tournament {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Tourneys {\n    ...TourneyNoNesting\n  }\n  Group {\n    ...TournamentGroupNoNesting\n  }\n}\n`\n\nexport const ServicePreviousValuesFragment = `fragment ServicePreviousValues on ServicePreviousValues {\n  id\n  name\n  description\n  code\n  rank\n  oldID\n}\n`\n\nexport const GameResultFragment = `fragment GameResult on GameResult {\n  id\n  createdAt\n  updatedAt\n  date\n  name\n  CreatedBy {\n    ...UserNoNesting\n  }\n  User {\n    ...UserNoNesting\n  }\n  Team {\n    ...TeamNoNesting\n  }\n  Game {\n    ...GameNoNesting\n  }\n  value\n}\n`\n\nexport const TaskSubscriptionPayloadFragment = `fragment TaskSubscriptionPayload on TaskSubscriptionPayload {\n  mutation\n  node {\n    ...TaskNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...TaskPreviousValuesNoNesting\n  }\n}\n`\n\nexport const RouteFragment = `fragment Route on Route {\n  id\n  name\n  path\n  exact\n  component\n  Parent {\n    ...RouteNoNesting\n  }\n  Childs {\n    ...RouteNoNesting\n  }\n  CreatedBy {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const TaskPreviousValuesFragment = `fragment TaskPreviousValues on TaskPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  content\n  status\n  startDatePlaning\n  endDatePlaning\n  startDate\n  endDate\n}\n`\n\nexport const WorldConnectionFragment = `fragment WorldConnection on WorldConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...WorldEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateWorldNoNesting\n  }\n}\n`\n\nexport const TaskReactionSubscriptionPayloadFragment = `fragment TaskReactionSubscriptionPayload on TaskReactionSubscriptionPayload {\n  mutation\n  node {\n    ...TaskReactionNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...TaskReactionPreviousValuesNoNesting\n  }\n}\n`\n\nexport const WorldEdgeFragment = `fragment WorldEdge on WorldEdge {\n  node {\n    ...WorldNoNesting\n  }\n  cursor\n}\n`\n\nexport const TaskReactionPreviousValuesFragment = `fragment TaskReactionPreviousValues on TaskReactionPreviousValues {\n  id\n  createdAt\n  updatedAt\n  type\n}\n`\n\nexport const ResourceConnectionFragment = `fragment ResourceConnection on ResourceConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...ResourceEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateResourceNoNesting\n  }\n}\n`\n\nexport const TeamMemberSubscriptionPayloadFragment = `fragment TeamMemberSubscriptionPayload on TeamMemberSubscriptionPayload {\n  mutation\n  node {\n    ...TeamMemberNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...TeamMemberPreviousValuesNoNesting\n  }\n}\n`\n\nexport const AggregateResourceFragment = `fragment AggregateResource on AggregateResource {\n  count\n}\n`\n\nexport const TeamMemberPreviousValuesFragment = `fragment TeamMemberPreviousValues on TeamMemberPreviousValues {\n  id\n  status\n}\n`\n\nexport const ChatMessageReadedEdgeFragment = `fragment ChatMessageReadedEdge on ChatMessageReadedEdge {\n  node {\n    ...ChatMessageReadedNoNesting\n  }\n  cursor\n}\n`\n\nexport const TimerSubscriptionPayloadFragment = `fragment TimerSubscriptionPayload on TimerSubscriptionPayload {\n  mutation\n  node {\n    ...TimerNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...TimerPreviousValuesNoNesting\n  }\n}\n`\n\nexport const ChatRoomConnectionFragment = `fragment ChatRoomConnection on ChatRoomConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...ChatRoomEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateChatRoomNoNesting\n  }\n}\n`\n\nexport const TimerPreviousValuesFragment = `fragment TimerPreviousValues on TimerPreviousValues {\n  id\n  createdAt\n  stopedAt\n}\n`\n\nexport const AggregateChatRoomFragment = `fragment AggregateChatRoom on AggregateChatRoom {\n  count\n}\n`\n\nexport const RouteSubscriptionPayloadFragment = `fragment RouteSubscriptionPayload on RouteSubscriptionPayload {\n  mutation\n  node {\n    ...RouteNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...RoutePreviousValuesNoNesting\n  }\n}\n`\n\nexport const NoticeEdgeFragment = `fragment NoticeEdge on NoticeEdge {\n  node {\n    ...NoticeNoNesting\n  }\n  cursor\n}\n`\n\nexport const RoutePreviousValuesFragment = `fragment RoutePreviousValues on RoutePreviousValues {\n  id\n  name\n  path\n  exact\n  component\n}\n`\n\nexport const NotificationTypeConnectionFragment = `fragment NotificationTypeConnection on NotificationTypeConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...NotificationTypeEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateNotificationTypeNoNesting\n  }\n}\n`\n\nexport const TeamSubscriptionPayloadFragment = `fragment TeamSubscriptionPayload on TeamSubscriptionPayload {\n  mutation\n  node {\n    ...TeamNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...TeamPreviousValuesNoNesting\n  }\n}\n`\n\nexport const AggregateNotificationTypeFragment = `fragment AggregateNotificationType on AggregateNotificationType {\n  count\n}\n`\n\nexport const TeamPreviousValuesFragment = `fragment TeamPreviousValues on TeamPreviousValues {\n  id\n  name\n  status\n  oldID\n  address\n  website\n  email\n  phone\n}\n`\n\nexport const ResourceTagEdgeFragment = `fragment ResourceTagEdge on ResourceTagEdge {\n  node {\n    ...ResourceTagNoNesting\n  }\n  cursor\n}\n`\n\nexport const ProjectSubscriptionPayloadFragment = `fragment ProjectSubscriptionPayload on ProjectSubscriptionPayload {\n  mutation\n  node {\n    ...ProjectNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...ProjectPreviousValuesNoNesting\n  }\n}\n`\n\nexport const TagConnectionFragment = `fragment TagConnection on TagConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...TagEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateTagNoNesting\n  }\n}\n`\n\nexport const ProjectPreviousValuesFragment = `fragment ProjectPreviousValues on ProjectPreviousValues {\n  id\n  name\n  domain\n  createdAt\n  updatedAt\n  description\n  url\n  sequence\n  content\n  contentText\n  status\n  public\n  oldID\n}\n`\n\nexport const AggregateTagFragment = `fragment AggregateTag on AggregateTag {\n  count\n}\n`\n\nexport const TemplateSubscriptionPayloadFragment = `fragment TemplateSubscriptionPayload on TemplateSubscriptionPayload {\n  mutation\n  node {\n    ...TemplateNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...TemplatePreviousValuesNoNesting\n  }\n}\n`\n\nexport const GameEdgeFragment = `fragment GameEdge on GameEdge {\n  node {\n    ...GameNoNesting\n  }\n  cursor\n}\n`\n\nexport const TemplatePreviousValuesFragment = `fragment TemplatePreviousValues on TemplatePreviousValues {\n  id\n  createdAt\n  updatedAt\n  externalKey\n  name\n  description\n  component\n  props\n  components\n  vars\n  rank\n}\n`\n\nexport const GameResultConnectionFragment = `fragment GameResultConnection on GameResultConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...GameResultEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateGameResultNoNesting\n  }\n}\n`\n\nexport const ChatMessageSubscriptionPayloadFragment = `fragment ChatMessageSubscriptionPayload on ChatMessageSubscriptionPayload {\n  mutation\n  node {\n    ...ChatMessageNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...ChatMessagePreviousValuesNoNesting\n  }\n}\n`\n\nexport const AggregateGameResultFragment = `fragment AggregateGameResult on AggregateGameResult {\n  count\n}\n`\n\nexport const ChatMessagePreviousValuesFragment = `fragment ChatMessagePreviousValues on ChatMessagePreviousValues {\n  id\n  createdAt\n  updatedAt\n  content\n  contentText\n}\n`\n\nexport const TournamentEdgeFragment = `fragment TournamentEdge on TournamentEdge {\n  node {\n    ...TournamentNoNesting\n  }\n  cursor\n}\n`\n\nexport const UserSubscriptionPayloadFragment = `fragment UserSubscriptionPayload on UserSubscriptionPayload {\n  mutation\n  node {\n    ...UserNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...UserPreviousValuesNoNesting\n  }\n}\n`\n\nexport const TournamentGroupConnectionFragment = `fragment TournamentGroupConnection on TournamentGroupConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...TournamentGroupEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateTournamentGroupNoNesting\n  }\n}\n`\n\nexport const UserPreviousValuesFragment = `fragment UserPreviousValues on UserPreviousValues {\n  id\n  createdAt\n  updatedAt\n  username\n  email\n  phone\n  showEmail\n  showPhone\n  password\n  fullname\n  image\n  address\n  active\n  activated\n  deleted\n  hidden\n  sudo\n  marketplaceToken\n  oldID\n}\n`\n\nexport const AggregateTournamentGroupFragment = `fragment AggregateTournamentGroup on AggregateTournamentGroup {\n  count\n}\n`\n\nexport const ImportResponseFragment = `fragment ImportResponse on ImportResponse {\n  success\n  message\n  data {\n    ...ImportNoNesting\n  }\n}\n`\n\nexport const TourneyEdgeFragment = `fragment TourneyEdge on TourneyEdge {\n  node {\n    ...TourneyNoNesting\n  }\n  cursor\n}\n`\n\nexport const ImportFragment = `fragment Import on Import {\n  id\n  createdAt\n  updatedAt\n  name\n  status\n  Logs {\n    ...LogNoNesting\n  }\n  CreatedBy {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const VoteConnectionFragment = `fragment VoteConnection on VoteConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...VoteEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateVoteNoNesting\n  }\n}\n`\n\nexport const LogFragment = `fragment Log on Log {\n  id\n  level\n  objectType\n  message\n  stack\n  Import {\n    ...ImportNoNesting\n  }\n}\n`\n\nexport const AggregateVoteFragment = `fragment AggregateVote on AggregateVote {\n  count\n}\n`\n\nexport const AggregateBlockFragment = `fragment AggregateBlock on AggregateBlock {\n  count\n}\n`\n\nexport const EthAccountEdgeFragment = `fragment EthAccountEdge on EthAccountEdge {\n  node {\n    ...EthAccountNoNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateChatRoomInvitationFragment = `fragment AggregateChatRoomInvitation on AggregateChatRoomInvitation {\n  count\n}\n`\n\nexport const EthTransactionConnectionFragment = `fragment EthTransactionConnection on EthTransactionConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...EthTransactionEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateEthTransactionNoNesting\n  }\n}\n`\n\nexport const AggregateFileFragment = `fragment AggregateFile on AggregateFile {\n  count\n}\n`\n\nexport const AggregateEthTransactionFragment = `fragment AggregateEthTransaction on AggregateEthTransaction {\n  count\n}\n`\n\nexport const AggregateImportFragment = `fragment AggregateImport on AggregateImport {\n  count\n}\n`\n\nexport const CallRequestEdgeFragment = `fragment CallRequestEdge on CallRequestEdge {\n  node {\n    ...CallRequestNoNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateInventoryFragment = `fragment AggregateInventory on AggregateInventory {\n  count\n}\n`\n\nexport const PositionConnectionFragment = `fragment PositionConnection on PositionConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...PositionEdgeNoNesting\n  }\n  aggregate {\n    ...AggregatePositionNoNesting\n  }\n}\n`\n\nexport const AggregateLetsadsSmsMessageStatusFragment = `fragment AggregateLetsadsSmsMessageStatus on AggregateLetsadsSmsMessageStatus {\n  count\n}\n`\n\nexport const AggregatePositionFragment = `fragment AggregatePosition on AggregatePosition {\n  count\n}\n`\n\nexport const AggregateLetsadsSmsMessageStatusItemFragment = `fragment AggregateLetsadsSmsMessageStatusItem on AggregateLetsadsSmsMessageStatusItem {\n  count\n}\n`\n\nexport const ProjectMemberEdgeFragment = `fragment ProjectMemberEdge on ProjectMemberEdge {\n  node {\n    ...ProjectMemberNoNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateLetterFragment = `fragment AggregateLetter on AggregateLetter {\n  count\n}\n`\n\nexport const ServiceConnectionFragment = `fragment ServiceConnection on ServiceConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...ServiceEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateServiceNoNesting\n  }\n}\n`\n\nexport const AggregateLogFragment = `fragment AggregateLog on AggregateLog {\n  count\n}\n`\n\nexport const AggregateServiceFragment = `fragment AggregateService on AggregateService {\n  count\n}\n`\n\nexport const AggregateLogedInFragment = `fragment AggregateLogedIn on AggregateLogedIn {\n  count\n}\n`\n\nexport const TaskEdgeFragment = `fragment TaskEdge on TaskEdge {\n  node {\n    ...TaskNoNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateMessageFragment = `fragment AggregateMessage on AggregateMessage {\n  count\n}\n`\n\nexport const TaskReactionConnectionFragment = `fragment TaskReactionConnection on TaskReactionConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...TaskReactionEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateTaskReactionNoNesting\n  }\n}\n`\n\nexport const AggregatePlayerFragment = `fragment AggregatePlayer on AggregatePlayer {\n  count\n}\n`\n\nexport const AggregateTaskReactionFragment = `fragment AggregateTaskReaction on AggregateTaskReaction {\n  count\n}\n`\n\nexport const AggregateResetPasswordFragment = `fragment AggregateResetPassword on AggregateResetPassword {\n  count\n}\n`\n\nexport const TeamMemberEdgeFragment = `fragment TeamMemberEdge on TeamMemberEdge {\n  node {\n    ...TeamMemberNoNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateServiceCategoryFragment = `fragment AggregateServiceCategory on AggregateServiceCategory {\n  count\n}\n`\n\nexport const TimerConnectionFragment = `fragment TimerConnection on TimerConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...TimerEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateTimerNoNesting\n  }\n}\n`\n\nexport const AggregateSettingsFragment = `fragment AggregateSettings on AggregateSettings {\n  count\n}\n`\n\nexport const AggregateTimerFragment = `fragment AggregateTimer on AggregateTimer {\n  count\n}\n`\n\nexport const AggregateSmsMessageFragment = `fragment AggregateSmsMessage on AggregateSmsMessage {\n  count\n}\n`\n\nexport const RouteEdgeFragment = `fragment RouteEdge on RouteEdge {\n  node {\n    ...RouteNoNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateSmsProviderFragment = `fragment AggregateSmsProvider on AggregateSmsProvider {\n  count\n}\n`\n\nexport const TestConnectionFragment = `fragment TestConnection on TestConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...TestEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateTestNoNesting\n  }\n}\n`\n\nexport const AggregateTaskMemberFragment = `fragment AggregateTaskMember on AggregateTaskMember {\n  count\n}\n`\n\nexport const AggregateTestFragment = `fragment AggregateTest on AggregateTest {\n  count\n}\n`\n\nexport const AggregateUserGroupFragment = `fragment AggregateUserGroup on AggregateUserGroup {\n  count\n}\n`\n\nexport const EthBlockEdgeFragment = `fragment EthBlockEdge on EthBlockEdge {\n  node {\n    ...EthBlockNoNesting\n  }\n  cursor\n}\n`\n\nexport const BlockConnectionFragment = `fragment BlockConnection on BlockConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...BlockEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateBlockNoNesting\n  }\n}\n`\n\nexport const TeamConnectionFragment = `fragment TeamConnection on TeamConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...TeamEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateTeamNoNesting\n  }\n}\n`\n\nexport const BlockEdgeFragment = `fragment BlockEdge on BlockEdge {\n  node {\n    ...BlockNoNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateTeamFragment = `fragment AggregateTeam on AggregateTeam {\n  count\n}\n`\n\nexport const BlockPreviousValuesFragment = `fragment BlockPreviousValues on BlockPreviousValues {\n  id\n  representation\n  type\n  x\n  y\n  z\n}\n`\n\nexport const EthContractSourceEdgeFragment = `fragment EthContractSourceEdge on EthContractSourceEdge {\n  node {\n    ...EthContractSourceNoNesting\n  }\n  cursor\n}\n`\n\nexport const BlockSubscriptionPayloadFragment = `fragment BlockSubscriptionPayload on BlockSubscriptionPayload {\n  mutation\n  node {\n    ...BlockNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...BlockPreviousValuesNoNesting\n  }\n}\n`\n\nexport const ProjectConnectionFragment = `fragment ProjectConnection on ProjectConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...ProjectEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateProjectNoNesting\n  }\n}\n`\n\nexport const ChatRoomInvitationConnectionFragment = `fragment ChatRoomInvitationConnection on ChatRoomInvitationConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...ChatRoomInvitationEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateChatRoomInvitationNoNesting\n  }\n}\n`\n\nexport const AggregateProjectFragment = `fragment AggregateProject on AggregateProject {\n  count\n}\n`\n\nexport const ChatRoomInvitationEdgeFragment = `fragment ChatRoomInvitationEdge on ChatRoomInvitationEdge {\n  node {\n    ...ChatRoomInvitationNoNesting\n  }\n  cursor\n}\n`\n\nexport const TemplateEdgeFragment = `fragment TemplateEdge on TemplateEdge {\n  node {\n    ...TemplateNoNesting\n  }\n  cursor\n}\n`\n\nexport const ChatRoomInvitationPreviousValuesFragment = `fragment ChatRoomInvitationPreviousValues on ChatRoomInvitationPreviousValues {\n  id\n  createdAt\n  updatedAt\n}\n`\n\nexport const ChatMessageConnectionFragment = `fragment ChatMessageConnection on ChatMessageConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...ChatMessageEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateChatMessageNoNesting\n  }\n}\n`\n\nexport const ChatRoomInvitationSubscriptionPayloadFragment = `fragment ChatRoomInvitationSubscriptionPayload on ChatRoomInvitationSubscriptionPayload {\n  mutation\n  node {\n    ...ChatRoomInvitationNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...ChatRoomInvitationPreviousValuesNoNesting\n  }\n}\n`\n\nexport const AggregateChatMessageFragment = `fragment AggregateChatMessage on AggregateChatMessage {\n  count\n}\n`\n\nexport const EthAccountPreviousValuesFragment = `fragment EthAccountPreviousValues on EthAccountPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  address\n  type\n  source\n  bytecode\n  abi\n}\n`\n\nexport const UserEdgeFragment = `fragment UserEdge on UserEdge {\n  node {\n    ...UserNoNesting\n  }\n  cursor\n}\n`\n\nexport const EthAccountSubscriptionPayloadFragment = `fragment EthAccountSubscriptionPayload on EthAccountSubscriptionPayload {\n  mutation\n  node {\n    ...EthAccountNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...EthAccountPreviousValuesNoNesting\n  }\n}\n`\n\nexport const ethNetFragment = `fragment ethNet on ethNet {\n  id\n  isListening\n  peerCount\n  networkType\n}\n`\n\nexport const EthBlockPreviousValuesFragment = `fragment EthBlockPreviousValues on EthBlockPreviousValues {\n  id\n  createdAt\n  updatedAt\n  hash\n  number\n  difficulty\n  totalDifficulty\n  extraData\n  gasLimit\n  gasUsed\n  mixHash\n  nonce\n  parentHash\n  receiptsRoot\n  sha3Uncles\n  size\n  stateRoot\n  date\n  transactionsRoot\n  transactions_count\n}\n`\n\nexport const ethSyncStateFragment = `fragment ethSyncState on ethSyncState {\n  startingBlock\n  currentBlock\n  highestBlock\n  knownStates\n  pulledStates\n}\n`\n\nexport const EthBlockSubscriptionPayloadFragment = `fragment EthBlockSubscriptionPayload on EthBlockSubscriptionPayload {\n  mutation\n  node {\n    ...EthBlockNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...EthBlockPreviousValuesNoNesting\n  }\n}\n`\n\nexport const ErrorFragment = `fragment Error on Error {\n  key\n  message\n}\n`\n\nexport const EthContractSourcePreviousValuesFragment = `fragment EthContractSourcePreviousValues on EthContractSourcePreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  source\n}\n`\n\nexport const TimerResponseFragment = `fragment TimerResponse on TimerResponse {\n  success\n  message\n  data {\n    ...TimerNoNesting\n  }\n}\n`\n\nexport const EthContractSourceSubscriptionPayloadFragment = `fragment EthContractSourceSubscriptionPayload on EthContractSourceSubscriptionPayload {\n  mutation\n  node {\n    ...EthContractSourceNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...EthContractSourcePreviousValuesNoNesting\n  }\n}\n`\n\nexport const TestResponseFragment = `fragment TestResponse on TestResponse {\n  success\n  message\n  data {\n    ...TestNoNesting\n  }\n}\n`\n\nexport const EthTransactionPreviousValuesFragment = `fragment EthTransactionPreviousValues on EthTransactionPreviousValues {\n  id\n  createdAt\n  updatedAt\n  chainId\n  amount\n  input\n  index\n  address\n  type\n  v\n  r\n  s\n}\n`\n\nexport const EthAccountResponseFragment = `fragment EthAccountResponse on EthAccountResponse {\n  success\n  message\n  data {\n    ...EthAccountNoNesting\n  }\n}\n`\n\nexport const FileConnectionFragment = `fragment FileConnection on FileConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...FileEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateFileNoNesting\n  }\n}\n`\n\nexport const McJsAuthPayloadFragment = `fragment McJsAuthPayload on McJsAuthPayload {\n  token\n  user {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const FileEdgeFragment = `fragment FileEdge on FileEdge {\n  node {\n    ...FileNoNesting\n  }\n  cursor\n}\n`\n\nexport const ResetPasswordResponseFragment = `fragment ResetPasswordResponse on ResetPasswordResponse {\n  success\n  message\n  data {\n    ...ResetPasswordNoNesting\n  }\n}\n`\n\nexport const FilePreviousValuesFragment = `fragment FilePreviousValues on FilePreviousValues {\n  id\n  path\n  name\n  filename\n  mimetype\n  encoding\n  hash\n  size\n}\n`\n\nexport const TemplateResponseFragment = `fragment TemplateResponse on TemplateResponse {\n  success\n  message\n  data {\n    ...TemplateNoNesting\n  }\n}\n`\n\nexport const FileSubscriptionPayloadFragment = `fragment FileSubscriptionPayload on FileSubscriptionPayload {\n  mutation\n  node {\n    ...FileNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...FilePreviousValuesNoNesting\n  }\n}\n`\n\nexport const ChatMessageResponseFragment = `fragment ChatMessageResponse on ChatMessageResponse {\n  success\n  message\n  data {\n    ...ChatMessageNoNesting\n  }\n}\n`\n\nexport const ImportConnectionFragment = `fragment ImportConnection on ImportConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...ImportEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateImportNoNesting\n  }\n}\n`\n\nexport const CallRequestResponseFragment = `fragment CallRequestResponse on CallRequestResponse {\n  success\n  message\n  data {\n    ...CallRequestNoNesting\n  }\n}\n`\n\nexport const ImportEdgeFragment = `fragment ImportEdge on ImportEdge {\n  node {\n    ...ImportNoNesting\n  }\n  cursor\n}\n`\n\nexport const PlayerSubscriptionPayloadFragment = `fragment PlayerSubscriptionPayload on PlayerSubscriptionPayload {\n  mutation\n  node {\n    ...PlayerNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...PlayerPreviousValuesNoNesting\n  }\n}\n`\n\nexport const ImportPreviousValuesFragment = `fragment ImportPreviousValues on ImportPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  status\n}\n`\n\nexport const WorldSubscriptionPayloadFragment = `fragment WorldSubscriptionPayload on WorldSubscriptionPayload {\n  mutation\n  node {\n    ...WorldNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...WorldPreviousValuesNoNesting\n  }\n}\n`\n\nexport const ImportSubscriptionPayloadFragment = `fragment ImportSubscriptionPayload on ImportSubscriptionPayload {\n  mutation\n  node {\n    ...ImportNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...ImportPreviousValuesNoNesting\n  }\n}\n`\n\nexport const MessageSubscriptionPayloadFragment = `fragment MessageSubscriptionPayload on MessageSubscriptionPayload {\n  mutation\n  node {\n    ...MessageNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...MessagePreviousValuesNoNesting\n  }\n}\n`\n\nexport const InventoryConnectionFragment = `fragment InventoryConnection on InventoryConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...InventoryEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateInventoryNoNesting\n  }\n}\n`\n\nexport const ResourceSubscriptionPayloadFragment = `fragment ResourceSubscriptionPayload on ResourceSubscriptionPayload {\n  mutation\n  node {\n    ...ResourceNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...ResourcePreviousValuesNoNesting\n  }\n}\n`\n\nexport const InventoryEdgeFragment = `fragment InventoryEdge on InventoryEdge {\n  node {\n    ...InventoryNoNesting\n  }\n  cursor\n}\n`\n\nexport const ChatMessageReadedSubscriptionPayloadFragment = `fragment ChatMessageReadedSubscriptionPayload on ChatMessageReadedSubscriptionPayload {\n  mutation\n  node {\n    ...ChatMessageReadedNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...ChatMessageReadedPreviousValuesNoNesting\n  }\n}\n`\n\nexport const InventoryPreviousValuesFragment = `fragment InventoryPreviousValues on InventoryPreviousValues {\n  id\n  cursor\n  data\n}\n`\n\nexport const ChatRoomSubscriptionPayloadFragment = `fragment ChatRoomSubscriptionPayload on ChatRoomSubscriptionPayload {\n  mutation\n  node {\n    ...ChatRoomNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...ChatRoomPreviousValuesNoNesting\n  }\n}\n`\n\nexport const InventorySubscriptionPayloadFragment = `fragment InventorySubscriptionPayload on InventorySubscriptionPayload {\n  mutation\n  node {\n    ...InventoryNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...InventoryPreviousValuesNoNesting\n  }\n}\n`\n\nexport const BlockFragment = `fragment Block on Block {\n  id\n  representation\n  type\n  world {\n    ...WorldNoNesting\n  }\n  x\n  y\n  z\n}\n`\n\nexport const LetsadsSmsMessageStatusFragment = `fragment LetsadsSmsMessageStatus on LetsadsSmsMessageStatus {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  errorCode\n  SmsMessage {\n    ...SmsMessageNoNesting\n  }\n  Items {\n    ...LetsadsSmsMessageStatusItemNoNesting\n  }\n}\n`\n\nexport const SettingsFragment = `fragment Settings on Settings {\n  id\n  renderDistance\n  User {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const SmsMessageFragment = `fragment SmsMessage on SmsMessage {\n  id\n  createdAt\n  updatedAt\n  from\n  text\n  Provider {\n    ...SmsProviderNoNesting\n  }\n  deletOnSend\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Status {\n    ...LetsadsSmsMessageStatusNoNesting\n  }\n}\n`\n\nexport const VoteFragment = `fragment Vote on Vote {\n  id\n  createdAt\n  updatedAt\n  Resource {\n    ...ResourceNoNesting\n  }\n  User {\n    ...UserNoNesting\n  }\n  value\n}\n`\n\nexport const SmsProviderFragment = `fragment SmsProvider on SmsProvider {\n  id\n  name\n  credentials\n  CreatedBy {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const ProjectMemberFragment = `fragment ProjectMember on ProjectMember {\n  id\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Project {\n    ...ProjectNoNesting\n  }\n  User {\n    ...UserNoNesting\n  }\n  Services {\n    ...ServiceNoNesting\n  }\n  status\n}\n`\n\nexport const LetsadsSmsMessageStatusItemFragment = `fragment LetsadsSmsMessageStatusItem on LetsadsSmsMessageStatusItem {\n  id\n  createdAt\n  updatedAt\n  sms_id\n}\n`\n\nexport const TaskMemberFragment = `fragment TaskMember on TaskMember {\n  id\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Task {\n    ...TaskNoNesting\n  }\n  User {\n    ...UserNoNesting\n  }\n  status\n}\n`\n\nexport const LetsadsSmsMessageStatusConnectionFragment = `fragment LetsadsSmsMessageStatusConnection on LetsadsSmsMessageStatusConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...LetsadsSmsMessageStatusEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateLetsadsSmsMessageStatusNoNesting\n  }\n}\n`\n\nexport const ChatMessageFragment = `fragment ChatMessage on ChatMessage {\n  id\n  createdAt\n  updatedAt\n  content\n  contentText\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Room {\n    ...ChatRoomNoNesting\n  }\n  ReadedBy {\n    ...ChatMessageReadedNoNesting\n  }\n}\n`\n\nexport const LetsadsSmsMessageStatusEdgeFragment = `fragment LetsadsSmsMessageStatusEdge on LetsadsSmsMessageStatusEdge {\n  node {\n    ...LetsadsSmsMessageStatusNoNesting\n  }\n  cursor\n}\n`\n\nexport const CallRequestFragment = `fragment CallRequest on CallRequest {\n  id\n  called_descriptions\n  caller_descriptions\n  status\n  startedAt\n  endedAt\n  Called {\n    ...UserNoNesting\n  }\n  Caller {\n    ...UserNoNesting\n  }\n  Room {\n    ...ChatRoomNoNesting\n  }\n}\n`\n\nexport const LetsadsSmsMessageStatusItemConnectionFragment = `fragment LetsadsSmsMessageStatusItemConnection on LetsadsSmsMessageStatusItemConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...LetsadsSmsMessageStatusItemEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateLetsadsSmsMessageStatusItemNoNesting\n  }\n}\n`\n\nexport const EthTransactionFragment = `fragment EthTransaction on EthTransaction {\n  id\n  createdAt\n  updatedAt\n  chainId\n  amount\n  input\n  index\n  Sender {\n    ...EthAccountNoNesting\n  }\n  Receiver {\n    ...EthAccountNoNesting\n  }\n  Account {\n    ...EthAccountNoNesting\n  }\n  address\n  type\n  v\n  r\n  s\n  Block {\n    ...EthBlockNoNesting\n  }\n}\n`\n\nexport const LetsadsSmsMessageStatusItemEdgeFragment = `fragment LetsadsSmsMessageStatusItemEdge on LetsadsSmsMessageStatusItemEdge {\n  node {\n    ...LetsadsSmsMessageStatusItemNoNesting\n  }\n  cursor\n}\n`\n\nexport const NotificationTypeFragment = `fragment NotificationType on NotificationType {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  comment\n  Users {\n    ...UserNoNesting\n  }\n  CreatedBy {\n    ...UserNoNesting\n  }\n  oldID\n}\n`\n\nexport const LetsadsSmsMessageStatusItemPreviousValuesFragment = `fragment LetsadsSmsMessageStatusItemPreviousValues on LetsadsSmsMessageStatusItemPreviousValues {\n  id\n  createdAt\n  updatedAt\n  sms_id\n}\n`\n\nexport const TournamentGroupFragment = `fragment TournamentGroup on TournamentGroup {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Tournaments {\n    ...TournamentNoNesting\n  }\n}\n`\n\nexport const LetsadsSmsMessageStatusItemSubscriptionPayloadFragment = `fragment LetsadsSmsMessageStatusItemSubscriptionPayload on LetsadsSmsMessageStatusItemSubscriptionPayload {\n  mutation\n  node {\n    ...LetsadsSmsMessageStatusItemNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...LetsadsSmsMessageStatusItemPreviousValuesNoNesting\n  }\n}\n`\n\nexport const TestFragment = `fragment Test on Test {\n  id\n  createdAt\n  updatedAt\n  name\n  text\n  quantity\n  date\n  CreatedBy {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const LetsadsSmsMessageStatusPreviousValuesFragment = `fragment LetsadsSmsMessageStatusPreviousValues on LetsadsSmsMessageStatusPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  errorCode\n}\n`\n\nexport const AggregateWorldFragment = `fragment AggregateWorld on AggregateWorld {\n  count\n}\n`\n\nexport const LetsadsSmsMessageStatusSubscriptionPayloadFragment = `fragment LetsadsSmsMessageStatusSubscriptionPayload on LetsadsSmsMessageStatusSubscriptionPayload {\n  mutation\n  node {\n    ...LetsadsSmsMessageStatusNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...LetsadsSmsMessageStatusPreviousValuesNoNesting\n  }\n}\n`\n\nexport const ChatMessageReadedConnectionFragment = `fragment ChatMessageReadedConnection on ChatMessageReadedConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...ChatMessageReadedEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateChatMessageReadedNoNesting\n  }\n}\n`\n\nexport const LetterFragment = `fragment Letter on Letter {\n  id\n  email\n  subject\n  message\n  status\n  rank\n  deleteOnSend\n  replyTo\n  returnTo\n  createdAt\n  updatedAt\n  User {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const ChatRoomEdgeFragment = `fragment ChatRoomEdge on ChatRoomEdge {\n  node {\n    ...ChatRoomNoNesting\n  }\n  cursor\n}\n`\n\nexport const LetterConnectionFragment = `fragment LetterConnection on LetterConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...LetterEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateLetterNoNesting\n  }\n}\n`\n\nexport const AggregateNoticeFragment = `fragment AggregateNotice on AggregateNotice {\n  count\n}\n`\n\nexport const LetterEdgeFragment = `fragment LetterEdge on LetterEdge {\n  node {\n    ...LetterNoNesting\n  }\n  cursor\n}\n`\n\nexport const ResourceTagConnectionFragment = `fragment ResourceTagConnection on ResourceTagConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...ResourceTagEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateResourceTagNoNesting\n  }\n}\n`\n\nexport const LetterPreviousValuesFragment = `fragment LetterPreviousValues on LetterPreviousValues {\n  id\n  email\n  subject\n  message\n  status\n  rank\n  deleteOnSend\n  replyTo\n  returnTo\n  createdAt\n  updatedAt\n}\n`\n\nexport const TagEdgeFragment = `fragment TagEdge on TagEdge {\n  node {\n    ...TagNoNesting\n  }\n  cursor\n}\n`\n\nexport const LetterSubscriptionPayloadFragment = `fragment LetterSubscriptionPayload on LetterSubscriptionPayload {\n  mutation\n  node {\n    ...LetterNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...LetterPreviousValuesNoNesting\n  }\n}\n`\n\nexport const AggregateGameFragment = `fragment AggregateGame on AggregateGame {\n  count\n}\n`\n\nexport const LogConnectionFragment = `fragment LogConnection on LogConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...LogEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateLogNoNesting\n  }\n}\n`\n\nexport const TournamentConnectionFragment = `fragment TournamentConnection on TournamentConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...TournamentEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateTournamentNoNesting\n  }\n}\n`\n\nexport const LogEdgeFragment = `fragment LogEdge on LogEdge {\n  node {\n    ...LogNoNesting\n  }\n  cursor\n}\n`\n\nexport const TournamentGroupEdgeFragment = `fragment TournamentGroupEdge on TournamentGroupEdge {\n  node {\n    ...TournamentGroupNoNesting\n  }\n  cursor\n}\n`\n\nexport const LogedInConnectionFragment = `fragment LogedInConnection on LogedInConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...LogedInEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateLogedInNoNesting\n  }\n}\n`\n\nexport const AggregateTourneyFragment = `fragment AggregateTourney on AggregateTourney {\n  count\n}\n`\n\nexport const LogedInEdgeFragment = `fragment LogedInEdge on LogedInEdge {\n  node {\n    ...LogedInNoNesting\n  }\n  cursor\n}\n`\n\nexport const EthAccountConnectionFragment = `fragment EthAccountConnection on EthAccountConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...EthAccountEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateEthAccountNoNesting\n  }\n}\n`\n\nexport const LogedInPreviousValuesFragment = `fragment LogedInPreviousValues on LogedInPreviousValues {\n  id\n  createdAt\n  fake\n}\n`\n\nexport const EthTransactionEdgeFragment = `fragment EthTransactionEdge on EthTransactionEdge {\n  node {\n    ...EthTransactionNoNesting\n  }\n  cursor\n}\n`\n\nexport const LogedInSubscriptionPayloadFragment = `fragment LogedInSubscriptionPayload on LogedInSubscriptionPayload {\n  mutation\n  node {\n    ...LogedInNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...LogedInPreviousValuesNoNesting\n  }\n}\n`\n\nexport const AggregateCallRequestFragment = `fragment AggregateCallRequest on AggregateCallRequest {\n  count\n}\n`\n\nexport const LogPreviousValuesFragment = `fragment LogPreviousValues on LogPreviousValues {\n  id\n  level\n  objectType\n  message\n  stack\n}\n`\n\nexport const ProjectMemberConnectionFragment = `fragment ProjectMemberConnection on ProjectMemberConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...ProjectMemberEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateProjectMemberNoNesting\n  }\n}\n`\n\nexport const LogSubscriptionPayloadFragment = `fragment LogSubscriptionPayload on LogSubscriptionPayload {\n  mutation\n  node {\n    ...LogNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...LogPreviousValuesNoNesting\n  }\n}\n`\n\nexport const ServiceEdgeFragment = `fragment ServiceEdge on ServiceEdge {\n  node {\n    ...ServiceNoNesting\n  }\n  cursor\n}\n`\n\nexport const MessageConnectionFragment = `fragment MessageConnection on MessageConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...MessageEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateMessageNoNesting\n  }\n}\n`\n\nexport const AggregateTaskFragment = `fragment AggregateTask on AggregateTask {\n  count\n}\n`\n\nexport const MessageEdgeFragment = `fragment MessageEdge on MessageEdge {\n  node {\n    ...MessageNoNesting\n  }\n  cursor\n}\n`\n\nexport const TeamMemberConnectionFragment = `fragment TeamMemberConnection on TeamMemberConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...TeamMemberEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateTeamMemberNoNesting\n  }\n}\n`\n\nexport const NotificationTypePreviousValuesFragment = `fragment NotificationTypePreviousValues on NotificationTypePreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  comment\n  oldID\n}\n`\n\nexport const TimerEdgeFragment = `fragment TimerEdge on TimerEdge {\n  node {\n    ...TimerNoNesting\n  }\n  cursor\n}\n`\n\nexport const NotificationTypeSubscriptionPayloadFragment = `fragment NotificationTypeSubscriptionPayload on NotificationTypeSubscriptionPayload {\n  mutation\n  node {\n    ...NotificationTypeNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...NotificationTypePreviousValuesNoNesting\n  }\n}\n`\n\nexport const AggregateRouteFragment = `fragment AggregateRoute on AggregateRoute {\n  count\n}\n`\n\nexport const PlayerConnectionFragment = `fragment PlayerConnection on PlayerConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...PlayerEdgeNoNesting\n  }\n  aggregate {\n    ...AggregatePlayerNoNesting\n  }\n}\n`\n\nexport const EthBlockConnectionFragment = `fragment EthBlockConnection on EthBlockConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...EthBlockEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateEthBlockNoNesting\n  }\n}\n`\n\nexport const PlayerEdgeFragment = `fragment PlayerEdge on PlayerEdge {\n  node {\n    ...PlayerNoNesting\n  }\n  cursor\n}\n`\n\nexport const TeamEdgeFragment = `fragment TeamEdge on TeamEdge {\n  node {\n    ...TeamNoNesting\n  }\n  cursor\n}\n`\n\nexport const ResetPasswordConnectionFragment = `fragment ResetPasswordConnection on ResetPasswordConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...ResetPasswordEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateResetPasswordNoNesting\n  }\n}\n`\n\nexport const AggregateEthContractSourceFragment = `fragment AggregateEthContractSource on AggregateEthContractSource {\n  count\n}\n`\n\nexport const ResetPasswordEdgeFragment = `fragment ResetPasswordEdge on ResetPasswordEdge {\n  node {\n    ...ResetPasswordNoNesting\n  }\n  cursor\n}\n`\n\nexport const TemplateConnectionFragment = `fragment TemplateConnection on TemplateConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...TemplateEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateTemplateNoNesting\n  }\n}\n`\n\nexport const ResetPasswordPreviousValuesFragment = `fragment ResetPasswordPreviousValues on ResetPasswordPreviousValues {\n  id\n  createdAt\n  updatedAt\n  code\n  password\n  validTill\n}\n`\n\nexport const ChatMessageEdgeFragment = `fragment ChatMessageEdge on ChatMessageEdge {\n  node {\n    ...ChatMessageNoNesting\n  }\n  cursor\n}\n`\n\nexport const ResetPasswordSubscriptionPayloadFragment = `fragment ResetPasswordSubscriptionPayload on ResetPasswordSubscriptionPayload {\n  mutation\n  node {\n    ...ResetPasswordNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...ResetPasswordPreviousValuesNoNesting\n  }\n}\n`\n\nexport const AggregateUserFragment = `fragment AggregateUser on AggregateUser {\n  count\n}\n`\n\nexport const ResourceTagPreviousValuesFragment = `fragment ResourceTagPreviousValues on ResourceTagPreviousValues {\n  id\n  createdAt\n  updatedAt\n  status\n}\n`\n\nexport const ProjectResponseFragment = `fragment ProjectResponse on ProjectResponse {\n  success\n  message\n  data {\n    ...ProjectNoNesting\n  }\n}\n`\n\nexport const ResourceTagSubscriptionPayloadFragment = `fragment ResourceTagSubscriptionPayload on ResourceTagSubscriptionPayload {\n  mutation\n  node {\n    ...ResourceTagNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...ResourceTagPreviousValuesNoNesting\n  }\n}\n`\n\nexport const ResourceResponseFragment = `fragment ResourceResponse on ResourceResponse {\n  success\n  message\n  data {\n    ...ResourceNoNesting\n  }\n}\n`\n\nexport const ServiceCategoryConnectionFragment = `fragment ServiceCategoryConnection on ServiceCategoryConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...ServiceCategoryEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateServiceCategoryNoNesting\n  }\n}\n`\n\nexport const BatchPayloadFragment = `fragment BatchPayload on BatchPayload {\n  count\n}\n`\n\nexport const ServiceCategoryEdgeFragment = `fragment ServiceCategoryEdge on ServiceCategoryEdge {\n  node {\n    ...ServiceCategoryNoNesting\n  }\n  cursor\n}\n`\n\nexport const ResetPasswordFragment = `fragment ResetPassword on ResetPassword {\n  id\n  createdAt\n  updatedAt\n  code\n  password\n  validTill\n  User {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const ServiceCategoryPreviousValuesFragment = `fragment ServiceCategoryPreviousValues on ServiceCategoryPreviousValues {\n  id\n  name\n  description\n  code\n}\n`\n\nexport const EthTransactionResponseFragment = `fragment EthTransactionResponse on EthTransactionResponse {\n  success\n  message\n  data {\n    ...EthTransactionNoNesting\n  }\n}\n`\n\nexport const ServiceCategorySubscriptionPayloadFragment = `fragment ServiceCategorySubscriptionPayload on ServiceCategorySubscriptionPayload {\n  mutation\n  node {\n    ...ServiceCategoryNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...ServiceCategoryPreviousValuesNoNesting\n  }\n}\n`\n\nexport const PlayerPreviousValuesFragment = `fragment PlayerPreviousValues on PlayerPreviousValues {\n  createdAt\n  updatedAt\n  id\n  isAdmin\n  gamemode\n  lastLogin\n  x\n  y\n  z\n  dirx\n  diry\n}\n`\n\nexport const SettingsConnectionFragment = `fragment SettingsConnection on SettingsConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...SettingsEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateSettingsNoNesting\n  }\n}\n`\n\nexport const MessagePreviousValuesFragment = `fragment MessagePreviousValues on MessagePreviousValues {\n  id\n  type\n  sender\n  body\n}\n`\n\nexport const SettingsEdgeFragment = `fragment SettingsEdge on SettingsEdge {\n  node {\n    ...SettingsNoNesting\n  }\n  cursor\n}\n`\n\nexport const ChatMessageReadedPreviousValuesFragment = `fragment ChatMessageReadedPreviousValues on ChatMessageReadedPreviousValues {\n  id\n  createdAt\n}\n`\n\nexport const SettingsPreviousValuesFragment = `fragment SettingsPreviousValues on SettingsPreviousValues {\n  id\n  renderDistance\n}\n`\n\nexport const InventoryFragment = `fragment Inventory on Inventory {\n  id\n  player {\n    ...PlayerNoNesting\n  }\n  cursor\n  data\n}\n`\n\nexport const SettingsSubscriptionPayloadFragment = `fragment SettingsSubscriptionPayload on SettingsSubscriptionPayload {\n  mutation\n  node {\n    ...SettingsNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...SettingsPreviousValuesNoNesting\n  }\n}\n`\n\nexport const TagFragment = `fragment Tag on Tag {\n  id\n  createdAt\n  updatedAt\n  name\n  status\n  Resources {\n    ...ResourceTagNoNesting\n  }\n  CreatedBy {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const SmsMessageConnectionFragment = `fragment SmsMessageConnection on SmsMessageConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...SmsMessageEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateSmsMessageNoNesting\n  }\n}\n`\n\nexport const TaskReactionFragment = `fragment TaskReaction on TaskReaction {\n  id\n  createdAt\n  updatedAt\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Task {\n    ...TaskNoNesting\n  }\n  type\n}\n`\n\nexport const SmsMessageEdgeFragment = `fragment SmsMessageEdge on SmsMessageEdge {\n  node {\n    ...SmsMessageNoNesting\n  }\n  cursor\n}\n`\n\nexport const TeamMemberFragment = `fragment TeamMember on TeamMember {\n  id\n  Team {\n    ...TeamNoNesting\n  }\n  User {\n    ...UserNoNesting\n  }\n  CreatedBy {\n    ...UserNoNesting\n  }\n  status\n}\n`\n\nexport const SmsMessagePreviousValuesFragment = `fragment SmsMessagePreviousValues on SmsMessagePreviousValues {\n  id\n  createdAt\n  updatedAt\n  from\n  text\n  deletOnSend\n}\n`\n\nexport const TourneyFragment = `fragment Tourney on Tourney {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  date\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Tournament {\n    ...TournamentNoNesting\n  }\n  Users {\n    ...UserNoNesting\n  }\n  Games {\n    ...GameNoNesting\n  }\n}\n`\n\nexport const SmsMessageSubscriptionPayloadFragment = `fragment SmsMessageSubscriptionPayload on SmsMessageSubscriptionPayload {\n  mutation\n  node {\n    ...SmsMessageNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...SmsMessagePreviousValuesNoNesting\n  }\n}\n`\n\nexport const PageInfoFragment = `fragment PageInfo on PageInfo {\n  hasNextPage\n  hasPreviousPage\n  startCursor\n  endCursor\n}\n`\n\nexport const SmsProviderConnectionFragment = `fragment SmsProviderConnection on SmsProviderConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...SmsProviderEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateSmsProviderNoNesting\n  }\n}\n`\n\nexport const AggregateChatMessageReadedFragment = `fragment AggregateChatMessageReaded on AggregateChatMessageReaded {\n  count\n}\n`\n\nexport const SmsProviderEdgeFragment = `fragment SmsProviderEdge on SmsProviderEdge {\n  node {\n    ...SmsProviderNoNesting\n  }\n  cursor\n}\n`\n\nexport const NotificationTypeEdgeFragment = `fragment NotificationTypeEdge on NotificationTypeEdge {\n  node {\n    ...NotificationTypeNoNesting\n  }\n  cursor\n}\n`\n\nexport const SmsProviderPreviousValuesFragment = `fragment SmsProviderPreviousValues on SmsProviderPreviousValues {\n  id\n  name\n  credentials\n}\n`\n\nexport const GameConnectionFragment = `fragment GameConnection on GameConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...GameEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateGameNoNesting\n  }\n}\n`\n\nexport const SmsProviderSubscriptionPayloadFragment = `fragment SmsProviderSubscriptionPayload on SmsProviderSubscriptionPayload {\n  mutation\n  node {\n    ...SmsProviderNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...SmsProviderPreviousValuesNoNesting\n  }\n}\n`\n\nexport const AggregateTournamentFragment = `fragment AggregateTournament on AggregateTournament {\n  count\n}\n`\n\nexport const TagPreviousValuesFragment = `fragment TagPreviousValues on TagPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  status\n}\n`\n\nexport const VoteEdgeFragment = `fragment VoteEdge on VoteEdge {\n  node {\n    ...VoteNoNesting\n  }\n  cursor\n}\n`\n\nexport const TagSubscriptionPayloadFragment = `fragment TagSubscriptionPayload on TagSubscriptionPayload {\n  mutation\n  node {\n    ...TagNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...TagPreviousValuesNoNesting\n  }\n}\n`\n\nexport const CallRequestConnectionFragment = `fragment CallRequestConnection on CallRequestConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...CallRequestEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateCallRequestNoNesting\n  }\n}\n`\n\nexport const TaskMemberConnectionFragment = `fragment TaskMemberConnection on TaskMemberConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...TaskMemberEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateTaskMemberNoNesting\n  }\n}\n`\n\nexport const AggregateProjectMemberFragment = `fragment AggregateProjectMember on AggregateProjectMember {\n  count\n}\n`\n\nexport const TaskMemberEdgeFragment = `fragment TaskMemberEdge on TaskMemberEdge {\n  node {\n    ...TaskMemberNoNesting\n  }\n  cursor\n}\n`\n\nexport const TaskReactionEdgeFragment = `fragment TaskReactionEdge on TaskReactionEdge {\n  node {\n    ...TaskReactionNoNesting\n  }\n  cursor\n}\n`\n\nexport const TaskMemberPreviousValuesFragment = `fragment TaskMemberPreviousValues on TaskMemberPreviousValues {\n  id\n  status\n}\n`\n\nexport const RouteConnectionFragment = `fragment RouteConnection on RouteConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...RouteEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateRouteNoNesting\n  }\n}\n`\n\nexport const TaskMemberSubscriptionPayloadFragment = `fragment TaskMemberSubscriptionPayload on TaskMemberSubscriptionPayload {\n  mutation\n  node {\n    ...TaskMemberNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...TaskMemberPreviousValuesNoNesting\n  }\n}\n`\n\nexport const AggregateEthBlockFragment = `fragment AggregateEthBlock on AggregateEthBlock {\n  count\n}\n`\n\nexport const TestPreviousValuesFragment = `fragment TestPreviousValues on TestPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  text\n  quantity\n  date\n}\n`\n\nexport const ProjectEdgeFragment = `fragment ProjectEdge on ProjectEdge {\n  node {\n    ...ProjectNoNesting\n  }\n  cursor\n}\n`\n\nexport const TestSubscriptionPayloadFragment = `fragment TestSubscriptionPayload on TestSubscriptionPayload {\n  mutation\n  node {\n    ...TestNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...TestPreviousValuesNoNesting\n  }\n}\n`\n\nexport const UserConnectionFragment = `fragment UserConnection on UserConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...UserEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateUserNoNesting\n  }\n}\n`\n\nexport const UserGroupConnectionFragment = `fragment UserGroupConnection on UserGroupConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...UserGroupEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateUserGroupNoNesting\n  }\n}\n`\n\nexport const TaskResponseFragment = `fragment TaskResponse on TaskResponse {\n  success\n  message\n  data {\n    ...TaskNoNesting\n  }\n}\n`\n\nexport const UserGroupEdgeFragment = `fragment UserGroupEdge on UserGroupEdge {\n  node {\n    ...UserGroupNoNesting\n  }\n  cursor\n}\n`\n\nexport const UserResponseFragment = `fragment UserResponse on UserResponse {\n  success\n  message\n  data {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const UserGroupPreviousValuesFragment = `fragment UserGroupPreviousValues on UserGroupPreviousValues {\n  id\n  name\n}\n`\n\nexport const TaskReactionResponseFragment = `fragment TaskReactionResponse on TaskReactionResponse {\n  success\n  message\n  data {\n    ...TaskReactionNoNesting\n  }\n}\n`\n\nexport const UserGroupSubscriptionPayloadFragment = `fragment UserGroupSubscriptionPayload on UserGroupSubscriptionPayload {\n  mutation\n  node {\n    ...UserGroupNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...UserGroupPreviousValuesNoNesting\n  }\n}\n`\n\nexport const ResourcePreviousValuesFragment = `fragment ResourcePreviousValues on ResourcePreviousValues {\n  id\n  code\n  createdAt\n  updatedAt\n  type\n  name\n  longtitle\n  content\n  contentText\n  published\n  deleted\n  hidemenu\n  searchable\n  uri\n  isfolder\n  rating\n  positiveVotesCount\n  negativeVotesCount\n  neutralVotesCount\n  oldID\n  commentOldID\n  class_key\n  template\n  mockUpdate\n  components\n}\n`\n\nexport const VotePreviousValuesFragment = `fragment VotePreviousValues on VotePreviousValues {\n  id\n  createdAt\n  updatedAt\n  value\n}\n`\n\nexport const ResourceFragment = `fragment Resource on Resource {\n  id\n  createdAt\n  updatedAt\n  type\n  name\n  longtitle\n  content\n  components\n  contentText\n  published\n  deleted\n  hidemenu\n  searchable\n  uri\n  isfolder\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Parent {\n    ...ResourceNoNesting\n  }\n  Childs {\n    ...ResourceNoNesting\n  }\n  Image {\n    ...FileNoNesting\n  }\n  rating\n  positiveVotesCount\n  negativeVotesCount\n  neutralVotesCount\n  CommentTarget {\n    ...ResourceNoNesting\n  }\n  Comments {\n    ...ResourceNoNesting\n  }\n  Votes {\n    ...VoteNoNesting\n  }\n  Tags {\n    ...ResourceTagNoNesting\n  }\n  oldID\n  commentOldID\n  Topics {\n    ...ResourceNoNesting\n  }\n  Blog {\n    ...ResourceNoNesting\n  }\n  Service {\n    ...ServiceNoNesting\n  }\n  Project {\n    ...ProjectNoNesting\n  }\n  Team {\n    ...TeamNoNesting\n  }\n  class_key\n  template\n  mockUpdate\n}\n`\n\nexport const VoteSubscriptionPayloadFragment = `fragment VoteSubscriptionPayload on VoteSubscriptionPayload {\n  mutation\n  node {\n    ...VoteNoNesting\n  }\n  updatedFields\n  previousValues {\n    ...VotePreviousValuesNoNesting\n  }\n}\n`\n\nexport const ChatRoomInvitationFragment = `fragment ChatRoomInvitation on ChatRoomInvitation {\n  id\n  createdAt\n  updatedAt\n  CreatedBy {\n    ...UserNoNesting\n  }\n  User {\n    ...UserNoNesting\n  }\n  ChatRoom {\n    ...ChatRoomNoNesting\n  }\n  Notice {\n    ...NoticeNoNesting\n  }\n}\n`\n\nexport const SmsMessageResponseFragment = `fragment SmsMessageResponse on SmsMessageResponse {\n  success\n  message\n  data {\n    ...SmsMessageNoNesting\n  }\n}\n`\n\nexport const PositionFragment = `fragment Position on Position {\n  id\n  code\n  name\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Users {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const SmsProviderResponseFragment = `fragment SmsProviderResponse on SmsProviderResponse {\n  success\n  message\n  data {\n    ...SmsProviderNoNesting\n  }\n}\n`\n\nexport const NoticeConnectionFragment = `fragment NoticeConnection on NoticeConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...NoticeEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateNoticeNoNesting\n  }\n}\n`\n\nexport const MarketplaceAuthResponseFragment = `fragment MarketplaceAuthResponse on MarketplaceAuthResponse {\n  success\n  message\n  data\n}\n`\n\nexport const GameResultEdgeFragment = `fragment GameResultEdge on GameResultEdge {\n  node {\n    ...GameResultNoNesting\n  }\n  cursor\n}\n`\n\nexport const ChatMessageReadedResponseFragment = `fragment ChatMessageReadedResponse on ChatMessageReadedResponse {\n  success\n  message\n  data {\n    ...ChatMessageReadedNoNesting\n  }\n}\n`\n\nexport const AggregateEthAccountFragment = `fragment AggregateEthAccount on AggregateEthAccount {\n  count\n}\n`\n\nexport const GameResponseFragment = `fragment GameResponse on GameResponse {\n  success\n  message\n  data {\n    ...GameNoNesting\n  }\n}\n`\n\nexport const TaskConnectionFragment = `fragment TaskConnection on TaskConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...TaskEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateTaskNoNesting\n  }\n}\n`\n\nexport const GameResultResponseFragment = `fragment GameResultResponse on GameResultResponse {\n  success\n  message\n  data {\n    ...GameResultNoNesting\n  }\n}\n`\n\nexport const TestEdgeFragment = `fragment TestEdge on TestEdge {\n  node {\n    ...TestNoNesting\n  }\n  cursor\n}\n`\n\nexport const TournamentResponseFragment = `fragment TournamentResponse on TournamentResponse {\n  success\n  message\n  data {\n    ...TournamentNoNesting\n  }\n}\n`\n\nexport const AggregateTemplateFragment = `fragment AggregateTemplate on AggregateTemplate {\n  count\n}\n`\n\nexport const TournamentGroupResponseFragment = `fragment TournamentGroupResponse on TournamentGroupResponse {\n  success\n  message\n  data {\n    ...TournamentGroupNoNesting\n  }\n}\n`\n\nexport const AuthPayloadFragment = `fragment AuthPayload on AuthPayload {\n  success\n  message\n  token\n  data {\n    ...UserNoNesting\n  }\n}\n`\n\nexport const TourneyResponseFragment = `fragment TourneyResponse on TourneyResponse {\n  success\n  message\n  data {\n    ...TourneyNoNesting\n  }\n}\n`\n\nexport const WorldPreviousValuesFragment = `fragment WorldPreviousValues on WorldPreviousValues {\n  createdAt\n  updatedAt\n  id\n  name\n  seed\n  type\n  time\n  timeChanger\n  days\n  lastPlayed\n}\n`\n\nexport const EthBlockResponseFragment = `fragment EthBlockResponse on EthBlockResponse {\n  success\n  message\n  data {\n    ...EthBlockNoNesting\n  }\n}\n`\n\nexport const TemplateFragment = `fragment Template on Template {\n  id\n  createdAt\n  updatedAt\n  externalKey\n  name\n  description\n  component\n  props\n  components\n  vars\n  rank\n  Parent {\n    ...TemplateNoNesting\n  }\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Project {\n    ...ProjectNoNesting\n  }\n  PrismaProject {\n    ...ProjectNoNesting\n  }\n}\n`\n\nexport const EthContractSourceResponseFragment = `fragment EthContractSourceResponse on EthContractSourceResponse {\n  success\n  message\n  data {\n    ...EthContractSourceNoNesting\n  }\n}\n`\n\nexport const ResourceEdgeFragment = `fragment ResourceEdge on ResourceEdge {\n  node {\n    ...ResourceNoNesting\n  }\n  cursor\n}\n`\n\nexport const EthPersonalAccountResponseFragment = `fragment EthPersonalAccountResponse on EthPersonalAccountResponse {\n  success\n  message\n  data {\n    ...EthPersonalAccountNoNesting\n  }\n}\n`\n\nexport const TourneyConnectionFragment = `fragment TourneyConnection on TourneyConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...TourneyEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateTourneyNoNesting\n  }\n}\n`\n\nexport const IceCandidateFragment = `fragment IceCandidate on IceCandidate {\n  from\n  to\n  sdp\n  callRequestId\n}\n`\n\nexport const AggregateTeamMemberFragment = `fragment AggregateTeamMember on AggregateTeamMember {\n  count\n}\n`\n\nexport const PositionResponseFragment = `fragment PositionResponse on PositionResponse {\n  success\n  message\n  data {\n    ...PositionNoNesting\n  }\n}\n`\n\nexport const EthPersonalAccountFragment = `fragment EthPersonalAccount on EthPersonalAccount {\n  address\n  balance\n}\n`\n\nexport const ProjectMemberResponseFragment = `fragment ProjectMemberResponse on ProjectMemberResponse {\n  success\n  message\n  data {\n    ...ProjectMemberNoNesting\n  }\n}\n`\n\nexport const UserFragment = `fragment User on User {\n  worlds {\n    ...WorldNoNesting\n  }\n  settings {\n    ...SettingsNoNesting\n  }\n  id\n  createdAt\n  updatedAt\n  username\n  email\n  phone\n  showEmail\n  showPhone\n  password\n  fullname\n  image\n  address\n  sudo\n  active\n  activated\n  deleted\n  Groups {\n    ...UserGroupNoNesting\n  }\n  CreatedUsers {\n    ...UserNoNesting\n  }\n  CreatedBy {\n    ...UserNoNesting\n  }\n  LogedIns {\n    ...LogedInNoNesting\n  }\n  Resources {\n    ...ResourceNoNesting\n  }\n  Votes {\n    ...VoteNoNesting\n  }\n  NotificationTypes {\n    ...NotificationTypeNoNesting\n  }\n  NotificationTypesCreated {\n    ...NotificationTypeNoNesting\n  }\n  Tags {\n    ...TagNoNesting\n  }\n  ResourceTags {\n    ...ResourceTagNoNesting\n  }\n  EthContractSourcesCreated {\n    ...EthContractSourceNoNesting\n  }\n  EthAccounts {\n    ...EthAccountNoNesting\n  }\n  Teams {\n    ...TeamMemberNoNesting\n  }\n  TeamsCreated {\n    ...TeamNoNesting\n  }\n  Projects {\n    ...ProjectMemberNoNesting\n  }\n  ProjectsCreated {\n    ...ProjectNoNesting\n  }\n  Tasks {\n    ...TaskMemberNoNesting\n  }\n  Timers {\n    ...TimerNoNesting\n  }\n  PrismaProjects {\n    ...ProjectNoNesting\n  }\n  hasEmail\n  hasPhone\n  marketplaceToken\n  hidden\n  EthAccountAuthed {\n    ...EthAccountNoNesting\n  }\n}\n`\n\nexport const AggregateResourceTagFragment = `fragment AggregateResourceTag on AggregateResourceTag {\n  count\n}\n`\n\nexport const TeamMemberResponseFragment = `fragment TeamMemberResponse on TeamMemberResponse {\n  success\n  message\n  data {\n    ...TeamMemberNoNesting\n  }\n}\n`\n\nexport const TeamResponseFragment = `fragment TeamResponse on TeamResponse {\n  success\n  message\n  data {\n    ...TeamNoNesting\n  }\n}\n`\n\nexport const ServiceCategoryResponseFragment = `fragment ServiceCategoryResponse on ServiceCategoryResponse {\n  success\n  message\n  data {\n    ...ServiceCategoryNoNesting\n  }\n}\n`\n\nexport const ServiceResponseFragment = `fragment ServiceResponse on ServiceResponse {\n  success\n  message\n  data {\n    ...ServiceNoNesting\n  }\n}\n`\n\nexport const PositionEdgeFragment = `fragment PositionEdge on PositionEdge {\n  node {\n    ...PositionNoNesting\n  }\n  cursor\n}\n`\n\nexport const EthContractSourceFragment = `fragment EthContractSource on EthContractSource {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  source\n  CreatedBy {\n    ...UserNoNesting\n  }\n  Accounts {\n    ...EthAccountNoNesting\n  }\n}\n`\n\nexport const ChatRoomResponseFragment = `fragment ChatRoomResponse on ChatRoomResponse {\n  success\n  message\n  data {\n    ...ChatRoomNoNesting\n  }\n}\n`\n\nexport const EthContractSourceConnectionFragment = `fragment EthContractSourceConnection on EthContractSourceConnection {\n  pageInfo {\n    ...PageInfoNoNesting\n  }\n  edges {\n    ...EthContractSourceEdgeNoNesting\n  }\n  aggregate {\n    ...AggregateEthContractSourceNoNesting\n  }\n}\n`\n\n\nexport const ChatRoomPreviousValuesNoNestingFragment = `fragment ChatRoomPreviousValuesNoNesting on ChatRoomPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  image\n  code\n  isPublic\n}\n`\n\nexport const RouteResponseNoNestingFragment = `fragment RouteResponseNoNesting on RouteResponse {\n  success\n  message\n}\n`\n\nexport const NoticeSubscriptionPayloadNoNestingFragment = `fragment NoticeSubscriptionPayloadNoNesting on NoticeSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const UserGroupNoNestingFragment = `fragment UserGroupNoNesting on UserGroup {\n  id\n  name\n}\n`\n\nexport const NoticePreviousValuesNoNestingFragment = `fragment NoticePreviousValuesNoNesting on NoticePreviousValues {\n  id\n  createdAt\n  type\n}\n`\n\nexport const WorldNoNestingFragment = `fragment WorldNoNesting on World {\n  createdAt\n  updatedAt\n  id\n  name\n  seed\n  type\n  time\n  timeChanger\n  days\n  lastPlayed\n}\n`\n\nexport const GameSubscriptionPayloadNoNestingFragment = `fragment GameSubscriptionPayloadNoNesting on GameSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const PlayerNoNestingFragment = `fragment PlayerNoNesting on Player {\n  createdAt\n  updatedAt\n  id\n  isAdmin\n  gamemode\n  lastLogin\n  x\n  y\n  z\n  dirx\n  diry\n}\n`\n\nexport const GamePreviousValuesNoNestingFragment = `fragment GamePreviousValuesNoNesting on GamePreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  start_date\n  end_date\n  sequence\n}\n`\n\nexport const MessageNoNestingFragment = `fragment MessageNoNesting on Message {\n  id\n  type\n  sender\n  body\n}\n`\n\nexport const GameResultSubscriptionPayloadNoNestingFragment = `fragment GameResultSubscriptionPayloadNoNesting on GameResultSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const LogedInNoNestingFragment = `fragment LogedInNoNesting on LogedIn {\n  id\n  createdAt\n  fake\n}\n`\n\nexport const GameResultPreviousValuesNoNestingFragment = `fragment GameResultPreviousValuesNoNesting on GameResultPreviousValues {\n  id\n  createdAt\n  updatedAt\n  date\n  name\n  value\n}\n`\n\nexport const FileNoNestingFragment = `fragment FileNoNesting on File {\n  id\n  path\n  name\n  filename\n  mimetype\n  encoding\n  hash\n  size\n}\n`\n\nexport const TournamentSubscriptionPayloadNoNestingFragment = `fragment TournamentSubscriptionPayloadNoNesting on TournamentSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ResourceTagNoNestingFragment = `fragment ResourceTagNoNesting on ResourceTag {\n  id\n  createdAt\n  updatedAt\n  status\n}\n`\n\nexport const TournamentPreviousValuesNoNestingFragment = `fragment TournamentPreviousValuesNoNesting on TournamentPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n}\n`\n\nexport const ServiceNoNestingFragment = `fragment ServiceNoNesting on Service {\n  id\n  name\n  description\n  code\n  rank\n  oldID\n}\n`\n\nexport const TournamentGroupSubscriptionPayloadNoNestingFragment = `fragment TournamentGroupSubscriptionPayloadNoNesting on TournamentGroupSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ProjectNoNestingFragment = `fragment ProjectNoNesting on Project {\n  id\n  name\n  domain\n  createdAt\n  updatedAt\n  description\n  url\n  sequence\n  content\n  contentText\n  status\n  public\n  oldID\n}\n`\n\nexport const TournamentGroupPreviousValuesNoNestingFragment = `fragment TournamentGroupPreviousValuesNoNesting on TournamentGroupPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n}\n`\n\nexport const TaskNoNestingFragment = `fragment TaskNoNesting on Task {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  content\n  status\n  startDatePlaning\n  endDatePlaning\n  startDate\n  endDate\n}\n`\n\nexport const TourneySubscriptionPayloadNoNestingFragment = `fragment TourneySubscriptionPayloadNoNesting on TourneySubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const TimerNoNestingFragment = `fragment TimerNoNesting on Timer {\n  id\n  createdAt\n  stopedAt\n}\n`\n\nexport const TourneyPreviousValuesNoNestingFragment = `fragment TourneyPreviousValuesNoNesting on TourneyPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  date\n}\n`\n\nexport const ChatRoomNoNestingFragment = `fragment ChatRoomNoNesting on ChatRoom {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  image\n  code\n  isPublic\n}\n`\n\nexport const EthTransactionSubscriptionPayloadNoNestingFragment = `fragment EthTransactionSubscriptionPayloadNoNesting on EthTransactionSubscriptionPayload {\n  mutation\n}\n`\n\nexport const ChatMessageReadedNoNestingFragment = `fragment ChatMessageReadedNoNesting on ChatMessageReaded {\n  id\n  createdAt\n}\n`\n\nexport const CallRequestSubscriptionPayloadNoNestingFragment = `fragment CallRequestSubscriptionPayloadNoNesting on CallRequestSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const NoticeNoNestingFragment = `fragment NoticeNoNesting on Notice {\n  id\n  createdAt\n  type\n}\n`\n\nexport const CallRequestPreviousValuesNoNestingFragment = `fragment CallRequestPreviousValuesNoNesting on CallRequestPreviousValues {\n  id\n  called_descriptions\n  caller_descriptions\n  status\n  startedAt\n  endedAt\n}\n`\n\nexport const TeamNoNestingFragment = `fragment TeamNoNesting on Team {\n  id\n  name\n  status\n  oldID\n  address\n  website\n  email\n  phone\n}\n`\n\nexport const PositionSubscriptionPayloadNoNestingFragment = `fragment PositionSubscriptionPayloadNoNesting on PositionSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const EthAccountNoNestingFragment = `fragment EthAccountNoNesting on EthAccount {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  address\n  type\n  source\n  bytecode\n  abi\n  balance\n}\n`\n\nexport const PositionPreviousValuesNoNestingFragment = `fragment PositionPreviousValuesNoNesting on PositionPreviousValues {\n  id\n  code\n  name\n}\n`\n\nexport const EthBlockNoNestingFragment = `fragment EthBlockNoNesting on EthBlock {\n  id\n  createdAt\n  updatedAt\n  hash\n  number\n  difficulty\n  totalDifficulty\n  extraData\n  gasLimit\n  gasUsed\n  mixHash\n  nonce\n  parentHash\n  receiptsRoot\n  sha3Uncles\n  size\n  stateRoot\n  date\n  transactionsRoot\n  transactions_count\n}\n`\n\nexport const ProjectMemberSubscriptionPayloadNoNestingFragment = `fragment ProjectMemberSubscriptionPayloadNoNesting on ProjectMemberSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ServiceCategoryNoNestingFragment = `fragment ServiceCategoryNoNesting on ServiceCategory {\n  id\n  name\n  description\n  code\n}\n`\n\nexport const ProjectMemberPreviousValuesNoNestingFragment = `fragment ProjectMemberPreviousValuesNoNesting on ProjectMemberPreviousValues {\n  id\n  status\n}\n`\n\nexport const GameNoNestingFragment = `fragment GameNoNesting on Game {\n  id\n  createdAt\n  updatedAt\n  name\n  start_date\n  end_date\n  sequence\n}\n`\n\nexport const ServiceSubscriptionPayloadNoNestingFragment = `fragment ServiceSubscriptionPayloadNoNesting on ServiceSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const TournamentNoNestingFragment = `fragment TournamentNoNesting on Tournament {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n}\n`\n\nexport const ServicePreviousValuesNoNestingFragment = `fragment ServicePreviousValuesNoNesting on ServicePreviousValues {\n  id\n  name\n  description\n  code\n  rank\n  oldID\n}\n`\n\nexport const GameResultNoNestingFragment = `fragment GameResultNoNesting on GameResult {\n  id\n  createdAt\n  updatedAt\n  date\n  name\n  value\n}\n`\n\nexport const TaskSubscriptionPayloadNoNestingFragment = `fragment TaskSubscriptionPayloadNoNesting on TaskSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const RouteNoNestingFragment = `fragment RouteNoNesting on Route {\n  id\n  name\n  path\n  exact\n  component\n}\n`\n\nexport const TaskPreviousValuesNoNestingFragment = `fragment TaskPreviousValuesNoNesting on TaskPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  content\n  status\n  startDatePlaning\n  endDatePlaning\n  startDate\n  endDate\n}\n`\n\nexport const TaskReactionSubscriptionPayloadNoNestingFragment = `fragment TaskReactionSubscriptionPayloadNoNesting on TaskReactionSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const WorldEdgeNoNestingFragment = `fragment WorldEdgeNoNesting on WorldEdge {\n  cursor\n}\n`\n\nexport const TaskReactionPreviousValuesNoNestingFragment = `fragment TaskReactionPreviousValuesNoNesting on TaskReactionPreviousValues {\n  id\n  createdAt\n  updatedAt\n  type\n}\n`\n\nexport const TeamMemberSubscriptionPayloadNoNestingFragment = `fragment TeamMemberSubscriptionPayloadNoNesting on TeamMemberSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const AggregateResourceNoNestingFragment = `fragment AggregateResourceNoNesting on AggregateResource {\n  count\n}\n`\n\nexport const TeamMemberPreviousValuesNoNestingFragment = `fragment TeamMemberPreviousValuesNoNesting on TeamMemberPreviousValues {\n  id\n  status\n}\n`\n\nexport const ChatMessageReadedEdgeNoNestingFragment = `fragment ChatMessageReadedEdgeNoNesting on ChatMessageReadedEdge {\n  cursor\n}\n`\n\nexport const TimerSubscriptionPayloadNoNestingFragment = `fragment TimerSubscriptionPayloadNoNesting on TimerSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const TimerPreviousValuesNoNestingFragment = `fragment TimerPreviousValuesNoNesting on TimerPreviousValues {\n  id\n  createdAt\n  stopedAt\n}\n`\n\nexport const AggregateChatRoomNoNestingFragment = `fragment AggregateChatRoomNoNesting on AggregateChatRoom {\n  count\n}\n`\n\nexport const RouteSubscriptionPayloadNoNestingFragment = `fragment RouteSubscriptionPayloadNoNesting on RouteSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const NoticeEdgeNoNestingFragment = `fragment NoticeEdgeNoNesting on NoticeEdge {\n  cursor\n}\n`\n\nexport const RoutePreviousValuesNoNestingFragment = `fragment RoutePreviousValuesNoNesting on RoutePreviousValues {\n  id\n  name\n  path\n  exact\n  component\n}\n`\n\nexport const TeamSubscriptionPayloadNoNestingFragment = `fragment TeamSubscriptionPayloadNoNesting on TeamSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const AggregateNotificationTypeNoNestingFragment = `fragment AggregateNotificationTypeNoNesting on AggregateNotificationType {\n  count\n}\n`\n\nexport const TeamPreviousValuesNoNestingFragment = `fragment TeamPreviousValuesNoNesting on TeamPreviousValues {\n  id\n  name\n  status\n  oldID\n  address\n  website\n  email\n  phone\n}\n`\n\nexport const ResourceTagEdgeNoNestingFragment = `fragment ResourceTagEdgeNoNesting on ResourceTagEdge {\n  cursor\n}\n`\n\nexport const ProjectSubscriptionPayloadNoNestingFragment = `fragment ProjectSubscriptionPayloadNoNesting on ProjectSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ProjectPreviousValuesNoNestingFragment = `fragment ProjectPreviousValuesNoNesting on ProjectPreviousValues {\n  id\n  name\n  domain\n  createdAt\n  updatedAt\n  description\n  url\n  sequence\n  content\n  contentText\n  status\n  public\n  oldID\n}\n`\n\nexport const AggregateTagNoNestingFragment = `fragment AggregateTagNoNesting on AggregateTag {\n  count\n}\n`\n\nexport const TemplateSubscriptionPayloadNoNestingFragment = `fragment TemplateSubscriptionPayloadNoNesting on TemplateSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const GameEdgeNoNestingFragment = `fragment GameEdgeNoNesting on GameEdge {\n  cursor\n}\n`\n\nexport const TemplatePreviousValuesNoNestingFragment = `fragment TemplatePreviousValuesNoNesting on TemplatePreviousValues {\n  id\n  createdAt\n  updatedAt\n  externalKey\n  name\n  description\n  component\n  props\n  components\n  vars\n  rank\n}\n`\n\nexport const ChatMessageSubscriptionPayloadNoNestingFragment = `fragment ChatMessageSubscriptionPayloadNoNesting on ChatMessageSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const AggregateGameResultNoNestingFragment = `fragment AggregateGameResultNoNesting on AggregateGameResult {\n  count\n}\n`\n\nexport const ChatMessagePreviousValuesNoNestingFragment = `fragment ChatMessagePreviousValuesNoNesting on ChatMessagePreviousValues {\n  id\n  createdAt\n  updatedAt\n  content\n  contentText\n}\n`\n\nexport const TournamentEdgeNoNestingFragment = `fragment TournamentEdgeNoNesting on TournamentEdge {\n  cursor\n}\n`\n\nexport const UserSubscriptionPayloadNoNestingFragment = `fragment UserSubscriptionPayloadNoNesting on UserSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const UserPreviousValuesNoNestingFragment = `fragment UserPreviousValuesNoNesting on UserPreviousValues {\n  id\n  createdAt\n  updatedAt\n  username\n  email\n  phone\n  showEmail\n  showPhone\n  password\n  fullname\n  image\n  address\n  active\n  activated\n  deleted\n  hidden\n  sudo\n  marketplaceToken\n  oldID\n}\n`\n\nexport const AggregateTournamentGroupNoNestingFragment = `fragment AggregateTournamentGroupNoNesting on AggregateTournamentGroup {\n  count\n}\n`\n\nexport const ImportResponseNoNestingFragment = `fragment ImportResponseNoNesting on ImportResponse {\n  success\n  message\n}\n`\n\nexport const TourneyEdgeNoNestingFragment = `fragment TourneyEdgeNoNesting on TourneyEdge {\n  cursor\n}\n`\n\nexport const ImportNoNestingFragment = `fragment ImportNoNesting on Import {\n  id\n  createdAt\n  updatedAt\n  name\n  status\n}\n`\n\nexport const LogNoNestingFragment = `fragment LogNoNesting on Log {\n  id\n  level\n  objectType\n  message\n  stack\n}\n`\n\nexport const AggregateVoteNoNestingFragment = `fragment AggregateVoteNoNesting on AggregateVote {\n  count\n}\n`\n\nexport const AggregateBlockNoNestingFragment = `fragment AggregateBlockNoNesting on AggregateBlock {\n  count\n}\n`\n\nexport const EthAccountEdgeNoNestingFragment = `fragment EthAccountEdgeNoNesting on EthAccountEdge {\n  cursor\n}\n`\n\nexport const AggregateChatRoomInvitationNoNestingFragment = `fragment AggregateChatRoomInvitationNoNesting on AggregateChatRoomInvitation {\n  count\n}\n`\n\nexport const AggregateFileNoNestingFragment = `fragment AggregateFileNoNesting on AggregateFile {\n  count\n}\n`\n\nexport const AggregateEthTransactionNoNestingFragment = `fragment AggregateEthTransactionNoNesting on AggregateEthTransaction {\n  count\n}\n`\n\nexport const AggregateImportNoNestingFragment = `fragment AggregateImportNoNesting on AggregateImport {\n  count\n}\n`\n\nexport const CallRequestEdgeNoNestingFragment = `fragment CallRequestEdgeNoNesting on CallRequestEdge {\n  cursor\n}\n`\n\nexport const AggregateInventoryNoNestingFragment = `fragment AggregateInventoryNoNesting on AggregateInventory {\n  count\n}\n`\n\nexport const AggregateLetsadsSmsMessageStatusNoNestingFragment = `fragment AggregateLetsadsSmsMessageStatusNoNesting on AggregateLetsadsSmsMessageStatus {\n  count\n}\n`\n\nexport const AggregatePositionNoNestingFragment = `fragment AggregatePositionNoNesting on AggregatePosition {\n  count\n}\n`\n\nexport const AggregateLetsadsSmsMessageStatusItemNoNestingFragment = `fragment AggregateLetsadsSmsMessageStatusItemNoNesting on AggregateLetsadsSmsMessageStatusItem {\n  count\n}\n`\n\nexport const ProjectMemberEdgeNoNestingFragment = `fragment ProjectMemberEdgeNoNesting on ProjectMemberEdge {\n  cursor\n}\n`\n\nexport const AggregateLetterNoNestingFragment = `fragment AggregateLetterNoNesting on AggregateLetter {\n  count\n}\n`\n\nexport const AggregateLogNoNestingFragment = `fragment AggregateLogNoNesting on AggregateLog {\n  count\n}\n`\n\nexport const AggregateServiceNoNestingFragment = `fragment AggregateServiceNoNesting on AggregateService {\n  count\n}\n`\n\nexport const AggregateLogedInNoNestingFragment = `fragment AggregateLogedInNoNesting on AggregateLogedIn {\n  count\n}\n`\n\nexport const TaskEdgeNoNestingFragment = `fragment TaskEdgeNoNesting on TaskEdge {\n  cursor\n}\n`\n\nexport const AggregateMessageNoNestingFragment = `fragment AggregateMessageNoNesting on AggregateMessage {\n  count\n}\n`\n\nexport const AggregatePlayerNoNestingFragment = `fragment AggregatePlayerNoNesting on AggregatePlayer {\n  count\n}\n`\n\nexport const AggregateTaskReactionNoNestingFragment = `fragment AggregateTaskReactionNoNesting on AggregateTaskReaction {\n  count\n}\n`\n\nexport const AggregateResetPasswordNoNestingFragment = `fragment AggregateResetPasswordNoNesting on AggregateResetPassword {\n  count\n}\n`\n\nexport const TeamMemberEdgeNoNestingFragment = `fragment TeamMemberEdgeNoNesting on TeamMemberEdge {\n  cursor\n}\n`\n\nexport const AggregateServiceCategoryNoNestingFragment = `fragment AggregateServiceCategoryNoNesting on AggregateServiceCategory {\n  count\n}\n`\n\nexport const AggregateSettingsNoNestingFragment = `fragment AggregateSettingsNoNesting on AggregateSettings {\n  count\n}\n`\n\nexport const AggregateTimerNoNestingFragment = `fragment AggregateTimerNoNesting on AggregateTimer {\n  count\n}\n`\n\nexport const AggregateSmsMessageNoNestingFragment = `fragment AggregateSmsMessageNoNesting on AggregateSmsMessage {\n  count\n}\n`\n\nexport const RouteEdgeNoNestingFragment = `fragment RouteEdgeNoNesting on RouteEdge {\n  cursor\n}\n`\n\nexport const AggregateSmsProviderNoNestingFragment = `fragment AggregateSmsProviderNoNesting on AggregateSmsProvider {\n  count\n}\n`\n\nexport const AggregateTaskMemberNoNestingFragment = `fragment AggregateTaskMemberNoNesting on AggregateTaskMember {\n  count\n}\n`\n\nexport const AggregateTestNoNestingFragment = `fragment AggregateTestNoNesting on AggregateTest {\n  count\n}\n`\n\nexport const AggregateUserGroupNoNestingFragment = `fragment AggregateUserGroupNoNesting on AggregateUserGroup {\n  count\n}\n`\n\nexport const EthBlockEdgeNoNestingFragment = `fragment EthBlockEdgeNoNesting on EthBlockEdge {\n  cursor\n}\n`\n\nexport const BlockEdgeNoNestingFragment = `fragment BlockEdgeNoNesting on BlockEdge {\n  cursor\n}\n`\n\nexport const AggregateTeamNoNestingFragment = `fragment AggregateTeamNoNesting on AggregateTeam {\n  count\n}\n`\n\nexport const BlockPreviousValuesNoNestingFragment = `fragment BlockPreviousValuesNoNesting on BlockPreviousValues {\n  id\n  representation\n  type\n  x\n  y\n  z\n}\n`\n\nexport const EthContractSourceEdgeNoNestingFragment = `fragment EthContractSourceEdgeNoNesting on EthContractSourceEdge {\n  cursor\n}\n`\n\nexport const BlockSubscriptionPayloadNoNestingFragment = `fragment BlockSubscriptionPayloadNoNesting on BlockSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const AggregateProjectNoNestingFragment = `fragment AggregateProjectNoNesting on AggregateProject {\n  count\n}\n`\n\nexport const ChatRoomInvitationEdgeNoNestingFragment = `fragment ChatRoomInvitationEdgeNoNesting on ChatRoomInvitationEdge {\n  cursor\n}\n`\n\nexport const TemplateEdgeNoNestingFragment = `fragment TemplateEdgeNoNesting on TemplateEdge {\n  cursor\n}\n`\n\nexport const ChatRoomInvitationPreviousValuesNoNestingFragment = `fragment ChatRoomInvitationPreviousValuesNoNesting on ChatRoomInvitationPreviousValues {\n  id\n  createdAt\n  updatedAt\n}\n`\n\nexport const ChatRoomInvitationSubscriptionPayloadNoNestingFragment = `fragment ChatRoomInvitationSubscriptionPayloadNoNesting on ChatRoomInvitationSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const AggregateChatMessageNoNestingFragment = `fragment AggregateChatMessageNoNesting on AggregateChatMessage {\n  count\n}\n`\n\nexport const EthAccountPreviousValuesNoNestingFragment = `fragment EthAccountPreviousValuesNoNesting on EthAccountPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  address\n  type\n  source\n  bytecode\n  abi\n}\n`\n\nexport const UserEdgeNoNestingFragment = `fragment UserEdgeNoNesting on UserEdge {\n  cursor\n}\n`\n\nexport const EthAccountSubscriptionPayloadNoNestingFragment = `fragment EthAccountSubscriptionPayloadNoNesting on EthAccountSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ethNetNoNestingFragment = `fragment ethNetNoNesting on ethNet {\n  id\n  isListening\n  peerCount\n  networkType\n}\n`\n\nexport const EthBlockPreviousValuesNoNestingFragment = `fragment EthBlockPreviousValuesNoNesting on EthBlockPreviousValues {\n  id\n  createdAt\n  updatedAt\n  hash\n  number\n  difficulty\n  totalDifficulty\n  extraData\n  gasLimit\n  gasUsed\n  mixHash\n  nonce\n  parentHash\n  receiptsRoot\n  sha3Uncles\n  size\n  stateRoot\n  date\n  transactionsRoot\n  transactions_count\n}\n`\n\nexport const ethSyncStateNoNestingFragment = `fragment ethSyncStateNoNesting on ethSyncState {\n  startingBlock\n  currentBlock\n  highestBlock\n  knownStates\n  pulledStates\n}\n`\n\nexport const EthBlockSubscriptionPayloadNoNestingFragment = `fragment EthBlockSubscriptionPayloadNoNesting on EthBlockSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ErrorNoNestingFragment = `fragment ErrorNoNesting on Error {\n  key\n  message\n}\n`\n\nexport const EthContractSourcePreviousValuesNoNestingFragment = `fragment EthContractSourcePreviousValuesNoNesting on EthContractSourcePreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  source\n}\n`\n\nexport const TimerResponseNoNestingFragment = `fragment TimerResponseNoNesting on TimerResponse {\n  success\n  message\n}\n`\n\nexport const EthContractSourceSubscriptionPayloadNoNestingFragment = `fragment EthContractSourceSubscriptionPayloadNoNesting on EthContractSourceSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const TestResponseNoNestingFragment = `fragment TestResponseNoNesting on TestResponse {\n  success\n  message\n}\n`\n\nexport const EthTransactionPreviousValuesNoNestingFragment = `fragment EthTransactionPreviousValuesNoNesting on EthTransactionPreviousValues {\n  id\n  createdAt\n  updatedAt\n  chainId\n  amount\n  input\n  index\n  address\n  type\n  v\n  r\n  s\n}\n`\n\nexport const EthAccountResponseNoNestingFragment = `fragment EthAccountResponseNoNesting on EthAccountResponse {\n  success\n  message\n}\n`\n\nexport const McJsAuthPayloadNoNestingFragment = `fragment McJsAuthPayloadNoNesting on McJsAuthPayload {\n  token\n}\n`\n\nexport const FileEdgeNoNestingFragment = `fragment FileEdgeNoNesting on FileEdge {\n  cursor\n}\n`\n\nexport const ResetPasswordResponseNoNestingFragment = `fragment ResetPasswordResponseNoNesting on ResetPasswordResponse {\n  success\n  message\n}\n`\n\nexport const FilePreviousValuesNoNestingFragment = `fragment FilePreviousValuesNoNesting on FilePreviousValues {\n  id\n  path\n  name\n  filename\n  mimetype\n  encoding\n  hash\n  size\n}\n`\n\nexport const TemplateResponseNoNestingFragment = `fragment TemplateResponseNoNesting on TemplateResponse {\n  success\n  message\n}\n`\n\nexport const FileSubscriptionPayloadNoNestingFragment = `fragment FileSubscriptionPayloadNoNesting on FileSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ChatMessageResponseNoNestingFragment = `fragment ChatMessageResponseNoNesting on ChatMessageResponse {\n  success\n  message\n}\n`\n\nexport const CallRequestResponseNoNestingFragment = `fragment CallRequestResponseNoNesting on CallRequestResponse {\n  success\n  message\n}\n`\n\nexport const ImportEdgeNoNestingFragment = `fragment ImportEdgeNoNesting on ImportEdge {\n  cursor\n}\n`\n\nexport const PlayerSubscriptionPayloadNoNestingFragment = `fragment PlayerSubscriptionPayloadNoNesting on PlayerSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ImportPreviousValuesNoNestingFragment = `fragment ImportPreviousValuesNoNesting on ImportPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  status\n}\n`\n\nexport const WorldSubscriptionPayloadNoNestingFragment = `fragment WorldSubscriptionPayloadNoNesting on WorldSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ImportSubscriptionPayloadNoNestingFragment = `fragment ImportSubscriptionPayloadNoNesting on ImportSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const MessageSubscriptionPayloadNoNestingFragment = `fragment MessageSubscriptionPayloadNoNesting on MessageSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ResourceSubscriptionPayloadNoNestingFragment = `fragment ResourceSubscriptionPayloadNoNesting on ResourceSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const InventoryEdgeNoNestingFragment = `fragment InventoryEdgeNoNesting on InventoryEdge {\n  cursor\n}\n`\n\nexport const ChatMessageReadedSubscriptionPayloadNoNestingFragment = `fragment ChatMessageReadedSubscriptionPayloadNoNesting on ChatMessageReadedSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const InventoryPreviousValuesNoNestingFragment = `fragment InventoryPreviousValuesNoNesting on InventoryPreviousValues {\n  id\n  cursor\n  data\n}\n`\n\nexport const ChatRoomSubscriptionPayloadNoNestingFragment = `fragment ChatRoomSubscriptionPayloadNoNesting on ChatRoomSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const InventorySubscriptionPayloadNoNestingFragment = `fragment InventorySubscriptionPayloadNoNesting on InventorySubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const BlockNoNestingFragment = `fragment BlockNoNesting on Block {\n  id\n  representation\n  type\n  x\n  y\n  z\n}\n`\n\nexport const LetsadsSmsMessageStatusNoNestingFragment = `fragment LetsadsSmsMessageStatusNoNesting on LetsadsSmsMessageStatus {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  errorCode\n}\n`\n\nexport const SettingsNoNestingFragment = `fragment SettingsNoNesting on Settings {\n  id\n  renderDistance\n}\n`\n\nexport const SmsMessageNoNestingFragment = `fragment SmsMessageNoNesting on SmsMessage {\n  id\n  createdAt\n  updatedAt\n  from\n  text\n  deletOnSend\n}\n`\n\nexport const VoteNoNestingFragment = `fragment VoteNoNesting on Vote {\n  id\n  createdAt\n  updatedAt\n  value\n}\n`\n\nexport const SmsProviderNoNestingFragment = `fragment SmsProviderNoNesting on SmsProvider {\n  id\n  name\n  credentials\n}\n`\n\nexport const ProjectMemberNoNestingFragment = `fragment ProjectMemberNoNesting on ProjectMember {\n  id\n  status\n}\n`\n\nexport const LetsadsSmsMessageStatusItemNoNestingFragment = `fragment LetsadsSmsMessageStatusItemNoNesting on LetsadsSmsMessageStatusItem {\n  id\n  createdAt\n  updatedAt\n  sms_id\n}\n`\n\nexport const TaskMemberNoNestingFragment = `fragment TaskMemberNoNesting on TaskMember {\n  id\n  status\n}\n`\n\nexport const ChatMessageNoNestingFragment = `fragment ChatMessageNoNesting on ChatMessage {\n  id\n  createdAt\n  updatedAt\n  content\n  contentText\n}\n`\n\nexport const LetsadsSmsMessageStatusEdgeNoNestingFragment = `fragment LetsadsSmsMessageStatusEdgeNoNesting on LetsadsSmsMessageStatusEdge {\n  cursor\n}\n`\n\nexport const CallRequestNoNestingFragment = `fragment CallRequestNoNesting on CallRequest {\n  id\n  called_descriptions\n  caller_descriptions\n  status\n  startedAt\n  endedAt\n}\n`\n\nexport const EthTransactionNoNestingFragment = `fragment EthTransactionNoNesting on EthTransaction {\n  id\n  createdAt\n  updatedAt\n  chainId\n  amount\n  input\n  index\n  address\n  type\n  v\n  r\n  s\n}\n`\n\nexport const LetsadsSmsMessageStatusItemEdgeNoNestingFragment = `fragment LetsadsSmsMessageStatusItemEdgeNoNesting on LetsadsSmsMessageStatusItemEdge {\n  cursor\n}\n`\n\nexport const NotificationTypeNoNestingFragment = `fragment NotificationTypeNoNesting on NotificationType {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  comment\n  oldID\n}\n`\n\nexport const LetsadsSmsMessageStatusItemPreviousValuesNoNestingFragment = `fragment LetsadsSmsMessageStatusItemPreviousValuesNoNesting on LetsadsSmsMessageStatusItemPreviousValues {\n  id\n  createdAt\n  updatedAt\n  sms_id\n}\n`\n\nexport const TournamentGroupNoNestingFragment = `fragment TournamentGroupNoNesting on TournamentGroup {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n}\n`\n\nexport const LetsadsSmsMessageStatusItemSubscriptionPayloadNoNestingFragment = `fragment LetsadsSmsMessageStatusItemSubscriptionPayloadNoNesting on LetsadsSmsMessageStatusItemSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const TestNoNestingFragment = `fragment TestNoNesting on Test {\n  id\n  createdAt\n  updatedAt\n  name\n  text\n  quantity\n  date\n}\n`\n\nexport const LetsadsSmsMessageStatusPreviousValuesNoNestingFragment = `fragment LetsadsSmsMessageStatusPreviousValuesNoNesting on LetsadsSmsMessageStatusPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  errorCode\n}\n`\n\nexport const AggregateWorldNoNestingFragment = `fragment AggregateWorldNoNesting on AggregateWorld {\n  count\n}\n`\n\nexport const LetsadsSmsMessageStatusSubscriptionPayloadNoNestingFragment = `fragment LetsadsSmsMessageStatusSubscriptionPayloadNoNesting on LetsadsSmsMessageStatusSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const LetterNoNestingFragment = `fragment LetterNoNesting on Letter {\n  id\n  email\n  subject\n  message\n  status\n  rank\n  deleteOnSend\n  replyTo\n  returnTo\n  createdAt\n  updatedAt\n}\n`\n\nexport const ChatRoomEdgeNoNestingFragment = `fragment ChatRoomEdgeNoNesting on ChatRoomEdge {\n  cursor\n}\n`\n\nexport const AggregateNoticeNoNestingFragment = `fragment AggregateNoticeNoNesting on AggregateNotice {\n  count\n}\n`\n\nexport const LetterEdgeNoNestingFragment = `fragment LetterEdgeNoNesting on LetterEdge {\n  cursor\n}\n`\n\nexport const LetterPreviousValuesNoNestingFragment = `fragment LetterPreviousValuesNoNesting on LetterPreviousValues {\n  id\n  email\n  subject\n  message\n  status\n  rank\n  deleteOnSend\n  replyTo\n  returnTo\n  createdAt\n  updatedAt\n}\n`\n\nexport const TagEdgeNoNestingFragment = `fragment TagEdgeNoNesting on TagEdge {\n  cursor\n}\n`\n\nexport const LetterSubscriptionPayloadNoNestingFragment = `fragment LetterSubscriptionPayloadNoNesting on LetterSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const AggregateGameNoNestingFragment = `fragment AggregateGameNoNesting on AggregateGame {\n  count\n}\n`\n\nexport const LogEdgeNoNestingFragment = `fragment LogEdgeNoNesting on LogEdge {\n  cursor\n}\n`\n\nexport const TournamentGroupEdgeNoNestingFragment = `fragment TournamentGroupEdgeNoNesting on TournamentGroupEdge {\n  cursor\n}\n`\n\nexport const AggregateTourneyNoNestingFragment = `fragment AggregateTourneyNoNesting on AggregateTourney {\n  count\n}\n`\n\nexport const LogedInEdgeNoNestingFragment = `fragment LogedInEdgeNoNesting on LogedInEdge {\n  cursor\n}\n`\n\nexport const LogedInPreviousValuesNoNestingFragment = `fragment LogedInPreviousValuesNoNesting on LogedInPreviousValues {\n  id\n  createdAt\n  fake\n}\n`\n\nexport const EthTransactionEdgeNoNestingFragment = `fragment EthTransactionEdgeNoNesting on EthTransactionEdge {\n  cursor\n}\n`\n\nexport const LogedInSubscriptionPayloadNoNestingFragment = `fragment LogedInSubscriptionPayloadNoNesting on LogedInSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const AggregateCallRequestNoNestingFragment = `fragment AggregateCallRequestNoNesting on AggregateCallRequest {\n  count\n}\n`\n\nexport const LogPreviousValuesNoNestingFragment = `fragment LogPreviousValuesNoNesting on LogPreviousValues {\n  id\n  level\n  objectType\n  message\n  stack\n}\n`\n\nexport const LogSubscriptionPayloadNoNestingFragment = `fragment LogSubscriptionPayloadNoNesting on LogSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ServiceEdgeNoNestingFragment = `fragment ServiceEdgeNoNesting on ServiceEdge {\n  cursor\n}\n`\n\nexport const AggregateTaskNoNestingFragment = `fragment AggregateTaskNoNesting on AggregateTask {\n  count\n}\n`\n\nexport const MessageEdgeNoNestingFragment = `fragment MessageEdgeNoNesting on MessageEdge {\n  cursor\n}\n`\n\nexport const NotificationTypePreviousValuesNoNestingFragment = `fragment NotificationTypePreviousValuesNoNesting on NotificationTypePreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  comment\n  oldID\n}\n`\n\nexport const TimerEdgeNoNestingFragment = `fragment TimerEdgeNoNesting on TimerEdge {\n  cursor\n}\n`\n\nexport const NotificationTypeSubscriptionPayloadNoNestingFragment = `fragment NotificationTypeSubscriptionPayloadNoNesting on NotificationTypeSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const AggregateRouteNoNestingFragment = `fragment AggregateRouteNoNesting on AggregateRoute {\n  count\n}\n`\n\nexport const PlayerEdgeNoNestingFragment = `fragment PlayerEdgeNoNesting on PlayerEdge {\n  cursor\n}\n`\n\nexport const TeamEdgeNoNestingFragment = `fragment TeamEdgeNoNesting on TeamEdge {\n  cursor\n}\n`\n\nexport const AggregateEthContractSourceNoNestingFragment = `fragment AggregateEthContractSourceNoNesting on AggregateEthContractSource {\n  count\n}\n`\n\nexport const ResetPasswordEdgeNoNestingFragment = `fragment ResetPasswordEdgeNoNesting on ResetPasswordEdge {\n  cursor\n}\n`\n\nexport const ResetPasswordPreviousValuesNoNestingFragment = `fragment ResetPasswordPreviousValuesNoNesting on ResetPasswordPreviousValues {\n  id\n  createdAt\n  updatedAt\n  code\n  password\n  validTill\n}\n`\n\nexport const ChatMessageEdgeNoNestingFragment = `fragment ChatMessageEdgeNoNesting on ChatMessageEdge {\n  cursor\n}\n`\n\nexport const ResetPasswordSubscriptionPayloadNoNestingFragment = `fragment ResetPasswordSubscriptionPayloadNoNesting on ResetPasswordSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const AggregateUserNoNestingFragment = `fragment AggregateUserNoNesting on AggregateUser {\n  count\n}\n`\n\nexport const ResourceTagPreviousValuesNoNestingFragment = `fragment ResourceTagPreviousValuesNoNesting on ResourceTagPreviousValues {\n  id\n  createdAt\n  updatedAt\n  status\n}\n`\n\nexport const ProjectResponseNoNestingFragment = `fragment ProjectResponseNoNesting on ProjectResponse {\n  success\n  message\n}\n`\n\nexport const ResourceTagSubscriptionPayloadNoNestingFragment = `fragment ResourceTagSubscriptionPayloadNoNesting on ResourceTagSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ResourceResponseNoNestingFragment = `fragment ResourceResponseNoNesting on ResourceResponse {\n  success\n  message\n}\n`\n\nexport const BatchPayloadNoNestingFragment = `fragment BatchPayloadNoNesting on BatchPayload {\n  count\n}\n`\n\nexport const ServiceCategoryEdgeNoNestingFragment = `fragment ServiceCategoryEdgeNoNesting on ServiceCategoryEdge {\n  cursor\n}\n`\n\nexport const ResetPasswordNoNestingFragment = `fragment ResetPasswordNoNesting on ResetPassword {\n  id\n  createdAt\n  updatedAt\n  code\n  password\n  validTill\n}\n`\n\nexport const ServiceCategoryPreviousValuesNoNestingFragment = `fragment ServiceCategoryPreviousValuesNoNesting on ServiceCategoryPreviousValues {\n  id\n  name\n  description\n  code\n}\n`\n\nexport const EthTransactionResponseNoNestingFragment = `fragment EthTransactionResponseNoNesting on EthTransactionResponse {\n  success\n  message\n}\n`\n\nexport const ServiceCategorySubscriptionPayloadNoNestingFragment = `fragment ServiceCategorySubscriptionPayloadNoNesting on ServiceCategorySubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const PlayerPreviousValuesNoNestingFragment = `fragment PlayerPreviousValuesNoNesting on PlayerPreviousValues {\n  createdAt\n  updatedAt\n  id\n  isAdmin\n  gamemode\n  lastLogin\n  x\n  y\n  z\n  dirx\n  diry\n}\n`\n\nexport const MessagePreviousValuesNoNestingFragment = `fragment MessagePreviousValuesNoNesting on MessagePreviousValues {\n  id\n  type\n  sender\n  body\n}\n`\n\nexport const SettingsEdgeNoNestingFragment = `fragment SettingsEdgeNoNesting on SettingsEdge {\n  cursor\n}\n`\n\nexport const ChatMessageReadedPreviousValuesNoNestingFragment = `fragment ChatMessageReadedPreviousValuesNoNesting on ChatMessageReadedPreviousValues {\n  id\n  createdAt\n}\n`\n\nexport const SettingsPreviousValuesNoNestingFragment = `fragment SettingsPreviousValuesNoNesting on SettingsPreviousValues {\n  id\n  renderDistance\n}\n`\n\nexport const InventoryNoNestingFragment = `fragment InventoryNoNesting on Inventory {\n  id\n  cursor\n  data\n}\n`\n\nexport const SettingsSubscriptionPayloadNoNestingFragment = `fragment SettingsSubscriptionPayloadNoNesting on SettingsSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const TagNoNestingFragment = `fragment TagNoNesting on Tag {\n  id\n  createdAt\n  updatedAt\n  name\n  status\n}\n`\n\nexport const TaskReactionNoNestingFragment = `fragment TaskReactionNoNesting on TaskReaction {\n  id\n  createdAt\n  updatedAt\n  type\n}\n`\n\nexport const SmsMessageEdgeNoNestingFragment = `fragment SmsMessageEdgeNoNesting on SmsMessageEdge {\n  cursor\n}\n`\n\nexport const TeamMemberNoNestingFragment = `fragment TeamMemberNoNesting on TeamMember {\n  id\n  status\n}\n`\n\nexport const SmsMessagePreviousValuesNoNestingFragment = `fragment SmsMessagePreviousValuesNoNesting on SmsMessagePreviousValues {\n  id\n  createdAt\n  updatedAt\n  from\n  text\n  deletOnSend\n}\n`\n\nexport const TourneyNoNestingFragment = `fragment TourneyNoNesting on Tourney {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  date\n}\n`\n\nexport const SmsMessageSubscriptionPayloadNoNestingFragment = `fragment SmsMessageSubscriptionPayloadNoNesting on SmsMessageSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const PageInfoNoNestingFragment = `fragment PageInfoNoNesting on PageInfo {\n  hasNextPage\n  hasPreviousPage\n  startCursor\n  endCursor\n}\n`\n\nexport const AggregateChatMessageReadedNoNestingFragment = `fragment AggregateChatMessageReadedNoNesting on AggregateChatMessageReaded {\n  count\n}\n`\n\nexport const SmsProviderEdgeNoNestingFragment = `fragment SmsProviderEdgeNoNesting on SmsProviderEdge {\n  cursor\n}\n`\n\nexport const NotificationTypeEdgeNoNestingFragment = `fragment NotificationTypeEdgeNoNesting on NotificationTypeEdge {\n  cursor\n}\n`\n\nexport const SmsProviderPreviousValuesNoNestingFragment = `fragment SmsProviderPreviousValuesNoNesting on SmsProviderPreviousValues {\n  id\n  name\n  credentials\n}\n`\n\nexport const SmsProviderSubscriptionPayloadNoNestingFragment = `fragment SmsProviderSubscriptionPayloadNoNesting on SmsProviderSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const AggregateTournamentNoNestingFragment = `fragment AggregateTournamentNoNesting on AggregateTournament {\n  count\n}\n`\n\nexport const TagPreviousValuesNoNestingFragment = `fragment TagPreviousValuesNoNesting on TagPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  status\n}\n`\n\nexport const VoteEdgeNoNestingFragment = `fragment VoteEdgeNoNesting on VoteEdge {\n  cursor\n}\n`\n\nexport const TagSubscriptionPayloadNoNestingFragment = `fragment TagSubscriptionPayloadNoNesting on TagSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const AggregateProjectMemberNoNestingFragment = `fragment AggregateProjectMemberNoNesting on AggregateProjectMember {\n  count\n}\n`\n\nexport const TaskMemberEdgeNoNestingFragment = `fragment TaskMemberEdgeNoNesting on TaskMemberEdge {\n  cursor\n}\n`\n\nexport const TaskReactionEdgeNoNestingFragment = `fragment TaskReactionEdgeNoNesting on TaskReactionEdge {\n  cursor\n}\n`\n\nexport const TaskMemberPreviousValuesNoNestingFragment = `fragment TaskMemberPreviousValuesNoNesting on TaskMemberPreviousValues {\n  id\n  status\n}\n`\n\nexport const TaskMemberSubscriptionPayloadNoNestingFragment = `fragment TaskMemberSubscriptionPayloadNoNesting on TaskMemberSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const AggregateEthBlockNoNestingFragment = `fragment AggregateEthBlockNoNesting on AggregateEthBlock {\n  count\n}\n`\n\nexport const TestPreviousValuesNoNestingFragment = `fragment TestPreviousValuesNoNesting on TestPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  text\n  quantity\n  date\n}\n`\n\nexport const ProjectEdgeNoNestingFragment = `fragment ProjectEdgeNoNesting on ProjectEdge {\n  cursor\n}\n`\n\nexport const TestSubscriptionPayloadNoNestingFragment = `fragment TestSubscriptionPayloadNoNesting on TestSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const TaskResponseNoNestingFragment = `fragment TaskResponseNoNesting on TaskResponse {\n  success\n  message\n}\n`\n\nexport const UserGroupEdgeNoNestingFragment = `fragment UserGroupEdgeNoNesting on UserGroupEdge {\n  cursor\n}\n`\n\nexport const UserResponseNoNestingFragment = `fragment UserResponseNoNesting on UserResponse {\n  success\n  message\n}\n`\n\nexport const UserGroupPreviousValuesNoNestingFragment = `fragment UserGroupPreviousValuesNoNesting on UserGroupPreviousValues {\n  id\n  name\n}\n`\n\nexport const TaskReactionResponseNoNestingFragment = `fragment TaskReactionResponseNoNesting on TaskReactionResponse {\n  success\n  message\n}\n`\n\nexport const UserGroupSubscriptionPayloadNoNestingFragment = `fragment UserGroupSubscriptionPayloadNoNesting on UserGroupSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ResourcePreviousValuesNoNestingFragment = `fragment ResourcePreviousValuesNoNesting on ResourcePreviousValues {\n  id\n  code\n  createdAt\n  updatedAt\n  type\n  name\n  longtitle\n  content\n  contentText\n  published\n  deleted\n  hidemenu\n  searchable\n  uri\n  isfolder\n  rating\n  positiveVotesCount\n  negativeVotesCount\n  neutralVotesCount\n  oldID\n  commentOldID\n  class_key\n  template\n  mockUpdate\n  components\n}\n`\n\nexport const VotePreviousValuesNoNestingFragment = `fragment VotePreviousValuesNoNesting on VotePreviousValues {\n  id\n  createdAt\n  updatedAt\n  value\n}\n`\n\nexport const ResourceNoNestingFragment = `fragment ResourceNoNesting on Resource {\n  id\n  createdAt\n  updatedAt\n  type\n  name\n  longtitle\n  content\n  components\n  contentText\n  published\n  deleted\n  hidemenu\n  searchable\n  uri\n  isfolder\n  rating\n  positiveVotesCount\n  negativeVotesCount\n  neutralVotesCount\n  oldID\n  commentOldID\n  class_key\n  template\n  mockUpdate\n}\n`\n\nexport const VoteSubscriptionPayloadNoNestingFragment = `fragment VoteSubscriptionPayloadNoNesting on VoteSubscriptionPayload {\n  mutation\n  updatedFields\n}\n`\n\nexport const ChatRoomInvitationNoNestingFragment = `fragment ChatRoomInvitationNoNesting on ChatRoomInvitation {\n  id\n  createdAt\n  updatedAt\n}\n`\n\nexport const SmsMessageResponseNoNestingFragment = `fragment SmsMessageResponseNoNesting on SmsMessageResponse {\n  success\n  message\n}\n`\n\nexport const PositionNoNestingFragment = `fragment PositionNoNesting on Position {\n  id\n  code\n  name\n}\n`\n\nexport const SmsProviderResponseNoNestingFragment = `fragment SmsProviderResponseNoNesting on SmsProviderResponse {\n  success\n  message\n}\n`\n\nexport const MarketplaceAuthResponseNoNestingFragment = `fragment MarketplaceAuthResponseNoNesting on MarketplaceAuthResponse {\n  success\n  message\n  data\n}\n`\n\nexport const GameResultEdgeNoNestingFragment = `fragment GameResultEdgeNoNesting on GameResultEdge {\n  cursor\n}\n`\n\nexport const ChatMessageReadedResponseNoNestingFragment = `fragment ChatMessageReadedResponseNoNesting on ChatMessageReadedResponse {\n  success\n  message\n}\n`\n\nexport const AggregateEthAccountNoNestingFragment = `fragment AggregateEthAccountNoNesting on AggregateEthAccount {\n  count\n}\n`\n\nexport const GameResponseNoNestingFragment = `fragment GameResponseNoNesting on GameResponse {\n  success\n  message\n}\n`\n\nexport const GameResultResponseNoNestingFragment = `fragment GameResultResponseNoNesting on GameResultResponse {\n  success\n  message\n}\n`\n\nexport const TestEdgeNoNestingFragment = `fragment TestEdgeNoNesting on TestEdge {\n  cursor\n}\n`\n\nexport const TournamentResponseNoNestingFragment = `fragment TournamentResponseNoNesting on TournamentResponse {\n  success\n  message\n}\n`\n\nexport const AggregateTemplateNoNestingFragment = `fragment AggregateTemplateNoNesting on AggregateTemplate {\n  count\n}\n`\n\nexport const TournamentGroupResponseNoNestingFragment = `fragment TournamentGroupResponseNoNesting on TournamentGroupResponse {\n  success\n  message\n}\n`\n\nexport const AuthPayloadNoNestingFragment = `fragment AuthPayloadNoNesting on AuthPayload {\n  success\n  message\n  token\n}\n`\n\nexport const TourneyResponseNoNestingFragment = `fragment TourneyResponseNoNesting on TourneyResponse {\n  success\n  message\n}\n`\n\nexport const WorldPreviousValuesNoNestingFragment = `fragment WorldPreviousValuesNoNesting on WorldPreviousValues {\n  createdAt\n  updatedAt\n  id\n  name\n  seed\n  type\n  time\n  timeChanger\n  days\n  lastPlayed\n}\n`\n\nexport const EthBlockResponseNoNestingFragment = `fragment EthBlockResponseNoNesting on EthBlockResponse {\n  success\n  message\n}\n`\n\nexport const TemplateNoNestingFragment = `fragment TemplateNoNesting on Template {\n  id\n  createdAt\n  updatedAt\n  externalKey\n  name\n  description\n  component\n  props\n  components\n  vars\n  rank\n}\n`\n\nexport const EthContractSourceResponseNoNestingFragment = `fragment EthContractSourceResponseNoNesting on EthContractSourceResponse {\n  success\n  message\n}\n`\n\nexport const ResourceEdgeNoNestingFragment = `fragment ResourceEdgeNoNesting on ResourceEdge {\n  cursor\n}\n`\n\nexport const EthPersonalAccountResponseNoNestingFragment = `fragment EthPersonalAccountResponseNoNesting on EthPersonalAccountResponse {\n  success\n  message\n}\n`\n\nexport const IceCandidateNoNestingFragment = `fragment IceCandidateNoNesting on IceCandidate {\n  from\n  to\n  sdp\n  callRequestId\n}\n`\n\nexport const AggregateTeamMemberNoNestingFragment = `fragment AggregateTeamMemberNoNesting on AggregateTeamMember {\n  count\n}\n`\n\nexport const PositionResponseNoNestingFragment = `fragment PositionResponseNoNesting on PositionResponse {\n  success\n  message\n}\n`\n\nexport const EthPersonalAccountNoNestingFragment = `fragment EthPersonalAccountNoNesting on EthPersonalAccount {\n  address\n  balance\n}\n`\n\nexport const ProjectMemberResponseNoNestingFragment = `fragment ProjectMemberResponseNoNesting on ProjectMemberResponse {\n  success\n  message\n}\n`\n\nexport const UserNoNestingFragment = `fragment UserNoNesting on User {\n  id\n  createdAt\n  updatedAt\n  username\n  email\n  phone\n  showEmail\n  showPhone\n  password\n  fullname\n  image\n  address\n  sudo\n  active\n  activated\n  deleted\n  hasEmail\n  hasPhone\n  marketplaceToken\n  hidden\n}\n`\n\nexport const AggregateResourceTagNoNestingFragment = `fragment AggregateResourceTagNoNesting on AggregateResourceTag {\n  count\n}\n`\n\nexport const TeamMemberResponseNoNestingFragment = `fragment TeamMemberResponseNoNesting on TeamMemberResponse {\n  success\n  message\n}\n`\n\nexport const TeamResponseNoNestingFragment = `fragment TeamResponseNoNesting on TeamResponse {\n  success\n  message\n}\n`\n\nexport const ServiceCategoryResponseNoNestingFragment = `fragment ServiceCategoryResponseNoNesting on ServiceCategoryResponse {\n  success\n  message\n}\n`\n\nexport const ServiceResponseNoNestingFragment = `fragment ServiceResponseNoNesting on ServiceResponse {\n  success\n  message\n}\n`\n\nexport const PositionEdgeNoNestingFragment = `fragment PositionEdgeNoNesting on PositionEdge {\n  cursor\n}\n`\n\nexport const EthContractSourceNoNestingFragment = `fragment EthContractSourceNoNesting on EthContractSource {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  source\n}\n`\n\nexport const ChatRoomResponseNoNestingFragment = `fragment ChatRoomResponseNoNesting on ChatRoomResponse {\n  success\n  message\n}\n`\n\n\nexport const ChatRoomPreviousValuesDeepNestingFragment = `fragment ChatRoomPreviousValuesDeepNesting on ChatRoomPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  image\n  code\n  isPublic\n}\n`\n\nexport const RouteResponseDeepNestingFragment = `fragment RouteResponseDeepNesting on RouteResponse {\n  success\n  message\n  data {\n    ...RouteDeepNesting\n  }\n}\n`\n\nexport const NoticeSubscriptionPayloadDeepNestingFragment = `fragment NoticeSubscriptionPayloadDeepNesting on NoticeSubscriptionPayload {\n  mutation\n  node {\n    ...NoticeDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...NoticePreviousValuesDeepNesting\n  }\n}\n`\n\nexport const UserGroupDeepNestingFragment = `fragment UserGroupDeepNesting on UserGroup {\n  id\n  name\n  Users {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const NoticePreviousValuesDeepNestingFragment = `fragment NoticePreviousValuesDeepNesting on NoticePreviousValues {\n  id\n  createdAt\n  type\n}\n`\n\nexport const WorldDeepNestingFragment = `fragment WorldDeepNesting on World {\n  createdAt\n  updatedAt\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  id\n  name\n  seed\n  type\n  time\n  timeChanger\n  days\n  lastPlayed\n  changedBlocks {\n    ...BlockDeepNesting\n  }\n  players {\n    ...PlayerDeepNesting\n  }\n  messages {\n    ...MessageDeepNesting\n  }\n}\n`\n\nexport const GameSubscriptionPayloadDeepNestingFragment = `fragment GameSubscriptionPayloadDeepNesting on GameSubscriptionPayload {\n  mutation\n  node {\n    ...GameDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...GamePreviousValuesDeepNesting\n  }\n}\n`\n\nexport const PlayerDeepNestingFragment = `fragment PlayerDeepNesting on Player {\n  createdAt\n  updatedAt\n  id\n  isAdmin\n  gamemode\n  user {\n    ...UserDeepNesting\n  }\n  world {\n    ...WorldDeepNesting\n  }\n  lastLogin\n  x\n  y\n  z\n  dirx\n  diry\n  inventory {\n    ...InventoryDeepNesting\n  }\n}\n`\n\nexport const GamePreviousValuesDeepNestingFragment = `fragment GamePreviousValuesDeepNesting on GamePreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  start_date\n  end_date\n  sequence\n}\n`\n\nexport const MessageDeepNestingFragment = `fragment MessageDeepNesting on Message {\n  id\n  world {\n    ...WorldDeepNesting\n  }\n  type\n  sender\n  body\n}\n`\n\nexport const GameResultSubscriptionPayloadDeepNestingFragment = `fragment GameResultSubscriptionPayloadDeepNesting on GameResultSubscriptionPayload {\n  mutation\n  node {\n    ...GameResultDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...GameResultPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const LogedInDeepNestingFragment = `fragment LogedInDeepNesting on LogedIn {\n  id\n  createdAt\n  fake\n  User {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const GameResultPreviousValuesDeepNestingFragment = `fragment GameResultPreviousValuesDeepNesting on GameResultPreviousValues {\n  id\n  createdAt\n  updatedAt\n  date\n  name\n  value\n}\n`\n\nexport const FileDeepNestingFragment = `fragment FileDeepNesting on File {\n  id\n  path\n  name\n  filename\n  mimetype\n  encoding\n  hash\n  size\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  ImageResource {\n    ...ResourceDeepNesting\n  }\n}\n`\n\nexport const TournamentSubscriptionPayloadDeepNestingFragment = `fragment TournamentSubscriptionPayloadDeepNesting on TournamentSubscriptionPayload {\n  mutation\n  node {\n    ...TournamentDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...TournamentPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ResourceTagDeepNestingFragment = `fragment ResourceTagDeepNesting on ResourceTag {\n  id\n  createdAt\n  updatedAt\n  status\n  Resource {\n    ...ResourceDeepNesting\n  }\n  Tag {\n    ...TagDeepNesting\n  }\n  CreatedBy {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const TournamentPreviousValuesDeepNestingFragment = `fragment TournamentPreviousValuesDeepNesting on TournamentPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n}\n`\n\nexport const ServiceDeepNestingFragment = `fragment ServiceDeepNesting on Service {\n  id\n  name\n  description\n  code\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Projects {\n    ...ProjectMemberDeepNesting\n  }\n  Parent {\n    ...ServiceDeepNesting\n  }\n  Childs {\n    ...ServiceDeepNesting\n  }\n  rank\n  Category {\n    ...ServiceCategoryDeepNesting\n  }\n  oldID\n  Resource {\n    ...ResourceDeepNesting\n  }\n}\n`\n\nexport const TournamentGroupSubscriptionPayloadDeepNestingFragment = `fragment TournamentGroupSubscriptionPayloadDeepNesting on TournamentGroupSubscriptionPayload {\n  mutation\n  node {\n    ...TournamentGroupDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...TournamentGroupPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ProjectDeepNestingFragment = `fragment ProjectDeepNesting on Project {\n  id\n  name\n  domain\n  PrismaTemplates {\n    ...TemplateDeepNesting\n  }\n  PrismaUsers {\n    ...UserDeepNesting\n  }\n  PrismaResources {\n    ...ResourceDeepNesting\n  }\n  createdAt\n  updatedAt\n  description\n  url\n  Members {\n    ...ProjectMemberDeepNesting\n  }\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Tasks {\n    ...TaskDeepNesting\n  }\n  Team {\n    ...TeamDeepNesting\n  }\n  Customers {\n    ...TeamDeepNesting\n  }\n  ChatRoom {\n    ...ChatRoomDeepNesting\n  }\n  sequence\n  content\n  contentText\n  status\n  public\n  EthAccounts {\n    ...EthAccountDeepNesting\n  }\n  oldID\n  Image {\n    ...FileDeepNesting\n  }\n  Resource {\n    ...ResourceDeepNesting\n  }\n}\n`\n\nexport const TournamentGroupPreviousValuesDeepNestingFragment = `fragment TournamentGroupPreviousValuesDeepNesting on TournamentGroupPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n}\n`\n\nexport const TaskDeepNestingFragment = `fragment TaskDeepNesting on Task {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  content\n  status\n  Project {\n    ...ProjectDeepNesting\n  }\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Members {\n    ...TaskMemberDeepNesting\n  }\n  Parent {\n    ...TaskDeepNesting\n  }\n  Childs {\n    ...TaskDeepNesting\n  }\n  RelatedFrom {\n    ...TaskDeepNesting\n  }\n  RelatedTo {\n    ...TaskDeepNesting\n  }\n  startDatePlaning\n  endDatePlaning\n  startDate\n  endDate\n  Timers {\n    ...TimerDeepNesting\n  }\n  Reactions {\n    ...TaskReactionDeepNesting\n  }\n  ChatRoom {\n    ...ChatRoomDeepNesting\n  }\n}\n`\n\nexport const TourneySubscriptionPayloadDeepNestingFragment = `fragment TourneySubscriptionPayloadDeepNesting on TourneySubscriptionPayload {\n  mutation\n  node {\n    ...TourneyDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...TourneyPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const TimerDeepNestingFragment = `fragment TimerDeepNesting on Timer {\n  id\n  createdAt\n  stopedAt\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Task {\n    ...TaskDeepNesting\n  }\n}\n`\n\nexport const TourneyPreviousValuesDeepNestingFragment = `fragment TourneyPreviousValuesDeepNesting on TourneyPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  date\n}\n`\n\nexport const ChatRoomDeepNestingFragment = `fragment ChatRoomDeepNesting on ChatRoom {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  image\n  code\n  Members {\n    ...UserDeepNesting\n  }\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Messages {\n    ...ChatMessageDeepNesting\n  }\n  isPublic\n  Invitations {\n    ...ChatRoomInvitationDeepNesting\n  }\n  CallRequests {\n    ...CallRequestDeepNesting\n  }\n  Task {\n    ...TaskDeepNesting\n  }\n  Project {\n    ...ProjectDeepNesting\n  }\n}\n`\n\nexport const EthTransactionSubscriptionPayloadDeepNestingFragment = `fragment EthTransactionSubscriptionPayloadDeepNesting on EthTransactionSubscriptionPayload {\n  mutation\n  node {\n    ...EthTransactionDeepNesting\n  }\n}\n`\n\nexport const ChatMessageReadedDeepNestingFragment = `fragment ChatMessageReadedDeepNesting on ChatMessageReaded {\n  id\n  createdAt\n  Message {\n    ...ChatMessageDeepNesting\n  }\n  User {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const CallRequestSubscriptionPayloadDeepNestingFragment = `fragment CallRequestSubscriptionPayloadDeepNesting on CallRequestSubscriptionPayload {\n  mutation\n  node {\n    ...CallRequestDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...CallRequestPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const NoticeDeepNestingFragment = `fragment NoticeDeepNesting on Notice {\n  id\n  createdAt\n  type\n  User {\n    ...UserDeepNesting\n  }\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  ChatMessage {\n    ...ChatMessageDeepNesting\n  }\n  ChatRoomInvitation {\n    ...ChatRoomInvitationDeepNesting\n  }\n}\n`\n\nexport const CallRequestPreviousValuesDeepNestingFragment = `fragment CallRequestPreviousValuesDeepNesting on CallRequestPreviousValues {\n  id\n  called_descriptions\n  caller_descriptions\n  status\n  startedAt\n  endedAt\n}\n`\n\nexport const TeamDeepNestingFragment = `fragment TeamDeepNesting on Team {\n  id\n  name\n  Parent {\n    ...TeamDeepNesting\n  }\n  Childs {\n    ...TeamDeepNesting\n  }\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Members {\n    ...TeamMemberDeepNesting\n  }\n  Projects {\n    ...ProjectDeepNesting\n  }\n  OrderedProjects {\n    ...ProjectDeepNesting\n  }\n  status\n  oldID\n  address\n  website\n  email\n  phone\n  Resource {\n    ...ResourceDeepNesting\n  }\n}\n`\n\nexport const PositionSubscriptionPayloadDeepNestingFragment = `fragment PositionSubscriptionPayloadDeepNesting on PositionSubscriptionPayload {\n  mutation\n  node {\n    ...PositionDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...PositionPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const EthAccountDeepNestingFragment = `fragment EthAccountDeepNesting on EthAccount {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  address\n  type\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Transaction {\n    ...EthTransactionDeepNesting\n  }\n  IncomeTransactions {\n    ...EthTransactionDeepNesting\n  }\n  OutcomeTransactions {\n    ...EthTransactionDeepNesting\n  }\n  source\n  bytecode\n  abi\n  ContractSource {\n    ...EthContractSourceDeepNesting\n  }\n  BlocksMined {\n    ...EthBlockDeepNesting\n  }\n  Project {\n    ...ProjectDeepNesting\n  }\n  Resources {\n    ...ResourceDeepNesting\n  }\n  UserAuthed {\n    ...UserDeepNesting\n  }\n  balance\n}\n`\n\nexport const PositionPreviousValuesDeepNestingFragment = `fragment PositionPreviousValuesDeepNesting on PositionPreviousValues {\n  id\n  code\n  name\n}\n`\n\nexport const EthBlockDeepNestingFragment = `fragment EthBlockDeepNesting on EthBlock {\n  id\n  createdAt\n  updatedAt\n  hash\n  number\n  difficulty\n  totalDifficulty\n  extraData\n  gasLimit\n  gasUsed\n  mixHash\n  nonce\n  parentHash\n  receiptsRoot\n  sha3Uncles\n  size\n  stateRoot\n  date\n  Miner {\n    ...EthAccountDeepNesting\n  }\n  Transactions {\n    ...EthTransactionDeepNesting\n  }\n  transactionsRoot\n  transactions_count\n  Uncles {\n    ...EthBlockDeepNesting\n  }\n}\n`\n\nexport const ProjectMemberSubscriptionPayloadDeepNestingFragment = `fragment ProjectMemberSubscriptionPayloadDeepNesting on ProjectMemberSubscriptionPayload {\n  mutation\n  node {\n    ...ProjectMemberDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...ProjectMemberPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ServiceCategoryDeepNestingFragment = `fragment ServiceCategoryDeepNesting on ServiceCategory {\n  id\n  name\n  description\n  code\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Services {\n    ...ServiceDeepNesting\n  }\n  Parent {\n    ...ServiceCategoryDeepNesting\n  }\n  Childs {\n    ...ServiceCategoryDeepNesting\n  }\n}\n`\n\nexport const ProjectMemberPreviousValuesDeepNestingFragment = `fragment ProjectMemberPreviousValuesDeepNesting on ProjectMemberPreviousValues {\n  id\n  status\n}\n`\n\nexport const GameDeepNestingFragment = `fragment GameDeepNesting on Game {\n  id\n  createdAt\n  updatedAt\n  name\n  start_date\n  end_date\n  sequence\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Tourney {\n    ...TourneyDeepNesting\n  }\n  Users {\n    ...UserDeepNesting\n  }\n  Teams {\n    ...TeamDeepNesting\n  }\n  Parent {\n    ...GameDeepNesting\n  }\n  Childs {\n    ...GameDeepNesting\n  }\n  Results {\n    ...GameResultDeepNesting\n  }\n}\n`\n\nexport const ServiceSubscriptionPayloadDeepNestingFragment = `fragment ServiceSubscriptionPayloadDeepNesting on ServiceSubscriptionPayload {\n  mutation\n  node {\n    ...ServiceDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...ServicePreviousValuesDeepNesting\n  }\n}\n`\n\nexport const TournamentDeepNestingFragment = `fragment TournamentDeepNesting on Tournament {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Tourneys {\n    ...TourneyDeepNesting\n  }\n  Group {\n    ...TournamentGroupDeepNesting\n  }\n}\n`\n\nexport const ServicePreviousValuesDeepNestingFragment = `fragment ServicePreviousValuesDeepNesting on ServicePreviousValues {\n  id\n  name\n  description\n  code\n  rank\n  oldID\n}\n`\n\nexport const GameResultDeepNestingFragment = `fragment GameResultDeepNesting on GameResult {\n  id\n  createdAt\n  updatedAt\n  date\n  name\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  User {\n    ...UserDeepNesting\n  }\n  Team {\n    ...TeamDeepNesting\n  }\n  Game {\n    ...GameDeepNesting\n  }\n  value\n}\n`\n\nexport const TaskSubscriptionPayloadDeepNestingFragment = `fragment TaskSubscriptionPayloadDeepNesting on TaskSubscriptionPayload {\n  mutation\n  node {\n    ...TaskDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...TaskPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const RouteDeepNestingFragment = `fragment RouteDeepNesting on Route {\n  id\n  name\n  path\n  exact\n  component\n  Parent {\n    ...RouteDeepNesting\n  }\n  Childs {\n    ...RouteDeepNesting\n  }\n  CreatedBy {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const TaskPreviousValuesDeepNestingFragment = `fragment TaskPreviousValuesDeepNesting on TaskPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  content\n  status\n  startDatePlaning\n  endDatePlaning\n  startDate\n  endDate\n}\n`\n\nexport const WorldConnectionDeepNestingFragment = `fragment WorldConnectionDeepNesting on WorldConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...WorldEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateWorldDeepNesting\n  }\n}\n`\n\nexport const TaskReactionSubscriptionPayloadDeepNestingFragment = `fragment TaskReactionSubscriptionPayloadDeepNesting on TaskReactionSubscriptionPayload {\n  mutation\n  node {\n    ...TaskReactionDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...TaskReactionPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const WorldEdgeDeepNestingFragment = `fragment WorldEdgeDeepNesting on WorldEdge {\n  node {\n    ...WorldDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TaskReactionPreviousValuesDeepNestingFragment = `fragment TaskReactionPreviousValuesDeepNesting on TaskReactionPreviousValues {\n  id\n  createdAt\n  updatedAt\n  type\n}\n`\n\nexport const ResourceConnectionDeepNestingFragment = `fragment ResourceConnectionDeepNesting on ResourceConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...ResourceEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateResourceDeepNesting\n  }\n}\n`\n\nexport const TeamMemberSubscriptionPayloadDeepNestingFragment = `fragment TeamMemberSubscriptionPayloadDeepNesting on TeamMemberSubscriptionPayload {\n  mutation\n  node {\n    ...TeamMemberDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...TeamMemberPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const AggregateResourceDeepNestingFragment = `fragment AggregateResourceDeepNesting on AggregateResource {\n  count\n}\n`\n\nexport const TeamMemberPreviousValuesDeepNestingFragment = `fragment TeamMemberPreviousValuesDeepNesting on TeamMemberPreviousValues {\n  id\n  status\n}\n`\n\nexport const ChatMessageReadedEdgeDeepNestingFragment = `fragment ChatMessageReadedEdgeDeepNesting on ChatMessageReadedEdge {\n  node {\n    ...ChatMessageReadedDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TimerSubscriptionPayloadDeepNestingFragment = `fragment TimerSubscriptionPayloadDeepNesting on TimerSubscriptionPayload {\n  mutation\n  node {\n    ...TimerDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...TimerPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ChatRoomConnectionDeepNestingFragment = `fragment ChatRoomConnectionDeepNesting on ChatRoomConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...ChatRoomEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateChatRoomDeepNesting\n  }\n}\n`\n\nexport const TimerPreviousValuesDeepNestingFragment = `fragment TimerPreviousValuesDeepNesting on TimerPreviousValues {\n  id\n  createdAt\n  stopedAt\n}\n`\n\nexport const AggregateChatRoomDeepNestingFragment = `fragment AggregateChatRoomDeepNesting on AggregateChatRoom {\n  count\n}\n`\n\nexport const RouteSubscriptionPayloadDeepNestingFragment = `fragment RouteSubscriptionPayloadDeepNesting on RouteSubscriptionPayload {\n  mutation\n  node {\n    ...RouteDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...RoutePreviousValuesDeepNesting\n  }\n}\n`\n\nexport const NoticeEdgeDeepNestingFragment = `fragment NoticeEdgeDeepNesting on NoticeEdge {\n  node {\n    ...NoticeDeepNesting\n  }\n  cursor\n}\n`\n\nexport const RoutePreviousValuesDeepNestingFragment = `fragment RoutePreviousValuesDeepNesting on RoutePreviousValues {\n  id\n  name\n  path\n  exact\n  component\n}\n`\n\nexport const NotificationTypeConnectionDeepNestingFragment = `fragment NotificationTypeConnectionDeepNesting on NotificationTypeConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...NotificationTypeEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateNotificationTypeDeepNesting\n  }\n}\n`\n\nexport const TeamSubscriptionPayloadDeepNestingFragment = `fragment TeamSubscriptionPayloadDeepNesting on TeamSubscriptionPayload {\n  mutation\n  node {\n    ...TeamDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...TeamPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const AggregateNotificationTypeDeepNestingFragment = `fragment AggregateNotificationTypeDeepNesting on AggregateNotificationType {\n  count\n}\n`\n\nexport const TeamPreviousValuesDeepNestingFragment = `fragment TeamPreviousValuesDeepNesting on TeamPreviousValues {\n  id\n  name\n  status\n  oldID\n  address\n  website\n  email\n  phone\n}\n`\n\nexport const ResourceTagEdgeDeepNestingFragment = `fragment ResourceTagEdgeDeepNesting on ResourceTagEdge {\n  node {\n    ...ResourceTagDeepNesting\n  }\n  cursor\n}\n`\n\nexport const ProjectSubscriptionPayloadDeepNestingFragment = `fragment ProjectSubscriptionPayloadDeepNesting on ProjectSubscriptionPayload {\n  mutation\n  node {\n    ...ProjectDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...ProjectPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const TagConnectionDeepNestingFragment = `fragment TagConnectionDeepNesting on TagConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...TagEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateTagDeepNesting\n  }\n}\n`\n\nexport const ProjectPreviousValuesDeepNestingFragment = `fragment ProjectPreviousValuesDeepNesting on ProjectPreviousValues {\n  id\n  name\n  domain\n  createdAt\n  updatedAt\n  description\n  url\n  sequence\n  content\n  contentText\n  status\n  public\n  oldID\n}\n`\n\nexport const AggregateTagDeepNestingFragment = `fragment AggregateTagDeepNesting on AggregateTag {\n  count\n}\n`\n\nexport const TemplateSubscriptionPayloadDeepNestingFragment = `fragment TemplateSubscriptionPayloadDeepNesting on TemplateSubscriptionPayload {\n  mutation\n  node {\n    ...TemplateDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...TemplatePreviousValuesDeepNesting\n  }\n}\n`\n\nexport const GameEdgeDeepNestingFragment = `fragment GameEdgeDeepNesting on GameEdge {\n  node {\n    ...GameDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TemplatePreviousValuesDeepNestingFragment = `fragment TemplatePreviousValuesDeepNesting on TemplatePreviousValues {\n  id\n  createdAt\n  updatedAt\n  externalKey\n  name\n  description\n  component\n  props\n  components\n  vars\n  rank\n}\n`\n\nexport const GameResultConnectionDeepNestingFragment = `fragment GameResultConnectionDeepNesting on GameResultConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...GameResultEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateGameResultDeepNesting\n  }\n}\n`\n\nexport const ChatMessageSubscriptionPayloadDeepNestingFragment = `fragment ChatMessageSubscriptionPayloadDeepNesting on ChatMessageSubscriptionPayload {\n  mutation\n  node {\n    ...ChatMessageDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...ChatMessagePreviousValuesDeepNesting\n  }\n}\n`\n\nexport const AggregateGameResultDeepNestingFragment = `fragment AggregateGameResultDeepNesting on AggregateGameResult {\n  count\n}\n`\n\nexport const ChatMessagePreviousValuesDeepNestingFragment = `fragment ChatMessagePreviousValuesDeepNesting on ChatMessagePreviousValues {\n  id\n  createdAt\n  updatedAt\n  content\n  contentText\n}\n`\n\nexport const TournamentEdgeDeepNestingFragment = `fragment TournamentEdgeDeepNesting on TournamentEdge {\n  node {\n    ...TournamentDeepNesting\n  }\n  cursor\n}\n`\n\nexport const UserSubscriptionPayloadDeepNestingFragment = `fragment UserSubscriptionPayloadDeepNesting on UserSubscriptionPayload {\n  mutation\n  node {\n    ...UserDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...UserPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const TournamentGroupConnectionDeepNestingFragment = `fragment TournamentGroupConnectionDeepNesting on TournamentGroupConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...TournamentGroupEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateTournamentGroupDeepNesting\n  }\n}\n`\n\nexport const UserPreviousValuesDeepNestingFragment = `fragment UserPreviousValuesDeepNesting on UserPreviousValues {\n  id\n  createdAt\n  updatedAt\n  username\n  email\n  phone\n  showEmail\n  showPhone\n  password\n  fullname\n  image\n  address\n  active\n  activated\n  deleted\n  hidden\n  sudo\n  marketplaceToken\n  oldID\n}\n`\n\nexport const AggregateTournamentGroupDeepNestingFragment = `fragment AggregateTournamentGroupDeepNesting on AggregateTournamentGroup {\n  count\n}\n`\n\nexport const ImportResponseDeepNestingFragment = `fragment ImportResponseDeepNesting on ImportResponse {\n  success\n  message\n  data {\n    ...ImportDeepNesting\n  }\n}\n`\n\nexport const TourneyEdgeDeepNestingFragment = `fragment TourneyEdgeDeepNesting on TourneyEdge {\n  node {\n    ...TourneyDeepNesting\n  }\n  cursor\n}\n`\n\nexport const ImportDeepNestingFragment = `fragment ImportDeepNesting on Import {\n  id\n  createdAt\n  updatedAt\n  name\n  status\n  Logs {\n    ...LogDeepNesting\n  }\n  CreatedBy {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const VoteConnectionDeepNestingFragment = `fragment VoteConnectionDeepNesting on VoteConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...VoteEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateVoteDeepNesting\n  }\n}\n`\n\nexport const LogDeepNestingFragment = `fragment LogDeepNesting on Log {\n  id\n  level\n  objectType\n  message\n  stack\n  Import {\n    ...ImportDeepNesting\n  }\n}\n`\n\nexport const AggregateVoteDeepNestingFragment = `fragment AggregateVoteDeepNesting on AggregateVote {\n  count\n}\n`\n\nexport const AggregateBlockDeepNestingFragment = `fragment AggregateBlockDeepNesting on AggregateBlock {\n  count\n}\n`\n\nexport const EthAccountEdgeDeepNestingFragment = `fragment EthAccountEdgeDeepNesting on EthAccountEdge {\n  node {\n    ...EthAccountDeepNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateChatRoomInvitationDeepNestingFragment = `fragment AggregateChatRoomInvitationDeepNesting on AggregateChatRoomInvitation {\n  count\n}\n`\n\nexport const EthTransactionConnectionDeepNestingFragment = `fragment EthTransactionConnectionDeepNesting on EthTransactionConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...EthTransactionEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateEthTransactionDeepNesting\n  }\n}\n`\n\nexport const AggregateFileDeepNestingFragment = `fragment AggregateFileDeepNesting on AggregateFile {\n  count\n}\n`\n\nexport const AggregateEthTransactionDeepNestingFragment = `fragment AggregateEthTransactionDeepNesting on AggregateEthTransaction {\n  count\n}\n`\n\nexport const AggregateImportDeepNestingFragment = `fragment AggregateImportDeepNesting on AggregateImport {\n  count\n}\n`\n\nexport const CallRequestEdgeDeepNestingFragment = `fragment CallRequestEdgeDeepNesting on CallRequestEdge {\n  node {\n    ...CallRequestDeepNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateInventoryDeepNestingFragment = `fragment AggregateInventoryDeepNesting on AggregateInventory {\n  count\n}\n`\n\nexport const PositionConnectionDeepNestingFragment = `fragment PositionConnectionDeepNesting on PositionConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...PositionEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregatePositionDeepNesting\n  }\n}\n`\n\nexport const AggregateLetsadsSmsMessageStatusDeepNestingFragment = `fragment AggregateLetsadsSmsMessageStatusDeepNesting on AggregateLetsadsSmsMessageStatus {\n  count\n}\n`\n\nexport const AggregatePositionDeepNestingFragment = `fragment AggregatePositionDeepNesting on AggregatePosition {\n  count\n}\n`\n\nexport const AggregateLetsadsSmsMessageStatusItemDeepNestingFragment = `fragment AggregateLetsadsSmsMessageStatusItemDeepNesting on AggregateLetsadsSmsMessageStatusItem {\n  count\n}\n`\n\nexport const ProjectMemberEdgeDeepNestingFragment = `fragment ProjectMemberEdgeDeepNesting on ProjectMemberEdge {\n  node {\n    ...ProjectMemberDeepNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateLetterDeepNestingFragment = `fragment AggregateLetterDeepNesting on AggregateLetter {\n  count\n}\n`\n\nexport const ServiceConnectionDeepNestingFragment = `fragment ServiceConnectionDeepNesting on ServiceConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...ServiceEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateServiceDeepNesting\n  }\n}\n`\n\nexport const AggregateLogDeepNestingFragment = `fragment AggregateLogDeepNesting on AggregateLog {\n  count\n}\n`\n\nexport const AggregateServiceDeepNestingFragment = `fragment AggregateServiceDeepNesting on AggregateService {\n  count\n}\n`\n\nexport const AggregateLogedInDeepNestingFragment = `fragment AggregateLogedInDeepNesting on AggregateLogedIn {\n  count\n}\n`\n\nexport const TaskEdgeDeepNestingFragment = `fragment TaskEdgeDeepNesting on TaskEdge {\n  node {\n    ...TaskDeepNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateMessageDeepNestingFragment = `fragment AggregateMessageDeepNesting on AggregateMessage {\n  count\n}\n`\n\nexport const TaskReactionConnectionDeepNestingFragment = `fragment TaskReactionConnectionDeepNesting on TaskReactionConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...TaskReactionEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateTaskReactionDeepNesting\n  }\n}\n`\n\nexport const AggregatePlayerDeepNestingFragment = `fragment AggregatePlayerDeepNesting on AggregatePlayer {\n  count\n}\n`\n\nexport const AggregateTaskReactionDeepNestingFragment = `fragment AggregateTaskReactionDeepNesting on AggregateTaskReaction {\n  count\n}\n`\n\nexport const AggregateResetPasswordDeepNestingFragment = `fragment AggregateResetPasswordDeepNesting on AggregateResetPassword {\n  count\n}\n`\n\nexport const TeamMemberEdgeDeepNestingFragment = `fragment TeamMemberEdgeDeepNesting on TeamMemberEdge {\n  node {\n    ...TeamMemberDeepNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateServiceCategoryDeepNestingFragment = `fragment AggregateServiceCategoryDeepNesting on AggregateServiceCategory {\n  count\n}\n`\n\nexport const TimerConnectionDeepNestingFragment = `fragment TimerConnectionDeepNesting on TimerConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...TimerEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateTimerDeepNesting\n  }\n}\n`\n\nexport const AggregateSettingsDeepNestingFragment = `fragment AggregateSettingsDeepNesting on AggregateSettings {\n  count\n}\n`\n\nexport const AggregateTimerDeepNestingFragment = `fragment AggregateTimerDeepNesting on AggregateTimer {\n  count\n}\n`\n\nexport const AggregateSmsMessageDeepNestingFragment = `fragment AggregateSmsMessageDeepNesting on AggregateSmsMessage {\n  count\n}\n`\n\nexport const RouteEdgeDeepNestingFragment = `fragment RouteEdgeDeepNesting on RouteEdge {\n  node {\n    ...RouteDeepNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateSmsProviderDeepNestingFragment = `fragment AggregateSmsProviderDeepNesting on AggregateSmsProvider {\n  count\n}\n`\n\nexport const TestConnectionDeepNestingFragment = `fragment TestConnectionDeepNesting on TestConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...TestEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateTestDeepNesting\n  }\n}\n`\n\nexport const AggregateTaskMemberDeepNestingFragment = `fragment AggregateTaskMemberDeepNesting on AggregateTaskMember {\n  count\n}\n`\n\nexport const AggregateTestDeepNestingFragment = `fragment AggregateTestDeepNesting on AggregateTest {\n  count\n}\n`\n\nexport const AggregateUserGroupDeepNestingFragment = `fragment AggregateUserGroupDeepNesting on AggregateUserGroup {\n  count\n}\n`\n\nexport const EthBlockEdgeDeepNestingFragment = `fragment EthBlockEdgeDeepNesting on EthBlockEdge {\n  node {\n    ...EthBlockDeepNesting\n  }\n  cursor\n}\n`\n\nexport const BlockConnectionDeepNestingFragment = `fragment BlockConnectionDeepNesting on BlockConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...BlockEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateBlockDeepNesting\n  }\n}\n`\n\nexport const TeamConnectionDeepNestingFragment = `fragment TeamConnectionDeepNesting on TeamConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...TeamEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateTeamDeepNesting\n  }\n}\n`\n\nexport const BlockEdgeDeepNestingFragment = `fragment BlockEdgeDeepNesting on BlockEdge {\n  node {\n    ...BlockDeepNesting\n  }\n  cursor\n}\n`\n\nexport const AggregateTeamDeepNestingFragment = `fragment AggregateTeamDeepNesting on AggregateTeam {\n  count\n}\n`\n\nexport const BlockPreviousValuesDeepNestingFragment = `fragment BlockPreviousValuesDeepNesting on BlockPreviousValues {\n  id\n  representation\n  type\n  x\n  y\n  z\n}\n`\n\nexport const EthContractSourceEdgeDeepNestingFragment = `fragment EthContractSourceEdgeDeepNesting on EthContractSourceEdge {\n  node {\n    ...EthContractSourceDeepNesting\n  }\n  cursor\n}\n`\n\nexport const BlockSubscriptionPayloadDeepNestingFragment = `fragment BlockSubscriptionPayloadDeepNesting on BlockSubscriptionPayload {\n  mutation\n  node {\n    ...BlockDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...BlockPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ProjectConnectionDeepNestingFragment = `fragment ProjectConnectionDeepNesting on ProjectConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...ProjectEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateProjectDeepNesting\n  }\n}\n`\n\nexport const ChatRoomInvitationConnectionDeepNestingFragment = `fragment ChatRoomInvitationConnectionDeepNesting on ChatRoomInvitationConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...ChatRoomInvitationEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateChatRoomInvitationDeepNesting\n  }\n}\n`\n\nexport const AggregateProjectDeepNestingFragment = `fragment AggregateProjectDeepNesting on AggregateProject {\n  count\n}\n`\n\nexport const ChatRoomInvitationEdgeDeepNestingFragment = `fragment ChatRoomInvitationEdgeDeepNesting on ChatRoomInvitationEdge {\n  node {\n    ...ChatRoomInvitationDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TemplateEdgeDeepNestingFragment = `fragment TemplateEdgeDeepNesting on TemplateEdge {\n  node {\n    ...TemplateDeepNesting\n  }\n  cursor\n}\n`\n\nexport const ChatRoomInvitationPreviousValuesDeepNestingFragment = `fragment ChatRoomInvitationPreviousValuesDeepNesting on ChatRoomInvitationPreviousValues {\n  id\n  createdAt\n  updatedAt\n}\n`\n\nexport const ChatMessageConnectionDeepNestingFragment = `fragment ChatMessageConnectionDeepNesting on ChatMessageConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...ChatMessageEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateChatMessageDeepNesting\n  }\n}\n`\n\nexport const ChatRoomInvitationSubscriptionPayloadDeepNestingFragment = `fragment ChatRoomInvitationSubscriptionPayloadDeepNesting on ChatRoomInvitationSubscriptionPayload {\n  mutation\n  node {\n    ...ChatRoomInvitationDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...ChatRoomInvitationPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const AggregateChatMessageDeepNestingFragment = `fragment AggregateChatMessageDeepNesting on AggregateChatMessage {\n  count\n}\n`\n\nexport const EthAccountPreviousValuesDeepNestingFragment = `fragment EthAccountPreviousValuesDeepNesting on EthAccountPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  address\n  type\n  source\n  bytecode\n  abi\n}\n`\n\nexport const UserEdgeDeepNestingFragment = `fragment UserEdgeDeepNesting on UserEdge {\n  node {\n    ...UserDeepNesting\n  }\n  cursor\n}\n`\n\nexport const EthAccountSubscriptionPayloadDeepNestingFragment = `fragment EthAccountSubscriptionPayloadDeepNesting on EthAccountSubscriptionPayload {\n  mutation\n  node {\n    ...EthAccountDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...EthAccountPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ethNetDeepNestingFragment = `fragment ethNetDeepNesting on ethNet {\n  id\n  isListening\n  peerCount\n  networkType\n}\n`\n\nexport const EthBlockPreviousValuesDeepNestingFragment = `fragment EthBlockPreviousValuesDeepNesting on EthBlockPreviousValues {\n  id\n  createdAt\n  updatedAt\n  hash\n  number\n  difficulty\n  totalDifficulty\n  extraData\n  gasLimit\n  gasUsed\n  mixHash\n  nonce\n  parentHash\n  receiptsRoot\n  sha3Uncles\n  size\n  stateRoot\n  date\n  transactionsRoot\n  transactions_count\n}\n`\n\nexport const ethSyncStateDeepNestingFragment = `fragment ethSyncStateDeepNesting on ethSyncState {\n  startingBlock\n  currentBlock\n  highestBlock\n  knownStates\n  pulledStates\n}\n`\n\nexport const EthBlockSubscriptionPayloadDeepNestingFragment = `fragment EthBlockSubscriptionPayloadDeepNesting on EthBlockSubscriptionPayload {\n  mutation\n  node {\n    ...EthBlockDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...EthBlockPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ErrorDeepNestingFragment = `fragment ErrorDeepNesting on Error {\n  key\n  message\n}\n`\n\nexport const EthContractSourcePreviousValuesDeepNestingFragment = `fragment EthContractSourcePreviousValuesDeepNesting on EthContractSourcePreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  source\n}\n`\n\nexport const TimerResponseDeepNestingFragment = `fragment TimerResponseDeepNesting on TimerResponse {\n  success\n  message\n  data {\n    ...TimerDeepNesting\n  }\n}\n`\n\nexport const EthContractSourceSubscriptionPayloadDeepNestingFragment = `fragment EthContractSourceSubscriptionPayloadDeepNesting on EthContractSourceSubscriptionPayload {\n  mutation\n  node {\n    ...EthContractSourceDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...EthContractSourcePreviousValuesDeepNesting\n  }\n}\n`\n\nexport const TestResponseDeepNestingFragment = `fragment TestResponseDeepNesting on TestResponse {\n  success\n  message\n  data {\n    ...TestDeepNesting\n  }\n}\n`\n\nexport const EthTransactionPreviousValuesDeepNestingFragment = `fragment EthTransactionPreviousValuesDeepNesting on EthTransactionPreviousValues {\n  id\n  createdAt\n  updatedAt\n  chainId\n  amount\n  input\n  index\n  address\n  type\n  v\n  r\n  s\n}\n`\n\nexport const EthAccountResponseDeepNestingFragment = `fragment EthAccountResponseDeepNesting on EthAccountResponse {\n  success\n  message\n  data {\n    ...EthAccountDeepNesting\n  }\n}\n`\n\nexport const FileConnectionDeepNestingFragment = `fragment FileConnectionDeepNesting on FileConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...FileEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateFileDeepNesting\n  }\n}\n`\n\nexport const McJsAuthPayloadDeepNestingFragment = `fragment McJsAuthPayloadDeepNesting on McJsAuthPayload {\n  token\n  user {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const FileEdgeDeepNestingFragment = `fragment FileEdgeDeepNesting on FileEdge {\n  node {\n    ...FileDeepNesting\n  }\n  cursor\n}\n`\n\nexport const ResetPasswordResponseDeepNestingFragment = `fragment ResetPasswordResponseDeepNesting on ResetPasswordResponse {\n  success\n  message\n  data {\n    ...ResetPasswordDeepNesting\n  }\n}\n`\n\nexport const FilePreviousValuesDeepNestingFragment = `fragment FilePreviousValuesDeepNesting on FilePreviousValues {\n  id\n  path\n  name\n  filename\n  mimetype\n  encoding\n  hash\n  size\n}\n`\n\nexport const TemplateResponseDeepNestingFragment = `fragment TemplateResponseDeepNesting on TemplateResponse {\n  success\n  message\n  data {\n    ...TemplateDeepNesting\n  }\n}\n`\n\nexport const FileSubscriptionPayloadDeepNestingFragment = `fragment FileSubscriptionPayloadDeepNesting on FileSubscriptionPayload {\n  mutation\n  node {\n    ...FileDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...FilePreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ChatMessageResponseDeepNestingFragment = `fragment ChatMessageResponseDeepNesting on ChatMessageResponse {\n  success\n  message\n  data {\n    ...ChatMessageDeepNesting\n  }\n}\n`\n\nexport const ImportConnectionDeepNestingFragment = `fragment ImportConnectionDeepNesting on ImportConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...ImportEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateImportDeepNesting\n  }\n}\n`\n\nexport const CallRequestResponseDeepNestingFragment = `fragment CallRequestResponseDeepNesting on CallRequestResponse {\n  success\n  message\n  data {\n    ...CallRequestDeepNesting\n  }\n}\n`\n\nexport const ImportEdgeDeepNestingFragment = `fragment ImportEdgeDeepNesting on ImportEdge {\n  node {\n    ...ImportDeepNesting\n  }\n  cursor\n}\n`\n\nexport const PlayerSubscriptionPayloadDeepNestingFragment = `fragment PlayerSubscriptionPayloadDeepNesting on PlayerSubscriptionPayload {\n  mutation\n  node {\n    ...PlayerDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...PlayerPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ImportPreviousValuesDeepNestingFragment = `fragment ImportPreviousValuesDeepNesting on ImportPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  status\n}\n`\n\nexport const WorldSubscriptionPayloadDeepNestingFragment = `fragment WorldSubscriptionPayloadDeepNesting on WorldSubscriptionPayload {\n  mutation\n  node {\n    ...WorldDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...WorldPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ImportSubscriptionPayloadDeepNestingFragment = `fragment ImportSubscriptionPayloadDeepNesting on ImportSubscriptionPayload {\n  mutation\n  node {\n    ...ImportDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...ImportPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const MessageSubscriptionPayloadDeepNestingFragment = `fragment MessageSubscriptionPayloadDeepNesting on MessageSubscriptionPayload {\n  mutation\n  node {\n    ...MessageDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...MessagePreviousValuesDeepNesting\n  }\n}\n`\n\nexport const InventoryConnectionDeepNestingFragment = `fragment InventoryConnectionDeepNesting on InventoryConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...InventoryEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateInventoryDeepNesting\n  }\n}\n`\n\nexport const ResourceSubscriptionPayloadDeepNestingFragment = `fragment ResourceSubscriptionPayloadDeepNesting on ResourceSubscriptionPayload {\n  mutation\n  node {\n    ...ResourceDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...ResourcePreviousValuesDeepNesting\n  }\n}\n`\n\nexport const InventoryEdgeDeepNestingFragment = `fragment InventoryEdgeDeepNesting on InventoryEdge {\n  node {\n    ...InventoryDeepNesting\n  }\n  cursor\n}\n`\n\nexport const ChatMessageReadedSubscriptionPayloadDeepNestingFragment = `fragment ChatMessageReadedSubscriptionPayloadDeepNesting on ChatMessageReadedSubscriptionPayload {\n  mutation\n  node {\n    ...ChatMessageReadedDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...ChatMessageReadedPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const InventoryPreviousValuesDeepNestingFragment = `fragment InventoryPreviousValuesDeepNesting on InventoryPreviousValues {\n  id\n  cursor\n  data\n}\n`\n\nexport const ChatRoomSubscriptionPayloadDeepNestingFragment = `fragment ChatRoomSubscriptionPayloadDeepNesting on ChatRoomSubscriptionPayload {\n  mutation\n  node {\n    ...ChatRoomDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...ChatRoomPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const InventorySubscriptionPayloadDeepNestingFragment = `fragment InventorySubscriptionPayloadDeepNesting on InventorySubscriptionPayload {\n  mutation\n  node {\n    ...InventoryDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...InventoryPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const BlockDeepNestingFragment = `fragment BlockDeepNesting on Block {\n  id\n  representation\n  type\n  world {\n    ...WorldDeepNesting\n  }\n  x\n  y\n  z\n}\n`\n\nexport const LetsadsSmsMessageStatusDeepNestingFragment = `fragment LetsadsSmsMessageStatusDeepNesting on LetsadsSmsMessageStatus {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  errorCode\n  SmsMessage {\n    ...SmsMessageDeepNesting\n  }\n  Items {\n    ...LetsadsSmsMessageStatusItemDeepNesting\n  }\n}\n`\n\nexport const SettingsDeepNestingFragment = `fragment SettingsDeepNesting on Settings {\n  id\n  renderDistance\n  User {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const SmsMessageDeepNestingFragment = `fragment SmsMessageDeepNesting on SmsMessage {\n  id\n  createdAt\n  updatedAt\n  from\n  text\n  Provider {\n    ...SmsProviderDeepNesting\n  }\n  deletOnSend\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Status {\n    ...LetsadsSmsMessageStatusDeepNesting\n  }\n}\n`\n\nexport const VoteDeepNestingFragment = `fragment VoteDeepNesting on Vote {\n  id\n  createdAt\n  updatedAt\n  Resource {\n    ...ResourceDeepNesting\n  }\n  User {\n    ...UserDeepNesting\n  }\n  value\n}\n`\n\nexport const SmsProviderDeepNestingFragment = `fragment SmsProviderDeepNesting on SmsProvider {\n  id\n  name\n  credentials\n  CreatedBy {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const ProjectMemberDeepNestingFragment = `fragment ProjectMemberDeepNesting on ProjectMember {\n  id\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Project {\n    ...ProjectDeepNesting\n  }\n  User {\n    ...UserDeepNesting\n  }\n  Services {\n    ...ServiceDeepNesting\n  }\n  status\n}\n`\n\nexport const LetsadsSmsMessageStatusItemDeepNestingFragment = `fragment LetsadsSmsMessageStatusItemDeepNesting on LetsadsSmsMessageStatusItem {\n  id\n  createdAt\n  updatedAt\n  sms_id\n}\n`\n\nexport const TaskMemberDeepNestingFragment = `fragment TaskMemberDeepNesting on TaskMember {\n  id\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Task {\n    ...TaskDeepNesting\n  }\n  User {\n    ...UserDeepNesting\n  }\n  status\n}\n`\n\nexport const LetsadsSmsMessageStatusConnectionDeepNestingFragment = `fragment LetsadsSmsMessageStatusConnectionDeepNesting on LetsadsSmsMessageStatusConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...LetsadsSmsMessageStatusEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateLetsadsSmsMessageStatusDeepNesting\n  }\n}\n`\n\nexport const ChatMessageDeepNestingFragment = `fragment ChatMessageDeepNesting on ChatMessage {\n  id\n  createdAt\n  updatedAt\n  content\n  contentText\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Room {\n    ...ChatRoomDeepNesting\n  }\n  ReadedBy {\n    ...ChatMessageReadedDeepNesting\n  }\n}\n`\n\nexport const LetsadsSmsMessageStatusEdgeDeepNestingFragment = `fragment LetsadsSmsMessageStatusEdgeDeepNesting on LetsadsSmsMessageStatusEdge {\n  node {\n    ...LetsadsSmsMessageStatusDeepNesting\n  }\n  cursor\n}\n`\n\nexport const CallRequestDeepNestingFragment = `fragment CallRequestDeepNesting on CallRequest {\n  id\n  called_descriptions\n  caller_descriptions\n  status\n  startedAt\n  endedAt\n  Called {\n    ...UserDeepNesting\n  }\n  Caller {\n    ...UserDeepNesting\n  }\n  Room {\n    ...ChatRoomDeepNesting\n  }\n}\n`\n\nexport const LetsadsSmsMessageStatusItemConnectionDeepNestingFragment = `fragment LetsadsSmsMessageStatusItemConnectionDeepNesting on LetsadsSmsMessageStatusItemConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...LetsadsSmsMessageStatusItemEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateLetsadsSmsMessageStatusItemDeepNesting\n  }\n}\n`\n\nexport const EthTransactionDeepNestingFragment = `fragment EthTransactionDeepNesting on EthTransaction {\n  id\n  createdAt\n  updatedAt\n  chainId\n  amount\n  input\n  index\n  Sender {\n    ...EthAccountDeepNesting\n  }\n  Receiver {\n    ...EthAccountDeepNesting\n  }\n  Account {\n    ...EthAccountDeepNesting\n  }\n  address\n  type\n  v\n  r\n  s\n  Block {\n    ...EthBlockDeepNesting\n  }\n}\n`\n\nexport const LetsadsSmsMessageStatusItemEdgeDeepNestingFragment = `fragment LetsadsSmsMessageStatusItemEdgeDeepNesting on LetsadsSmsMessageStatusItemEdge {\n  node {\n    ...LetsadsSmsMessageStatusItemDeepNesting\n  }\n  cursor\n}\n`\n\nexport const NotificationTypeDeepNestingFragment = `fragment NotificationTypeDeepNesting on NotificationType {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  comment\n  Users {\n    ...UserDeepNesting\n  }\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  oldID\n}\n`\n\nexport const LetsadsSmsMessageStatusItemPreviousValuesDeepNestingFragment = `fragment LetsadsSmsMessageStatusItemPreviousValuesDeepNesting on LetsadsSmsMessageStatusItemPreviousValues {\n  id\n  createdAt\n  updatedAt\n  sms_id\n}\n`\n\nexport const TournamentGroupDeepNestingFragment = `fragment TournamentGroupDeepNesting on TournamentGroup {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Tournaments {\n    ...TournamentDeepNesting\n  }\n}\n`\n\nexport const LetsadsSmsMessageStatusItemSubscriptionPayloadDeepNestingFragment = `fragment LetsadsSmsMessageStatusItemSubscriptionPayloadDeepNesting on LetsadsSmsMessageStatusItemSubscriptionPayload {\n  mutation\n  node {\n    ...LetsadsSmsMessageStatusItemDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...LetsadsSmsMessageStatusItemPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const TestDeepNestingFragment = `fragment TestDeepNesting on Test {\n  id\n  createdAt\n  updatedAt\n  name\n  text\n  quantity\n  date\n  CreatedBy {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const LetsadsSmsMessageStatusPreviousValuesDeepNestingFragment = `fragment LetsadsSmsMessageStatusPreviousValuesDeepNesting on LetsadsSmsMessageStatusPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  errorCode\n}\n`\n\nexport const AggregateWorldDeepNestingFragment = `fragment AggregateWorldDeepNesting on AggregateWorld {\n  count\n}\n`\n\nexport const LetsadsSmsMessageStatusSubscriptionPayloadDeepNestingFragment = `fragment LetsadsSmsMessageStatusSubscriptionPayloadDeepNesting on LetsadsSmsMessageStatusSubscriptionPayload {\n  mutation\n  node {\n    ...LetsadsSmsMessageStatusDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...LetsadsSmsMessageStatusPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ChatMessageReadedConnectionDeepNestingFragment = `fragment ChatMessageReadedConnectionDeepNesting on ChatMessageReadedConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...ChatMessageReadedEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateChatMessageReadedDeepNesting\n  }\n}\n`\n\nexport const LetterDeepNestingFragment = `fragment LetterDeepNesting on Letter {\n  id\n  email\n  subject\n  message\n  status\n  rank\n  deleteOnSend\n  replyTo\n  returnTo\n  createdAt\n  updatedAt\n  User {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const ChatRoomEdgeDeepNestingFragment = `fragment ChatRoomEdgeDeepNesting on ChatRoomEdge {\n  node {\n    ...ChatRoomDeepNesting\n  }\n  cursor\n}\n`\n\nexport const LetterConnectionDeepNestingFragment = `fragment LetterConnectionDeepNesting on LetterConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...LetterEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateLetterDeepNesting\n  }\n}\n`\n\nexport const AggregateNoticeDeepNestingFragment = `fragment AggregateNoticeDeepNesting on AggregateNotice {\n  count\n}\n`\n\nexport const LetterEdgeDeepNestingFragment = `fragment LetterEdgeDeepNesting on LetterEdge {\n  node {\n    ...LetterDeepNesting\n  }\n  cursor\n}\n`\n\nexport const ResourceTagConnectionDeepNestingFragment = `fragment ResourceTagConnectionDeepNesting on ResourceTagConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...ResourceTagEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateResourceTagDeepNesting\n  }\n}\n`\n\nexport const LetterPreviousValuesDeepNestingFragment = `fragment LetterPreviousValuesDeepNesting on LetterPreviousValues {\n  id\n  email\n  subject\n  message\n  status\n  rank\n  deleteOnSend\n  replyTo\n  returnTo\n  createdAt\n  updatedAt\n}\n`\n\nexport const TagEdgeDeepNestingFragment = `fragment TagEdgeDeepNesting on TagEdge {\n  node {\n    ...TagDeepNesting\n  }\n  cursor\n}\n`\n\nexport const LetterSubscriptionPayloadDeepNestingFragment = `fragment LetterSubscriptionPayloadDeepNesting on LetterSubscriptionPayload {\n  mutation\n  node {\n    ...LetterDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...LetterPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const AggregateGameDeepNestingFragment = `fragment AggregateGameDeepNesting on AggregateGame {\n  count\n}\n`\n\nexport const LogConnectionDeepNestingFragment = `fragment LogConnectionDeepNesting on LogConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...LogEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateLogDeepNesting\n  }\n}\n`\n\nexport const TournamentConnectionDeepNestingFragment = `fragment TournamentConnectionDeepNesting on TournamentConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...TournamentEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateTournamentDeepNesting\n  }\n}\n`\n\nexport const LogEdgeDeepNestingFragment = `fragment LogEdgeDeepNesting on LogEdge {\n  node {\n    ...LogDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TournamentGroupEdgeDeepNestingFragment = `fragment TournamentGroupEdgeDeepNesting on TournamentGroupEdge {\n  node {\n    ...TournamentGroupDeepNesting\n  }\n  cursor\n}\n`\n\nexport const LogedInConnectionDeepNestingFragment = `fragment LogedInConnectionDeepNesting on LogedInConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...LogedInEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateLogedInDeepNesting\n  }\n}\n`\n\nexport const AggregateTourneyDeepNestingFragment = `fragment AggregateTourneyDeepNesting on AggregateTourney {\n  count\n}\n`\n\nexport const LogedInEdgeDeepNestingFragment = `fragment LogedInEdgeDeepNesting on LogedInEdge {\n  node {\n    ...LogedInDeepNesting\n  }\n  cursor\n}\n`\n\nexport const EthAccountConnectionDeepNestingFragment = `fragment EthAccountConnectionDeepNesting on EthAccountConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...EthAccountEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateEthAccountDeepNesting\n  }\n}\n`\n\nexport const LogedInPreviousValuesDeepNestingFragment = `fragment LogedInPreviousValuesDeepNesting on LogedInPreviousValues {\n  id\n  createdAt\n  fake\n}\n`\n\nexport const EthTransactionEdgeDeepNestingFragment = `fragment EthTransactionEdgeDeepNesting on EthTransactionEdge {\n  node {\n    ...EthTransactionDeepNesting\n  }\n  cursor\n}\n`\n\nexport const LogedInSubscriptionPayloadDeepNestingFragment = `fragment LogedInSubscriptionPayloadDeepNesting on LogedInSubscriptionPayload {\n  mutation\n  node {\n    ...LogedInDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...LogedInPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const AggregateCallRequestDeepNestingFragment = `fragment AggregateCallRequestDeepNesting on AggregateCallRequest {\n  count\n}\n`\n\nexport const LogPreviousValuesDeepNestingFragment = `fragment LogPreviousValuesDeepNesting on LogPreviousValues {\n  id\n  level\n  objectType\n  message\n  stack\n}\n`\n\nexport const ProjectMemberConnectionDeepNestingFragment = `fragment ProjectMemberConnectionDeepNesting on ProjectMemberConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...ProjectMemberEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateProjectMemberDeepNesting\n  }\n}\n`\n\nexport const LogSubscriptionPayloadDeepNestingFragment = `fragment LogSubscriptionPayloadDeepNesting on LogSubscriptionPayload {\n  mutation\n  node {\n    ...LogDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...LogPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ServiceEdgeDeepNestingFragment = `fragment ServiceEdgeDeepNesting on ServiceEdge {\n  node {\n    ...ServiceDeepNesting\n  }\n  cursor\n}\n`\n\nexport const MessageConnectionDeepNestingFragment = `fragment MessageConnectionDeepNesting on MessageConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...MessageEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateMessageDeepNesting\n  }\n}\n`\n\nexport const AggregateTaskDeepNestingFragment = `fragment AggregateTaskDeepNesting on AggregateTask {\n  count\n}\n`\n\nexport const MessageEdgeDeepNestingFragment = `fragment MessageEdgeDeepNesting on MessageEdge {\n  node {\n    ...MessageDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TeamMemberConnectionDeepNestingFragment = `fragment TeamMemberConnectionDeepNesting on TeamMemberConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...TeamMemberEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateTeamMemberDeepNesting\n  }\n}\n`\n\nexport const NotificationTypePreviousValuesDeepNestingFragment = `fragment NotificationTypePreviousValuesDeepNesting on NotificationTypePreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  comment\n  oldID\n}\n`\n\nexport const TimerEdgeDeepNestingFragment = `fragment TimerEdgeDeepNesting on TimerEdge {\n  node {\n    ...TimerDeepNesting\n  }\n  cursor\n}\n`\n\nexport const NotificationTypeSubscriptionPayloadDeepNestingFragment = `fragment NotificationTypeSubscriptionPayloadDeepNesting on NotificationTypeSubscriptionPayload {\n  mutation\n  node {\n    ...NotificationTypeDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...NotificationTypePreviousValuesDeepNesting\n  }\n}\n`\n\nexport const AggregateRouteDeepNestingFragment = `fragment AggregateRouteDeepNesting on AggregateRoute {\n  count\n}\n`\n\nexport const PlayerConnectionDeepNestingFragment = `fragment PlayerConnectionDeepNesting on PlayerConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...PlayerEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregatePlayerDeepNesting\n  }\n}\n`\n\nexport const EthBlockConnectionDeepNestingFragment = `fragment EthBlockConnectionDeepNesting on EthBlockConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...EthBlockEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateEthBlockDeepNesting\n  }\n}\n`\n\nexport const PlayerEdgeDeepNestingFragment = `fragment PlayerEdgeDeepNesting on PlayerEdge {\n  node {\n    ...PlayerDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TeamEdgeDeepNestingFragment = `fragment TeamEdgeDeepNesting on TeamEdge {\n  node {\n    ...TeamDeepNesting\n  }\n  cursor\n}\n`\n\nexport const ResetPasswordConnectionDeepNestingFragment = `fragment ResetPasswordConnectionDeepNesting on ResetPasswordConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...ResetPasswordEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateResetPasswordDeepNesting\n  }\n}\n`\n\nexport const AggregateEthContractSourceDeepNestingFragment = `fragment AggregateEthContractSourceDeepNesting on AggregateEthContractSource {\n  count\n}\n`\n\nexport const ResetPasswordEdgeDeepNestingFragment = `fragment ResetPasswordEdgeDeepNesting on ResetPasswordEdge {\n  node {\n    ...ResetPasswordDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TemplateConnectionDeepNestingFragment = `fragment TemplateConnectionDeepNesting on TemplateConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...TemplateEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateTemplateDeepNesting\n  }\n}\n`\n\nexport const ResetPasswordPreviousValuesDeepNestingFragment = `fragment ResetPasswordPreviousValuesDeepNesting on ResetPasswordPreviousValues {\n  id\n  createdAt\n  updatedAt\n  code\n  password\n  validTill\n}\n`\n\nexport const ChatMessageEdgeDeepNestingFragment = `fragment ChatMessageEdgeDeepNesting on ChatMessageEdge {\n  node {\n    ...ChatMessageDeepNesting\n  }\n  cursor\n}\n`\n\nexport const ResetPasswordSubscriptionPayloadDeepNestingFragment = `fragment ResetPasswordSubscriptionPayloadDeepNesting on ResetPasswordSubscriptionPayload {\n  mutation\n  node {\n    ...ResetPasswordDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...ResetPasswordPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const AggregateUserDeepNestingFragment = `fragment AggregateUserDeepNesting on AggregateUser {\n  count\n}\n`\n\nexport const ResourceTagPreviousValuesDeepNestingFragment = `fragment ResourceTagPreviousValuesDeepNesting on ResourceTagPreviousValues {\n  id\n  createdAt\n  updatedAt\n  status\n}\n`\n\nexport const ProjectResponseDeepNestingFragment = `fragment ProjectResponseDeepNesting on ProjectResponse {\n  success\n  message\n  data {\n    ...ProjectDeepNesting\n  }\n}\n`\n\nexport const ResourceTagSubscriptionPayloadDeepNestingFragment = `fragment ResourceTagSubscriptionPayloadDeepNesting on ResourceTagSubscriptionPayload {\n  mutation\n  node {\n    ...ResourceTagDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...ResourceTagPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ResourceResponseDeepNestingFragment = `fragment ResourceResponseDeepNesting on ResourceResponse {\n  success\n  message\n  data {\n    ...ResourceDeepNesting\n  }\n}\n`\n\nexport const ServiceCategoryConnectionDeepNestingFragment = `fragment ServiceCategoryConnectionDeepNesting on ServiceCategoryConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...ServiceCategoryEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateServiceCategoryDeepNesting\n  }\n}\n`\n\nexport const BatchPayloadDeepNestingFragment = `fragment BatchPayloadDeepNesting on BatchPayload {\n  count\n}\n`\n\nexport const ServiceCategoryEdgeDeepNestingFragment = `fragment ServiceCategoryEdgeDeepNesting on ServiceCategoryEdge {\n  node {\n    ...ServiceCategoryDeepNesting\n  }\n  cursor\n}\n`\n\nexport const ResetPasswordDeepNestingFragment = `fragment ResetPasswordDeepNesting on ResetPassword {\n  id\n  createdAt\n  updatedAt\n  code\n  password\n  validTill\n  User {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const ServiceCategoryPreviousValuesDeepNestingFragment = `fragment ServiceCategoryPreviousValuesDeepNesting on ServiceCategoryPreviousValues {\n  id\n  name\n  description\n  code\n}\n`\n\nexport const EthTransactionResponseDeepNestingFragment = `fragment EthTransactionResponseDeepNesting on EthTransactionResponse {\n  success\n  message\n  data {\n    ...EthTransactionDeepNesting\n  }\n}\n`\n\nexport const ServiceCategorySubscriptionPayloadDeepNestingFragment = `fragment ServiceCategorySubscriptionPayloadDeepNesting on ServiceCategorySubscriptionPayload {\n  mutation\n  node {\n    ...ServiceCategoryDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...ServiceCategoryPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const PlayerPreviousValuesDeepNestingFragment = `fragment PlayerPreviousValuesDeepNesting on PlayerPreviousValues {\n  createdAt\n  updatedAt\n  id\n  isAdmin\n  gamemode\n  lastLogin\n  x\n  y\n  z\n  dirx\n  diry\n}\n`\n\nexport const SettingsConnectionDeepNestingFragment = `fragment SettingsConnectionDeepNesting on SettingsConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...SettingsEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateSettingsDeepNesting\n  }\n}\n`\n\nexport const MessagePreviousValuesDeepNestingFragment = `fragment MessagePreviousValuesDeepNesting on MessagePreviousValues {\n  id\n  type\n  sender\n  body\n}\n`\n\nexport const SettingsEdgeDeepNestingFragment = `fragment SettingsEdgeDeepNesting on SettingsEdge {\n  node {\n    ...SettingsDeepNesting\n  }\n  cursor\n}\n`\n\nexport const ChatMessageReadedPreviousValuesDeepNestingFragment = `fragment ChatMessageReadedPreviousValuesDeepNesting on ChatMessageReadedPreviousValues {\n  id\n  createdAt\n}\n`\n\nexport const SettingsPreviousValuesDeepNestingFragment = `fragment SettingsPreviousValuesDeepNesting on SettingsPreviousValues {\n  id\n  renderDistance\n}\n`\n\nexport const InventoryDeepNestingFragment = `fragment InventoryDeepNesting on Inventory {\n  id\n  player {\n    ...PlayerDeepNesting\n  }\n  cursor\n  data\n}\n`\n\nexport const SettingsSubscriptionPayloadDeepNestingFragment = `fragment SettingsSubscriptionPayloadDeepNesting on SettingsSubscriptionPayload {\n  mutation\n  node {\n    ...SettingsDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...SettingsPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const TagDeepNestingFragment = `fragment TagDeepNesting on Tag {\n  id\n  createdAt\n  updatedAt\n  name\n  status\n  Resources {\n    ...ResourceTagDeepNesting\n  }\n  CreatedBy {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const SmsMessageConnectionDeepNestingFragment = `fragment SmsMessageConnectionDeepNesting on SmsMessageConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...SmsMessageEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateSmsMessageDeepNesting\n  }\n}\n`\n\nexport const TaskReactionDeepNestingFragment = `fragment TaskReactionDeepNesting on TaskReaction {\n  id\n  createdAt\n  updatedAt\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Task {\n    ...TaskDeepNesting\n  }\n  type\n}\n`\n\nexport const SmsMessageEdgeDeepNestingFragment = `fragment SmsMessageEdgeDeepNesting on SmsMessageEdge {\n  node {\n    ...SmsMessageDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TeamMemberDeepNestingFragment = `fragment TeamMemberDeepNesting on TeamMember {\n  id\n  Team {\n    ...TeamDeepNesting\n  }\n  User {\n    ...UserDeepNesting\n  }\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  status\n}\n`\n\nexport const SmsMessagePreviousValuesDeepNestingFragment = `fragment SmsMessagePreviousValuesDeepNesting on SmsMessagePreviousValues {\n  id\n  createdAt\n  updatedAt\n  from\n  text\n  deletOnSend\n}\n`\n\nexport const TourneyDeepNestingFragment = `fragment TourneyDeepNesting on Tourney {\n  id\n  createdAt\n  updatedAt\n  name\n  code\n  date\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Tournament {\n    ...TournamentDeepNesting\n  }\n  Users {\n    ...UserDeepNesting\n  }\n  Games {\n    ...GameDeepNesting\n  }\n}\n`\n\nexport const SmsMessageSubscriptionPayloadDeepNestingFragment = `fragment SmsMessageSubscriptionPayloadDeepNesting on SmsMessageSubscriptionPayload {\n  mutation\n  node {\n    ...SmsMessageDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...SmsMessagePreviousValuesDeepNesting\n  }\n}\n`\n\nexport const PageInfoDeepNestingFragment = `fragment PageInfoDeepNesting on PageInfo {\n  hasNextPage\n  hasPreviousPage\n  startCursor\n  endCursor\n}\n`\n\nexport const SmsProviderConnectionDeepNestingFragment = `fragment SmsProviderConnectionDeepNesting on SmsProviderConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...SmsProviderEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateSmsProviderDeepNesting\n  }\n}\n`\n\nexport const AggregateChatMessageReadedDeepNestingFragment = `fragment AggregateChatMessageReadedDeepNesting on AggregateChatMessageReaded {\n  count\n}\n`\n\nexport const SmsProviderEdgeDeepNestingFragment = `fragment SmsProviderEdgeDeepNesting on SmsProviderEdge {\n  node {\n    ...SmsProviderDeepNesting\n  }\n  cursor\n}\n`\n\nexport const NotificationTypeEdgeDeepNestingFragment = `fragment NotificationTypeEdgeDeepNesting on NotificationTypeEdge {\n  node {\n    ...NotificationTypeDeepNesting\n  }\n  cursor\n}\n`\n\nexport const SmsProviderPreviousValuesDeepNestingFragment = `fragment SmsProviderPreviousValuesDeepNesting on SmsProviderPreviousValues {\n  id\n  name\n  credentials\n}\n`\n\nexport const GameConnectionDeepNestingFragment = `fragment GameConnectionDeepNesting on GameConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...GameEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateGameDeepNesting\n  }\n}\n`\n\nexport const SmsProviderSubscriptionPayloadDeepNestingFragment = `fragment SmsProviderSubscriptionPayloadDeepNesting on SmsProviderSubscriptionPayload {\n  mutation\n  node {\n    ...SmsProviderDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...SmsProviderPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const AggregateTournamentDeepNestingFragment = `fragment AggregateTournamentDeepNesting on AggregateTournament {\n  count\n}\n`\n\nexport const TagPreviousValuesDeepNestingFragment = `fragment TagPreviousValuesDeepNesting on TagPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  status\n}\n`\n\nexport const VoteEdgeDeepNestingFragment = `fragment VoteEdgeDeepNesting on VoteEdge {\n  node {\n    ...VoteDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TagSubscriptionPayloadDeepNestingFragment = `fragment TagSubscriptionPayloadDeepNesting on TagSubscriptionPayload {\n  mutation\n  node {\n    ...TagDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...TagPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const CallRequestConnectionDeepNestingFragment = `fragment CallRequestConnectionDeepNesting on CallRequestConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...CallRequestEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateCallRequestDeepNesting\n  }\n}\n`\n\nexport const TaskMemberConnectionDeepNestingFragment = `fragment TaskMemberConnectionDeepNesting on TaskMemberConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...TaskMemberEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateTaskMemberDeepNesting\n  }\n}\n`\n\nexport const AggregateProjectMemberDeepNestingFragment = `fragment AggregateProjectMemberDeepNesting on AggregateProjectMember {\n  count\n}\n`\n\nexport const TaskMemberEdgeDeepNestingFragment = `fragment TaskMemberEdgeDeepNesting on TaskMemberEdge {\n  node {\n    ...TaskMemberDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TaskReactionEdgeDeepNestingFragment = `fragment TaskReactionEdgeDeepNesting on TaskReactionEdge {\n  node {\n    ...TaskReactionDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TaskMemberPreviousValuesDeepNestingFragment = `fragment TaskMemberPreviousValuesDeepNesting on TaskMemberPreviousValues {\n  id\n  status\n}\n`\n\nexport const RouteConnectionDeepNestingFragment = `fragment RouteConnectionDeepNesting on RouteConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...RouteEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateRouteDeepNesting\n  }\n}\n`\n\nexport const TaskMemberSubscriptionPayloadDeepNestingFragment = `fragment TaskMemberSubscriptionPayloadDeepNesting on TaskMemberSubscriptionPayload {\n  mutation\n  node {\n    ...TaskMemberDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...TaskMemberPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const AggregateEthBlockDeepNestingFragment = `fragment AggregateEthBlockDeepNesting on AggregateEthBlock {\n  count\n}\n`\n\nexport const TestPreviousValuesDeepNestingFragment = `fragment TestPreviousValuesDeepNesting on TestPreviousValues {\n  id\n  createdAt\n  updatedAt\n  name\n  text\n  quantity\n  date\n}\n`\n\nexport const ProjectEdgeDeepNestingFragment = `fragment ProjectEdgeDeepNesting on ProjectEdge {\n  node {\n    ...ProjectDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TestSubscriptionPayloadDeepNestingFragment = `fragment TestSubscriptionPayloadDeepNesting on TestSubscriptionPayload {\n  mutation\n  node {\n    ...TestDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...TestPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const UserConnectionDeepNestingFragment = `fragment UserConnectionDeepNesting on UserConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...UserEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateUserDeepNesting\n  }\n}\n`\n\nexport const UserGroupConnectionDeepNestingFragment = `fragment UserGroupConnectionDeepNesting on UserGroupConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...UserGroupEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateUserGroupDeepNesting\n  }\n}\n`\n\nexport const TaskResponseDeepNestingFragment = `fragment TaskResponseDeepNesting on TaskResponse {\n  success\n  message\n  data {\n    ...TaskDeepNesting\n  }\n}\n`\n\nexport const UserGroupEdgeDeepNestingFragment = `fragment UserGroupEdgeDeepNesting on UserGroupEdge {\n  node {\n    ...UserGroupDeepNesting\n  }\n  cursor\n}\n`\n\nexport const UserResponseDeepNestingFragment = `fragment UserResponseDeepNesting on UserResponse {\n  success\n  message\n  data {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const UserGroupPreviousValuesDeepNestingFragment = `fragment UserGroupPreviousValuesDeepNesting on UserGroupPreviousValues {\n  id\n  name\n}\n`\n\nexport const TaskReactionResponseDeepNestingFragment = `fragment TaskReactionResponseDeepNesting on TaskReactionResponse {\n  success\n  message\n  data {\n    ...TaskReactionDeepNesting\n  }\n}\n`\n\nexport const UserGroupSubscriptionPayloadDeepNestingFragment = `fragment UserGroupSubscriptionPayloadDeepNesting on UserGroupSubscriptionPayload {\n  mutation\n  node {\n    ...UserGroupDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...UserGroupPreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ResourcePreviousValuesDeepNestingFragment = `fragment ResourcePreviousValuesDeepNesting on ResourcePreviousValues {\n  id\n  code\n  createdAt\n  updatedAt\n  type\n  name\n  longtitle\n  content\n  contentText\n  published\n  deleted\n  hidemenu\n  searchable\n  uri\n  isfolder\n  rating\n  positiveVotesCount\n  negativeVotesCount\n  neutralVotesCount\n  oldID\n  commentOldID\n  class_key\n  template\n  mockUpdate\n  components\n}\n`\n\nexport const VotePreviousValuesDeepNestingFragment = `fragment VotePreviousValuesDeepNesting on VotePreviousValues {\n  id\n  createdAt\n  updatedAt\n  value\n}\n`\n\nexport const ResourceDeepNestingFragment = `fragment ResourceDeepNesting on Resource {\n  id\n  createdAt\n  updatedAt\n  type\n  name\n  longtitle\n  content\n  components\n  contentText\n  published\n  deleted\n  hidemenu\n  searchable\n  uri\n  isfolder\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Parent {\n    ...ResourceDeepNesting\n  }\n  Childs {\n    ...ResourceDeepNesting\n  }\n  Image {\n    ...FileDeepNesting\n  }\n  rating\n  positiveVotesCount\n  negativeVotesCount\n  neutralVotesCount\n  CommentTarget {\n    ...ResourceDeepNesting\n  }\n  Comments {\n    ...ResourceDeepNesting\n  }\n  Votes {\n    ...VoteDeepNesting\n  }\n  Tags {\n    ...ResourceTagDeepNesting\n  }\n  oldID\n  commentOldID\n  Topics {\n    ...ResourceDeepNesting\n  }\n  Blog {\n    ...ResourceDeepNesting\n  }\n  Service {\n    ...ServiceDeepNesting\n  }\n  Project {\n    ...ProjectDeepNesting\n  }\n  Team {\n    ...TeamDeepNesting\n  }\n  class_key\n  template\n  mockUpdate\n}\n`\n\nexport const VoteSubscriptionPayloadDeepNestingFragment = `fragment VoteSubscriptionPayloadDeepNesting on VoteSubscriptionPayload {\n  mutation\n  node {\n    ...VoteDeepNesting\n  }\n  updatedFields\n  previousValues {\n    ...VotePreviousValuesDeepNesting\n  }\n}\n`\n\nexport const ChatRoomInvitationDeepNestingFragment = `fragment ChatRoomInvitationDeepNesting on ChatRoomInvitation {\n  id\n  createdAt\n  updatedAt\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  User {\n    ...UserDeepNesting\n  }\n  ChatRoom {\n    ...ChatRoomDeepNesting\n  }\n  Notice {\n    ...NoticeDeepNesting\n  }\n}\n`\n\nexport const SmsMessageResponseDeepNestingFragment = `fragment SmsMessageResponseDeepNesting on SmsMessageResponse {\n  success\n  message\n  data {\n    ...SmsMessageDeepNesting\n  }\n}\n`\n\nexport const PositionDeepNestingFragment = `fragment PositionDeepNesting on Position {\n  id\n  code\n  name\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Users {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const SmsProviderResponseDeepNestingFragment = `fragment SmsProviderResponseDeepNesting on SmsProviderResponse {\n  success\n  message\n  data {\n    ...SmsProviderDeepNesting\n  }\n}\n`\n\nexport const NoticeConnectionDeepNestingFragment = `fragment NoticeConnectionDeepNesting on NoticeConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...NoticeEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateNoticeDeepNesting\n  }\n}\n`\n\nexport const MarketplaceAuthResponseDeepNestingFragment = `fragment MarketplaceAuthResponseDeepNesting on MarketplaceAuthResponse {\n  success\n  message\n  data\n}\n`\n\nexport const GameResultEdgeDeepNestingFragment = `fragment GameResultEdgeDeepNesting on GameResultEdge {\n  node {\n    ...GameResultDeepNesting\n  }\n  cursor\n}\n`\n\nexport const ChatMessageReadedResponseDeepNestingFragment = `fragment ChatMessageReadedResponseDeepNesting on ChatMessageReadedResponse {\n  success\n  message\n  data {\n    ...ChatMessageReadedDeepNesting\n  }\n}\n`\n\nexport const AggregateEthAccountDeepNestingFragment = `fragment AggregateEthAccountDeepNesting on AggregateEthAccount {\n  count\n}\n`\n\nexport const GameResponseDeepNestingFragment = `fragment GameResponseDeepNesting on GameResponse {\n  success\n  message\n  data {\n    ...GameDeepNesting\n  }\n}\n`\n\nexport const TaskConnectionDeepNestingFragment = `fragment TaskConnectionDeepNesting on TaskConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...TaskEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateTaskDeepNesting\n  }\n}\n`\n\nexport const GameResultResponseDeepNestingFragment = `fragment GameResultResponseDeepNesting on GameResultResponse {\n  success\n  message\n  data {\n    ...GameResultDeepNesting\n  }\n}\n`\n\nexport const TestEdgeDeepNestingFragment = `fragment TestEdgeDeepNesting on TestEdge {\n  node {\n    ...TestDeepNesting\n  }\n  cursor\n}\n`\n\nexport const TournamentResponseDeepNestingFragment = `fragment TournamentResponseDeepNesting on TournamentResponse {\n  success\n  message\n  data {\n    ...TournamentDeepNesting\n  }\n}\n`\n\nexport const AggregateTemplateDeepNestingFragment = `fragment AggregateTemplateDeepNesting on AggregateTemplate {\n  count\n}\n`\n\nexport const TournamentGroupResponseDeepNestingFragment = `fragment TournamentGroupResponseDeepNesting on TournamentGroupResponse {\n  success\n  message\n  data {\n    ...TournamentGroupDeepNesting\n  }\n}\n`\n\nexport const AuthPayloadDeepNestingFragment = `fragment AuthPayloadDeepNesting on AuthPayload {\n  success\n  message\n  token\n  data {\n    ...UserDeepNesting\n  }\n}\n`\n\nexport const TourneyResponseDeepNestingFragment = `fragment TourneyResponseDeepNesting on TourneyResponse {\n  success\n  message\n  data {\n    ...TourneyDeepNesting\n  }\n}\n`\n\nexport const WorldPreviousValuesDeepNestingFragment = `fragment WorldPreviousValuesDeepNesting on WorldPreviousValues {\n  createdAt\n  updatedAt\n  id\n  name\n  seed\n  type\n  time\n  timeChanger\n  days\n  lastPlayed\n}\n`\n\nexport const EthBlockResponseDeepNestingFragment = `fragment EthBlockResponseDeepNesting on EthBlockResponse {\n  success\n  message\n  data {\n    ...EthBlockDeepNesting\n  }\n}\n`\n\nexport const TemplateDeepNestingFragment = `fragment TemplateDeepNesting on Template {\n  id\n  createdAt\n  updatedAt\n  externalKey\n  name\n  description\n  component\n  props\n  components\n  vars\n  rank\n  Parent {\n    ...TemplateDeepNesting\n  }\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Project {\n    ...ProjectDeepNesting\n  }\n  PrismaProject {\n    ...ProjectDeepNesting\n  }\n}\n`\n\nexport const EthContractSourceResponseDeepNestingFragment = `fragment EthContractSourceResponseDeepNesting on EthContractSourceResponse {\n  success\n  message\n  data {\n    ...EthContractSourceDeepNesting\n  }\n}\n`\n\nexport const ResourceEdgeDeepNestingFragment = `fragment ResourceEdgeDeepNesting on ResourceEdge {\n  node {\n    ...ResourceDeepNesting\n  }\n  cursor\n}\n`\n\nexport const EthPersonalAccountResponseDeepNestingFragment = `fragment EthPersonalAccountResponseDeepNesting on EthPersonalAccountResponse {\n  success\n  message\n  data {\n    ...EthPersonalAccountDeepNesting\n  }\n}\n`\n\nexport const TourneyConnectionDeepNestingFragment = `fragment TourneyConnectionDeepNesting on TourneyConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...TourneyEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateTourneyDeepNesting\n  }\n}\n`\n\nexport const IceCandidateDeepNestingFragment = `fragment IceCandidateDeepNesting on IceCandidate {\n  from\n  to\n  sdp\n  callRequestId\n}\n`\n\nexport const AggregateTeamMemberDeepNestingFragment = `fragment AggregateTeamMemberDeepNesting on AggregateTeamMember {\n  count\n}\n`\n\nexport const PositionResponseDeepNestingFragment = `fragment PositionResponseDeepNesting on PositionResponse {\n  success\n  message\n  data {\n    ...PositionDeepNesting\n  }\n}\n`\n\nexport const EthPersonalAccountDeepNestingFragment = `fragment EthPersonalAccountDeepNesting on EthPersonalAccount {\n  address\n  balance\n}\n`\n\nexport const ProjectMemberResponseDeepNestingFragment = `fragment ProjectMemberResponseDeepNesting on ProjectMemberResponse {\n  success\n  message\n  data {\n    ...ProjectMemberDeepNesting\n  }\n}\n`\n\nexport const UserDeepNestingFragment = `fragment UserDeepNesting on User {\n  worlds {\n    ...WorldDeepNesting\n  }\n  settings {\n    ...SettingsDeepNesting\n  }\n  id\n  createdAt\n  updatedAt\n  username\n  email\n  phone\n  showEmail\n  showPhone\n  password\n  fullname\n  image\n  address\n  sudo\n  active\n  activated\n  deleted\n  Groups {\n    ...UserGroupDeepNesting\n  }\n  CreatedUsers {\n    ...UserDeepNesting\n  }\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  LogedIns {\n    ...LogedInDeepNesting\n  }\n  Resources {\n    ...ResourceDeepNesting\n  }\n  Votes {\n    ...VoteDeepNesting\n  }\n  NotificationTypes {\n    ...NotificationTypeDeepNesting\n  }\n  NotificationTypesCreated {\n    ...NotificationTypeDeepNesting\n  }\n  Tags {\n    ...TagDeepNesting\n  }\n  ResourceTags {\n    ...ResourceTagDeepNesting\n  }\n  EthContractSourcesCreated {\n    ...EthContractSourceDeepNesting\n  }\n  EthAccounts {\n    ...EthAccountDeepNesting\n  }\n  Teams {\n    ...TeamMemberDeepNesting\n  }\n  TeamsCreated {\n    ...TeamDeepNesting\n  }\n  Projects {\n    ...ProjectMemberDeepNesting\n  }\n  ProjectsCreated {\n    ...ProjectDeepNesting\n  }\n  Tasks {\n    ...TaskMemberDeepNesting\n  }\n  Timers {\n    ...TimerDeepNesting\n  }\n  PrismaProjects {\n    ...ProjectDeepNesting\n  }\n  hasEmail\n  hasPhone\n  marketplaceToken\n  hidden\n  EthAccountAuthed {\n    ...EthAccountDeepNesting\n  }\n}\n`\n\nexport const AggregateResourceTagDeepNestingFragment = `fragment AggregateResourceTagDeepNesting on AggregateResourceTag {\n  count\n}\n`\n\nexport const TeamMemberResponseDeepNestingFragment = `fragment TeamMemberResponseDeepNesting on TeamMemberResponse {\n  success\n  message\n  data {\n    ...TeamMemberDeepNesting\n  }\n}\n`\n\nexport const TeamResponseDeepNestingFragment = `fragment TeamResponseDeepNesting on TeamResponse {\n  success\n  message\n  data {\n    ...TeamDeepNesting\n  }\n}\n`\n\nexport const ServiceCategoryResponseDeepNestingFragment = `fragment ServiceCategoryResponseDeepNesting on ServiceCategoryResponse {\n  success\n  message\n  data {\n    ...ServiceCategoryDeepNesting\n  }\n}\n`\n\nexport const ServiceResponseDeepNestingFragment = `fragment ServiceResponseDeepNesting on ServiceResponse {\n  success\n  message\n  data {\n    ...ServiceDeepNesting\n  }\n}\n`\n\nexport const PositionEdgeDeepNestingFragment = `fragment PositionEdgeDeepNesting on PositionEdge {\n  node {\n    ...PositionDeepNesting\n  }\n  cursor\n}\n`\n\nexport const EthContractSourceDeepNestingFragment = `fragment EthContractSourceDeepNesting on EthContractSource {\n  id\n  createdAt\n  updatedAt\n  name\n  description\n  source\n  CreatedBy {\n    ...UserDeepNesting\n  }\n  Accounts {\n    ...EthAccountDeepNesting\n  }\n}\n`\n\nexport const ChatRoomResponseDeepNestingFragment = `fragment ChatRoomResponseDeepNesting on ChatRoomResponse {\n  success\n  message\n  data {\n    ...ChatRoomDeepNesting\n  }\n}\n`\n\nexport const EthContractSourceConnectionDeepNestingFragment = `fragment EthContractSourceConnectionDeepNesting on EthContractSourceConnection {\n  pageInfo {\n    ...PageInfoDeepNesting\n  }\n  edges {\n    ...EthContractSourceEdgeDeepNesting\n  }\n  aggregate {\n    ...AggregateEthContractSourceDeepNesting\n  }\n}\n`\n\n","\nimport React, { Component, Fragment } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport PrismaCmsPageLayout from \"@prisma-cms/front/lib/components/pages/layout\";\n\nimport {\n  UserLink,\n  TaskLink,\n  Editor,\n  ProjectLink,\n} from \"@modxclub/ui\"\n\nexport default class PageLayout extends PrismaCmsPageLayout {\n\n  static propTypes = {\n    ...PrismaCmsPageLayout.propTypes,\n    UserLink: PropTypes.func.isRequired,\n    TaskLink: PropTypes.func.isRequired,\n    Editor: PropTypes.func.isRequired,\n    ProjectLink: PropTypes.func.isRequired,\n  }\n\n  static childContextTypes = {\n    ...PrismaCmsPageLayout.childContextTypes,\n    UserLink: PropTypes.func,\n    TaskLink: PropTypes.func,\n    Editor: PropTypes.func,\n    ProjectLink: PropTypes.func,\n  }\n\n  static defaultProps = {\n    ...PrismaCmsPageLayout.defaultProps,\n    UserLink,\n    TaskLink,\n    Editor,\n    ProjectLink,\n  }\n\n  render(content) {\n\n    return content === null ? null : super.render(<div\n      style={{\n        padding: \"20px 10px\",\n        maxWidth: 1260,\n        margin: \"0 auto\",\n        height: \"100%\",\n      }}\n    >\n      {content}\n    </div>);\n  }\n\n}","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from 'material-ui/styles';\n// import Typography from 'material-ui/Typography';\n// import Grid from 'material-ui/Grid';\n\nimport {\n  styles,\n  UsersPageView as PrismaCmsUsersPageView,\n} from '@prisma-cms/front/lib/components/pages/UsersPage/View';\n\nimport Filters from \"@prisma-cms/filters\";\n\nimport moment from 'moment';\nimport { Typography } from 'material-ui';\n\n\nexport class UsersPageView extends PrismaCmsUsersPageView {\n\n  static propTypes = {\n    ...PrismaCmsUsersPageView.propTypes,\n    filters: PropTypes.object,\n    setFilters: PropTypes.func,\n  };\n\n\n  // static defaultProps = {\n  //   ...PrismaCmsUsersPageView.defaultProps,\n  // };\n\n\n  renderFilters() {\n\n    const {\n      filters,\n      setFilters,\n    } = this.props;\n\n    return filters && setFilters ? <Filters\n      queryName=\"users\"\n      filters={filters}\n      setFilters={setFilters}\n    /> : null;\n  }\n\n\n  getColumns() {\n\n    const {\n      UserLink,\n      ProjectLink,\n      Link,\n    } = this.context;\n\n    return [\n      {\n        id: 'username',\n        numeric: false,\n        disablePadding: false,\n        label: 'Пользователь',\n        renderer: (value, record) => {\n\n          return <UserLink\n            user={record}\n          />;\n        }\n      },\n      {\n        id: 'createdAt',\n        numeric: false,\n        disablePadding: false,\n        label: 'Дата регистрации',\n        renderer: (value, record) => {\n\n          return value ? moment(value).format(\"LL\") : \"\";\n        }\n      },\n      {\n        id: 'ProjectsCreated',\n        numeric: false,\n        disablePadding: false,\n        label: 'Создал проекты',\n        renderer: (value, record) => {\n\n          const {\n            id: userId,\n            username,\n          } = record;\n\n          let output;\n\n          let max = 3;\n\n          if (value && value.length) {\n\n            const projects = value.map(n => {\n\n              const {\n                id,\n              } = n;\n\n              return <ProjectLink\n                key={id}\n                object={n}\n              />\n\n            });\n\n            const listProjects = projects.splice(0, max);\n\n            const moreProjects = projects.length;\n\n            output = <Fragment>\n\n              {listProjects.reduce((a, b) => [a, \", \", b])} {moreProjects ? <Link\n                to={`/projects?filters=%7B\"CreatedBy\"%3A%7B\"username\"%3A\"${username}\"%7D%7D`}\n              >\n                <Typography\n                  variant=\"caption\"\n                >\n                  и еще {moreProjects}\n                </Typography>\n              </Link> : null}\n\n            </Fragment>\n\n          };\n\n          return output;\n        }\n      },\n      {\n        id: 'Projects',\n        numeric: false,\n        disablePadding: false,\n        label: 'Участвует в проектах',\n        renderer: (value, record) => {\n\n          const {\n            id: userId,\n            username,\n          } = record;\n\n          let output;\n\n          let max = 3;\n\n          if (value && value.length) {\n\n            const projects = value.map(n => {\n\n              const {\n                id,\n                Project,\n              } = n;\n\n              return <ProjectLink\n                key={id}\n                object={Project}\n              />\n\n            });\n\n            const listProjects = projects.splice(0, max);\n\n            const moreProjects = projects.length;\n\n            output = <Fragment>\n\n              {listProjects.reduce((a, b) => [a, \", \", b])} {moreProjects ? <Link\n                to={`/projects?filters=%7B\"Members_some\"%3A%7B\"User\"%3A%7B\"username\"%3A\"${username}\"%7D%7D%7D`}\n              >\n                <Typography\n                  variant=\"caption\"\n                >\n                  и еще {moreProjects}\n                </Typography>\n              </Link> : null}\n\n            </Fragment>\n\n          };\n\n          return output;\n        }\n      },\n    ]\n  }\n\n\n}\n\n\nexport default withStyles(styles)(props => <UsersPageView {...props} />);","\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Page from \"../layout\";\n\nimport View from './View';\n\n\nimport PrismaCmsUsersPage from '@prisma-cms/front/lib/components/pages/UsersPage';\n\n\nexport class UsersPage extends PrismaCmsUsersPage {\n\n\n  static defaultProps = {\n    ...PrismaCmsUsersPage.defaultProps,\n    View,\n  }\n\n\n  setPageMeta(meta) {\n\n    return super.setPageMeta(meta || {\n      title: \"Участники\",\n    });\n\n  }\n\n}\n\n\nexport default class extends Page {\n\n\n\n  setFilters(filters) {\n\n    const {\n      uri,\n      router: {\n        history,\n      },\n    } = this.context;\n\n\n\n    let newUri = uri.clone();\n\n    try {\n\n      filters = filters ? JSON.stringify(filters) : undefined;\n    }\n    catch (error) {\n      console.error(error);\n    }\n\n    if (filters) {\n\n      if (newUri.hasQuery) {\n        newUri = newUri.setQuery({\n          filters,\n        });\n      }\n      else {\n        newUri = newUri.addQuery({\n          filters,\n        });\n      }\n\n    }\n    else {\n\n      newUri.removeQuery(\"filters\");\n\n    }\n\n    newUri.removeQuery(\"page\");\n\n\n    const url = newUri.resource();\n\n\n\n    history.push(url);\n\n  }\n\n\n  render() {\n\n    const {\n      uri,\n    } = this.context;\n\n    let {\n      where: propsWhere,\n      ...other\n    } = this.props;\n\n    let {\n      filters,\n    } = uri.query(true);\n\n\n    try {\n      filters = filters && JSON.parse(filters) || null;\n    }\n    catch (error) {\n      console.error(console.error(error));\n    }\n\n\n    let AND = [];\n\n    if (propsWhere) {\n      AND.push(propsWhere);\n    }\n\n\n    if (filters) {\n      AND.push(filters);\n    }\n\n\n    let where = {\n      AND,\n    }\n    \n\n    return super.render(<UsersPage\n      orderBy=\"createdAt_ASC\"\n      filters={filters || {}}\n      setFilters={filters => this.setFilters(filters)}\n      where={where}\n      {...other}\n    />);\n\n  }\n\n}\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { compose, graphql } from 'react-apollo';\n\nimport Typography from \"material-ui/Typography\";\n\nimport Context from \"@prisma-cms/context\";\n\nconst notificationsQuery = gql`\n  query {\n    objects: notificationTypes{\n      id\n      name\n      comment\n    }\n  }\n`;\n\nclass UserNotificationTypes extends Component {\n\n  static propTypes = {\n    user: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired,\n    inEditMode: PropTypes.bool.isRequired,\n    mutate: PropTypes.func.isRequired,\n  };\n\n  static contextType = Context;\n\n  render() {\n\n    const {\n      data,\n      user,\n      inEditMode,\n    } = this.props;\n\n    const {\n      user: currentUser,\n      Grid,\n      CheckBox,\n    } = this.context;\n\n\n    if (!user || !currentUser || user.id !== currentUser.id) {\n      return null;\n    }\n\n    const {\n      loading,\n      objects,\n    } = data;\n\n    if (!objects || !objects.length) {\n      return null;\n    }\n\n    const {\n      NotificationTypes,\n    } = user;\n\n\n    let output = null\n\n    output = objects.map(n => {\n\n      const {\n        id,\n        name,\n        comment,\n      } = n;\n\n      return <Grid\n        key={id}\n        item\n        xs={12}\n      >\n\n        <CheckBox\n          checked={NotificationTypes && NotificationTypes.findIndex(n => n.id === id) !== -1 ? true : false}\n          label={comment || name}\n          // disabled={!inEditMode}\n          onChange={async event => {\n\n            const {\n              checked,\n            } = event.target;\n\n\n\n            const {\n              mutate,\n            } = this.props;\n\n            const action = checked ? \"connect\" : \"disconnect\";\n\n            await mutate({\n              variables: {\n                data: {\n                  NotificationTypes: {\n                    [action]: {\n                      id,\n                    },\n                  },\n                },\n              },\n            });\n\n          }}\n        />\n      </Grid>\n\n    })\n\n    return <Grid\n      container\n      spacing={8}\n    >\n      {output}\n    </Grid>;\n  }\n}\n\n\nexport default compose(graphql(notificationsQuery))(UserNotificationTypes);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ChatRooms as ChatRoomsProto,\n  NewMessage,\n} from \"@prisma-cms/society\";\n\nimport Context from \"@prisma-cms/context\";\nimport { Typography } from 'material-ui';\nimport { withStyles } from 'material-ui';\n\nconst styles = theme => {\n\n  return {\n    message: {\n      padding: \"0px !important\",\n    },\n  }\n}\n\n\nclass ChatRooms extends ChatRoomsProto {\n\n  setPageMeta(){\n\n    return;\n  }\n  \n}\n\n\nclass ChatRoomsByUser extends Component {\n\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    currentUser: PropTypes.object,\n  };\n\n  static contextType = Context;\n\n  render() {\n\n    const {\n      user,\n      currentUser,\n      classes,\n    } = this.props;\n\n\n    const {\n      id: userId,\n      username,\n      fullname,\n    } = user || {};\n\n    if (!userId) {\n      return null;\n    }\n\n    const {\n      id: currentUserId,\n    } = currentUser || {};\n\n    let sendMessage;\n\n    if (!currentUserId || (currentUserId !== userId)) {\n\n      sendMessage = <div>\n\n        <Typography\n          variant=\"subheading\"\n        >\n          Отправить пользователю приватное сообщение\n        </Typography>\n\n        <NewMessage\n          cacheKey={`newMessage_${userId}`}\n          data={{\n            Room: {\n              to: userId,\n            },\n          }}\n          onSave={result => {\n\n\n\n            const {\n              response,\n            } = result && result.data || {};\n\n            const {\n              Room,\n            } = response && response.data || {};\n\n            const {\n              id: rootId,\n            } = Room;\n\n            if (rootId) {\n              const {\n                router: {\n                  history,\n                },\n              } = this.context;\n\n              history.push(`/chat-rooms/${rootId}`);\n            }\n\n          }}\n          classes={{\n            root: classes.message,\n          }}\n        />\n      </div>\n\n    }\n\n    return (\n      <Fragment>\n\n        {sendMessage}\n\n        <ChatRooms\n          where={{\n            Members_some: {\n              id: userId,\n            },\n          }}\n          title={`Чат-комнаты с пользователем ${fullname || username}`}\n        />\n\n      </Fragment>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(props => <ChatRoomsByUser\n  {...props}\n/>);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography, Paper, Checkbox, IconButton, CircularProgress } from 'material-ui';\nimport { withStyles } from 'material-ui';\n\nimport WalletIcon from \"material-ui-icons/AccountBalanceWallet\";\nimport HelpIcon from \"material-ui-icons/Help\";\nimport CheckIcon from \"material-ui-icons/Check\";\nimport SendIcon from \"material-ui-icons/Send\";\n\nimport { Button } from 'material-ui';\n\nimport PrismaCmsComponent from \"@prisma-cms/component\";\nimport { TextField } from 'material-ui';\n\nimport NumberFormat from 'react-number-format';\n\nimport Web3 from \"web3\";\nimport gql from 'graphql-tag';\n\nexport const styles = theme => {\n\n\n  return {\n    root: {\n      padding: 10,\n      border: \"2px solid transparent\",\n      \"&.success\": {\n        borderColor: \"green\",\n      },\n      \"&.failure\": {\n        borderColor: \"red\",\n      },\n    },\n    icon: {\n      color: theme.palette.primary[400],\n    },\n    actions: {\n      marginTop: 15,\n    },\n    title: {\n      marginBottom: 10,\n    },\n    paragraph: {\n      marginTop: 10,\n      marginBottom: 10,\n    },\n    textSuccess: {\n      color: \"green\",\n    },\n  }\n}\n\nexport const locales = {\n  ru: {\n    values: {\n      \"Your wallet\": \"Ваш кошелек\",\n      \"User's wallet\": \"Кошелек пользователя\",\n      \"Address\": \"Адрес\",\n      \"Balance\": \"Баланс\",\n      \"Send\": \"Отправить\",\n      \"Error while creating wallet\": \"Не удалось создать кошелек\",\n      \"Top up\": \"Пополнить\",\n      \"You may\": \"Вы можете\",\n      \"create new wallet\": \"создать новый кошелек\",\n      \"or\": \"или\",\n      \"set existing\": \"указать существующий\",\n      \"Attention\": \"Внимание\",\n      \"We are not liable for any transactions and losses from ethereum wallets.\": \"Мы не несем никакой ответственности за какие-либо операции и потери с ethereum-кошельков.\",\n      \"This wallet is not a wallet in the literal sense of the word, but a link to your personal address in the system\":\n        \"Данный кошелек не является кошельком в прямом смысле слова, а является ссылкой на ваш личный адрес в системе\",\n      \"Close\": \"Закрыть\",\n      \"Read more\": \"Читать подробней\",\n      \"in wikipedia\": \"в википедии\",\n      \"A new ethereum wallet will be created for you. The database will only save its public address, without any access keys.\":\n        \"Для вас будет создан новый ethereum-кошелек. В базе сохранится только его публичный адрес, без каких-либо ключей доступа.\",\n      \"Generate private key\": \"Сгенерировать приватный ключ\",\n      \"Private key\": \"Приватный ключ\",\n      \"The address will be determined by the private key\": \"По приватному ключу будет получен адрес\",\n      \"Send data to your email\": \"Отправить данные на ваш емейл\",\n      \"If you don't know exactly what it is and how it works, you'd better not start it now, but try to get a better idea about this system.\":\n        \"Если вы не назнаете точно, что это такое и как работает, вам лучше не стоит его заводить сейчас, а попытаться получше узнать о этой системе.\",\n      \"We do not store your private keys. The key is needed only to get the address of your wallet and make sure that you have access to it. No key will be shown.\":\n        \"Мы не храним ваши приватные ключи. Ключ нужен только для того, чтобы получить адрес вашего кошелька и убедиться, что у вас есть к нему доступ. Никому ключ не будет показан.\",\n      \"Private key must start with 0x\": \"Приватный ключ должен начинаться с 0x\",\n      \"Could not decrypt private key\": \"Не удалось дешифровать приватный ключ\",\n      \"The received address does not match the address of your wallet\": \"Полученный адрес не совпадает с адресом вашего кошелька\",\n      \"No account received\": \"Не был получен аккаунт\",\n      \"Your personal ethereum wallet will be replenished. The balance will be displayed on the site, but we have no control over your wallet and actions with it.\":\n        \"Ваш личный этериум кошелек будет пополнен. Баланс будет отображаться на сайте, но мы никак не контролируем ваш кошелек и действия с ним.\",\n      \"Enter your private key to make sure you have access to your wallet. Otherwise, you will transfer funds and you can not pick them up later.\":\n        \"Введите ваш приватный ключ, чтобы убедиться, что у вас есть доступ к вашему кошельку. Иначе вы переведете средства и не сможете их потом забрать.\",\n      \"We do not accept payment for the replenishment of the wallet. For replenishment, you can choose any service for the purchase of ethereum cryptocurrency.\":\n        \"Мы не принимаем оплату на пополнение кошелька. Для пополнения вы можете выбрать любой сервис для покупки криптовалюты ethereum.\",\n      \"We advise to use the service\": \"Мы советуем воспользоваться сервисом\",\n      \"since they have a minimum replenishment amount of just 0.01 etherium, and we ourselves paid, they did not deceive us\":\n        \"так как у них минимальная сумма пополнения всего 0.01 этериума, и мы сами оплачивали, они нас не обманули\",\n    },\n  },\n  en: {\n    values: {\n      \"Приватный ключ должен начинаться с 0x\": \"Private key must start with 0x\",\n    },\n  },\n}\n\nexport class WalletBalances extends PrismaCmsComponent {\n\n\n  static propTypes = {\n    ...PrismaCmsComponent.propTypes,\n    user: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n    ethAccount: PropTypes.object,\n    children: PropTypes.any,\n  };\n\n\n  // static defaultProps = {};\n\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      ...this.state,\n      showTopupBalanceForm: false,\n      showForm: null,\n      createInRequest: false,\n      ethWalletPKSendEmail: true,\n      showInfo: false,\n      checkStatus: null,\n      showSendEthForm: false,\n      sendEthInRequest: false,\n      amount: null,\n      sendPrivateKey: \"\",\n      sendSuccessTransaction: null,\n    }\n  }\n\n\n  componentWillMount() {\n\n    this.initLocales(locales);\n\n    super.componentWillMount && super.componentWillMount();\n  }\n\n\n  async importWallet() {\n\n    const {\n      query: {\n        updateUserProcessor,\n      },\n    } = this.context;\n\n    const {\n      createInRequest,\n      ethWalletPK,\n      ethWalletPKSendEmail,\n    } = this.state;\n\n\n    if (createInRequest) {\n      return false;\n    }\n\n    this.setState({\n      createInRequest: true,\n    });\n\n\n    await this.mutate({\n      mutation: gql(updateUserProcessor),\n      variables: {\n        data: {\n          ethWalletPK,\n          ethWalletPKSendEmail,\n        },\n      },\n    })\n      .then(async r => {\n\n        const {\n          loadApiData,\n        } = this.context;\n\n        await loadApiData();\n\n        this.setState({\n          showForm: null,\n          ethWalletPK: null,\n        });\n      })\n      .catch(console.error);\n\n\n    this.setState({\n      createInRequest: false,\n    });\n\n  }\n\n\n  async createWallet() {\n\n\n\n\n    const web3 = new Web3(Web3.givenProvider);\n\n    const account = web3.eth.accounts.create(web3.utils.randomHex(32));\n\n\n\n    if (!account) {\n      this.addError(this.lexicon(\"Error while creating wallet\"));\n    }\n    else {\n\n      const {\n        privateKey: ethWalletPK,\n      } = account;\n\n      this.setState({\n        ethWalletPK,\n        showForm: \"importForm\",\n        ethWalletPKSendEmail: true,\n      });\n\n    }\n\n  }\n\n\n  checkWallet() {\n\n\n    const {\n      ethAccount,\n    } = this.props;\n\n    const {\n      address,\n    } = ethAccount || {};\n\n\n    const {\n      ethWalletPKCheck,\n    } = this.state;\n\n\n    let checkStatus;\n    let errorMessage;\n\n\n    const web3 = new Web3(Web3.givenProvider);\n\n    let account;\n\n\n    if (ethWalletPKCheck && !/^0x/.test(ethWalletPKCheck)) {\n      errorMessage = this.lexicon(\"Private key must start with 0x\");\n      checkStatus = false;\n    }\n    else {\n\n      try {\n        account = web3.eth.accounts.privateKeyToAccount(ethWalletPKCheck);\n      }\n      catch (error) {\n        // console.error(\"privateKeyToAccount Error\", error);\n\n        errorMessage = this.lexicon(\"Could not decrypt private key\");\n        checkStatus = false;\n\n      }\n\n\n      if (account) {\n\n        if (address !== account.address) {\n          errorMessage = this.lexicon(\"The received address does not match the address of your wallet\");\n          checkStatus = false;\n        }\n        else {\n          checkStatus = true;\n        }\n\n      }\n      else {\n        errorMessage = this.lexicon(\"No account received\");\n        checkStatus = false;\n      }\n\n    }\n\n\n    if (errorMessage) {\n      this.addError(errorMessage);\n    }\n\n    this.setState({\n      checkStatus,\n    });\n\n  }\n\n\n  async sendEth() {\n\n    const {\n      query: {\n        createEthTransactionProcessor,\n      },\n    } = this.context;\n\n    const {\n      amount,\n      sendEthInRequest,\n      sendPrivateKey: privateKey,\n    } = this.state;\n\n\n    const {\n      ethAccount,\n    } = this.props;\n\n    const {\n      address,\n    } = ethAccount || {};\n\n    if (sendEthInRequest) {\n      return;\n    }\n\n    this.setState({\n      sendEthInRequest: true,\n    });\n\n\n    await this.mutate({\n      mutation: gql(createEthTransactionProcessor),\n      variables: {\n        data: {\n          type: \"SendEth\",\n          privateKey: privateKey || \"\",\n          to: address,\n          amount: parseFloat(amount),\n        }\n      },\n    })\n      .then(result => {\n\n        // console.log(\"result\", result);\n\n        const {\n          response,\n        } = result.data || {};\n\n        if (response) {\n\n          const {\n            success,\n            data: transaction,\n          } = response;\n\n\n          if (success && transaction) {\n\n            this.setState({\n              sendSuccessTransaction: transaction,\n              amount: null,\n              showSendEthForm: false,\n              sendPrivateKey: \"\",\n            });\n\n          }\n\n        }\n\n      })\n      .catch(error => {\n        console.error(error);\n      });\n\n    this.setState({\n      sendEthInRequest: false,\n    });\n\n  }\n\n\n  render() {\n\n    const {\n      user,\n      ethAccount,\n      classes,\n      children,\n      ...other\n    } = this.props;\n\n    const {\n      user: currentUser,\n      TransactionLink,\n      Grid,\n    } = this.context;\n\n    const {\n      address,\n      balance,\n    } = ethAccount || {};\n\n\n    if (!user) {\n      return null;\n    }\n\n    const {\n      showTopupBalanceForm,\n      showForm,\n      ethWalletPK,\n      ethWalletPKSendEmail,\n      createInRequest,\n      showInfo,\n      ethWalletPKCheck,\n      checkStatus,\n      showSendEthForm,\n      amount,\n      sendPrivateKey,\n      sendEthInRequest,\n      sendSuccessTransaction,\n    } = this.state;\n\n\n    const {\n      id: currentUserId,\n      EthAccounts: currentUserEthAccounts,\n    } = currentUser || {};\n\n\n    const currentUserEthAccount = currentUserEthAccounts && currentUserEthAccounts[0] || null;\n\n    const {\n      balance: currentUserBalance,\n    } = currentUserEthAccount || {}\n\n\n    const {\n      id: userId,\n    } = user;\n\n\n    let title;\n\n\n    if (currentUserId && currentUserId === userId) {\n      title = this.lexicon(\"Your wallet\");\n    }\n    else {\n      title = this.lexicon(\"User's wallet\");\n    }\n\n\n    let output;\n\n    let actions = [];\n\n\n    if (ethAccount) {\n\n      output = <Fragment>\n\n\n        <Typography>\n          {this.lexicon(\"Address\")}: <a\n            href={`https://etherscan.io/address/${address}`}\n            target=\"_blank\"\n          >\n            {address}\n          </a>\n        </Typography>\n\n        <Typography>\n          {this.lexicon(\"Balance\")} Eth: {balance}\n        </Typography>\n\n      </Fragment>\n\n      if (currentUserId) {\n\n        if (currentUserId === userId) {\n\n\n\n          /**\n           * Пополнение баланса\n           */\n\n          if (showTopupBalanceForm) {\n\n            actions.push(<div\n              key=\"topupBalance\"\n            >\n              <Typography\n                variant=\"subheading\"\n                color=\"secondary\"\n              >\n                {this.lexicon(\"Attention\")}!\n              </Typography>\n\n              <Typography\n                className={classes.paragraph}\n              >\n                {this.lexicon(\"Your personal ethereum wallet will be replenished. The balance will be displayed on the site, but we have no control over your wallet and actions with it.\")}\n              </Typography>\n\n              <Typography\n                className={classes.paragraph}\n              >\n                {this.lexicon(\"Enter your private key to make sure you have access to your wallet. Otherwise, you will transfer funds and you can not pick them up later.\")}\n              </Typography>\n\n              <Grid\n                container\n                alignItems=\"center\"\n              >\n                <Grid\n                  item\n                  xs\n                >\n                  {this.renderField(<TextField\n                    name=\"ethWalletPKCheck\"\n                    label={this.lexicon(\"Private key\")}\n                    helperText={this.lexicon(\"The address will be determined by the private key\")}\n                    fullWidth\n                    onChange={event => {\n                      const {\n                        name,\n                        value,\n                      } = event.target;\n\n                      this.setState({\n                        [name]: value,\n                        checkStatus: null,\n                      });\n                    }}\n                    value={ethWalletPKCheck || \"\"}\n                  />)}\n                </Grid>\n                <Grid\n                  item\n                >\n                  <IconButton\n                    disabled={!ethWalletPKCheck}\n                    onClick={event => this.checkWallet()}\n                  >\n                    <CheckIcon />\n                  </IconButton>\n                </Grid>\n              </Grid>\n\n\n              <Typography\n                className={classes.paragraph}\n              >\n                {this.lexicon(\"We do not accept payment for the replenishment of the wallet. For replenishment, you can choose any service for the purchase of ethereum cryptocurrency.\")}\n              </Typography>\n\n              <Typography\n                className={classes.paragraph}\n              >\n                {this.lexicon(\"We advise to use the service\")} <a\n                  href=\"https://pocket-exchange.com/?ref_hash=685f16b842e617cb7814eff46d386fb6\"\n                  target=\"_blank\"\n                  rel=\"nofollow\"\n                >\n                  pocket-exchange.com\n                </a>, {this.lexicon(\"since they have a minimum replenishment amount of just 0.01 etherium, and we ourselves paid, they did not deceive us\")}.\n              </Typography>\n\n            </div>);\n\n          }\n\n\n\n          actions.push(<Button\n            key=\"showTopupBalanceForm\"\n            onClick={event => this.setState({\n              showTopupBalanceForm: !showTopupBalanceForm,\n            })}\n          >\n            {!showTopupBalanceForm ? this.lexicon(\"Top up\") : \"Cancel\"}\n          </Button>);\n\n        }\n        else {\n\n          if (sendSuccessTransaction) {\n\n            const {\n              id,\n            } = sendSuccessTransaction;\n\n            actions.push(<div\n              key=\"ethSendedSuccess\"\n            >\n\n              <Typography\n                className={classes.textSuccess}\n              >\n                Перевод успешно выполнен.\n              </Typography>\n\n              <Typography\n              >\n                Посмотреть данные транзакции можно <TransactionLink\n                  object={sendSuccessTransaction}\n                >\n                  здесь\n                </TransactionLink>.\n              </Typography>\n\n            </div>);\n\n          }\n          else if (showSendEthForm) {\n\n            if (currentUserEthAccount) {\n\n              /**\n               * Проверяем достаточно ли баланса\n               */\n              // if (!currentUserBalance) {\n              //   actions.push(<div\n              //     key=\"sendEthFormNoAmount\"\n              //   >\n\n              //     <Typography\n              //       color=\"secondary\"\n              //     >\n\n              //     </Typography>\n\n              //   </div>)\n              // }\n              // else {\n\n              let error;\n              let helperText = \"Внимательно перепроверьте сумму\";\n\n              let fieldProps = {};\n\n              if (!currentUserBalance || currentUserBalance < amount) {\n                error = true;\n                helperText = \"Недостаточно баланса. Пополните свой кошелек.\";\n\n                fieldProps.error = error;\n              }\n\n              const disabled = error || !amount ? true : false;\n\n\n              actions.push(<div\n                key=\"sendEthForm\"\n              >\n                <Grid\n                  container\n                  alignItems=\"center\"\n                >\n\n                  <Grid\n                    item\n                    xs={12}\n                  >\n\n                    {this.renderField(<NumberFormat\n                      customInput={TextField}\n                      label=\"Сумма в Eth\"\n                      name=\"amount\"\n                      helperText={helperText}\n                      fullWidth\n                      onChange={event => {\n                        const {\n                          name,\n                          value,\n                        } = event.target;\n                        this.setState({\n                          [name]: value,\n                        });\n                      }}\n                      value={amount || \"\"}\n                      {...fieldProps}\n                    />)}\n                  </Grid>\n\n                  <Grid\n                    item\n                    xs\n                  >\n                    {this.renderField(<TextField\n                      label=\"Приватный ключ\"\n                      name=\"privateKey\"\n                      helperText=\"Ключ должен начинаться с 0x\"\n                      fullWidth\n                      onChange={event => {\n                        const {\n                          name,\n                          value,\n                        } = event.target;\n                        this.setState({\n                          sendPrivateKey: value,\n                        });\n                      }}\n                      value={sendPrivateKey || \"\"}\n                    />)}\n                  </Grid>\n\n                  <Grid\n                    item\n                  >\n                    {sendEthInRequest ?\n                      <CircularProgress\n\n                      />\n                      :\n                      <IconButton\n                        disabled={disabled}\n                        onClick={event => this.sendEth()}\n                      >\n                        <SendIcon\n                          style={{\n                            color: !disabled ? \"green\" : undefined,\n                          }}\n                        />\n                      </IconButton>\n                    }\n                  </Grid>\n\n                </Grid>\n              </div>);\n              // }\n\n\n            }\n            else {\n              actions.push(<div\n                key=\"sendEthNoAccount\"\n              >\n                <Typography\n                  color=\"secondary\"\n                >\n                  У вас еще нет своего кошелька. Создайте его в форме ниже.\n                </Typography>\n              </div>)\n            }\n\n          }\n\n          actions.push(<Button\n            key=\"sendEth\"\n            onClick={event => this.setState({\n              showSendEthForm: !showSendEthForm,\n              sendSuccessTransaction: null,\n            })}\n          >\n            {showSendEthForm ? this.lexicon(\"Cancel\") : `${this.lexicon(\"Send\")} Eth`}\n          </Button>);\n        }\n\n      }\n\n    }\n    else if (currentUserId && currentUserId === userId) {\n\n      /**\n       * Если кошелька нет и это текущий пользователь, предлагаем создать кошелек\n       */\n\n\n      let form;\n\n      let locales = {\n        \"\": \"\",\n        \"\": \"\",\n        \"\": \"\",\n      }\n\n      if (showForm) {\n\n\n\n        switch (showForm) {\n\n          case \"createForm\":\n\n            form = <div\n              className={classes.paragraph}\n            >\n\n              <Typography>\n                {this.lexicon(\"A new ethereum wallet will be created for you. The database will only save its public address, without any access keys.\")}\n              </Typography>\n\n              <Button\n                size=\"small\"\n                variant=\"raised\"\n                onClick={event => this.createWallet()}\n              >\n                {this.lexicon(\"Generate private key\")}\n              </Button>\n\n            </div>\n\n            break;\n\n\n          case \"importForm\":\n\n            form = <div\n              className={classes.paragraph}\n            >\n\n              {this.renderField(<TextField\n                name=\"ethWalletPK\"\n                label={this.lexicon(\"Private key\")}\n                helperText={this.lexicon(\"The address will be determined by the private key\")}\n                fullWidth\n                onChange={event => {\n                  const {\n                    name,\n                    value,\n                  } = event.target;\n                  this.setState({\n                    [name]: value,\n                  });\n                }}\n                value={ethWalletPK || \"\"}\n              />)}\n\n              <div>\n                <Checkbox\n                  name=\"ethWalletPKSendEmail\"\n                  checked={ethWalletPKSendEmail ? true : false}\n                  onChange={(event, checked) => {\n                    this.setState({\n                      ethWalletPKSendEmail: checked,\n                    })\n                  }}\n                /> {this.lexicon(\"Send data to your email\")}\n              </div>\n\n              <Button\n                size=\"small\"\n                variant=\"raised\"\n                disabled={!ethWalletPK || createInRequest}\n                onClick={event => this.importWallet()}\n              >\n                {this.lexicon(\"Send\")}\n              </Button>\n\n\n            </div>\n\n            break;\n\n        }\n\n      }\n\n\n      let local = {\n        \"\": \"\",\n        \"\": \"\",\n      }\n\n      output = <div>\n\n        <Typography\n          className={classes.paragraph}\n        >\n          {this.lexicon(\"You may\")} <a\n            href=\"javascript:;\"\n            onClick={event => {\n              event.preventDefault();\n\n              this.setState({\n                showForm: showForm === \"createForm\" ? null : \"createForm\",\n              });\n            }}\n          >\n            {this.lexicon(\"create new wallet\")}\n          </a> {this.lexicon(\"or\")} <a\n            href=\"javascript:;\"\n            onClick={event => {\n              event.preventDefault();\n\n              this.setState({\n                showForm: showForm === \"importForm\" ? null : \"importForm\",\n              });\n            }}\n          >\n            {this.lexicon(\"set existing\")}\n          </a>.\n        </Typography>\n\n        {form}\n\n\n        {form ?\n          <Typography\n            className={classes.paragraph}\n          >\n            <Typography\n              color=\"secondary\"\n              component=\"span\"\n            >\n              {this.lexicon(\"Attention\")}!\n            </Typography> {this.lexicon(\"We are not liable for any transactions and losses from ethereum wallets.\")}\n          </Typography>\n          : null\n        }\n\n\n        <Grid\n          container\n          alignItems=\"center\"\n        >\n          <HelpIcon\n            color=\"primary\"\n          /> <a\n            href=\"javascript:;\"\n            onClick={event => {\n              event.preventDefault();\n\n              this.setState({\n                showInfo: !showInfo,\n              });\n            }}\n          >\n            {showInfo ? this.lexicon(\"Close\") : this.lexicon(\"Read more\")}\n          </a>.\n        </Grid>\n\n        {showInfo ?\n          <div>\n\n\n            <Typography\n              className={classes.paragraph}\n            >\n              {this.lexicon(\"This wallet is not a wallet in the literal sense of the word, but a link to your personal address in the system\")} <a\n                href=\"https://www.ethereum.org/\"\n                target=\"_blank\"\n                rel=\"nofollow\"\n              >\n                ethereum\n              </a> ({this.lexicon(\"Read more\")} <a\n                href=\"https://ru.wikipedia.org/wiki/Ethereum\"\n                target=\"_blank\"\n                rel=\"nofollow\"\n              >{this.lexicon(\"in wikipedia\")}</a>).\n            </Typography>\n\n            <Typography\n              className={classes.paragraph}\n            >\n              {this.lexicon(\"If you don't know exactly what it is and how it works, you'd better not start it now, but try to get a better idea about this system.\")}\n            </Typography>\n\n            <Typography\n              className={classes.paragraph}\n            >\n            </Typography>\n\n            <Typography\n              color=\"secondary\"\n              className={classes.paragraph}\n            >\n              {this.lexicon(\"We do not store your private keys. The key is needed only to get the address of your wallet and make sure that you have access to it. No key will be shown.\")}.\n            </Typography>\n\n\n          </div> : null\n        }\n\n\n\n\n\n      </div>;\n\n    }\n    else {\n      return null;\n    }\n\n\n\n\n\n    if (!output) {\n      return null;\n    }\n\n\n    return (<Paper\n      className={[classes.root, checkStatus === true ? \"success\" : checkStatus === false ? \"failure\" : \"\"].join(\" \")}\n      {...other}\n    >\n\n      <Grid\n        container\n        alignItems=\"center\"\n        className={classes.title}\n      >\n        <WalletIcon\n          className={classes.icon}\n        />   <Typography\n          variant=\"subheading\"\n        >\n          {title}\n        </Typography>\n      </Grid>\n\n\n\n      {output}\n\n\n      {actions && actions.length ?\n        <div\n          className={classes.actions}\n        >\n          {actions}\n        </div>\n        : null\n      }\n\n      {super.render()}\n\n    </Paper>);\n  }\n}\n\n\nexport default withStyles(styles)(props => <WalletBalances {...props} />);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from 'material-ui';\n\nimport Balances from \"./Balances\";\n\nimport Context from \"@prisma-cms/context\";\n\nclass UserEthWallet extends Component {\n\n  static propTypes = {\n    user: PropTypes.object.isRequired,\n    currentUser: PropTypes.object,\n  };\n\n  static contextType = Context;\n\n  render() {\n\n    const {\n      user,\n      currentUser,\n    } = this.props;\n\n\n    if (!user) {\n      return null;\n    }\n\n    const {\n      Grid,\n    } = this.context;\n\n    const ethAccount = user.EthAccounts && user.EthAccounts[0] || null;\n\n    const {\n      id: currentUserId,\n    } = currentUser || {};\n\n\n    const {\n      id: userId,\n    } = user;\n\n\n\n\n    let actions = [];\n\n    let ownWallet;\n    let ownActions = [];\n\n    if (currentUserId) {\n\n      if (currentUserId === userId) {\n\n      }\n      else {\n\n        let currentUserEthAccount = currentUser.EthAccounts && currentUser.EthAccounts[0] || null;\n\n        // if (currentUserEthAccount) {\n\n        ownWallet = <Balances\n          ethAccount={currentUserEthAccount}\n          user={currentUser}\n          // style={{\n          //   marginTop: 20,\n          // }}\n        >\n\n        </Balances>\n\n        // }\n        // else {\n\n        // }\n\n      }\n\n    }\n\n\n    return <Grid\n      container\n      spacing={8}\n    >\n\n      <Grid\n        item\n        xs={12}\n        // md={6}\n      >\n        <Balances\n          ethAccount={ethAccount}\n          user={user}\n        >\n          {actions}\n        </Balances>\n\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        // md={6}\n      >\n\n        {ownWallet}\n\n      </Grid>\n\n\n\n    </Grid>;\n  }\n}\n\n\nexport default UserEthWallet;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport UserPageViewProto from \"@prisma-cms/front/lib/components/pages/UsersPage/UserPage/View\";\nimport UsersGroupsBlock from \"@prisma-cms/front/lib/components/pages/UsersPage/UserPage/View/Groups\";\nimport MetamaskAccount from \"@prisma-cms/front/lib/components/pages/UsersPage/UserPage/View/MetamaskAccount\";\n\nimport NotificationTypes from \"./NotificationTypes\";\nimport ChatRooms from \"./ChatRooms\";\nimport EthWallet from \"./EthWallet\";\nimport Balances from \"./EthWallet/Balances\";\n\nclass UserPageView extends UserPageViewProto {\n\n\n  canEdit() {\n\n    return true;\n  }\n\n\n  getWalletAddress() {\n\n    const object = this.getObjectWithMutations();\n\n    let {\n      ethWallet,\n    } = object;\n\n    const {\n      address,\n    } = this.getEthAccount() || {}\n\n    return ethWallet || address;\n  }\n\n\n  getEthAccount() {\n\n    const object = this.getObjectWithMutations();\n\n    let {\n      EthAccounts,\n    } = object;\n\n    return EthAccounts && EthAccounts[0] || null;\n\n  }\n\n\n  renderDefaultView() {\n\n    const object = this.getObjectWithMutations();\n    const inEditMode = this.isInEditMode();\n\n    let {\n      id: userId,\n      EthAccounts,\n    } = object;\n\n    const {\n      mutate,\n    } = this.props;\n\n    const {\n      user: currentUser,\n      Grid,\n    } = this.context;\n\n\n    const {\n      id: currentUserId,\n    } = currentUser || {}\n\n\n    const ethAccount = this.getEthAccount();\n\n    // const ethWallet = this.getWalletAddress();\n\n    let ethAccountList = [];\n\n\n    if (currentUserId && currentUserId === userId) {\n\n      // console.log(\"EthAccounts\", EthAccounts, object);\n\n      if (EthAccounts && EthAccounts.length) {\n\n        ethAccountList = EthAccounts.map(n => {\n\n          const {\n            id,\n          } = n;\n\n          return <Grid\n            key={id}\n            item\n            xs={12}\n            md={6}\n          >\n\n            <Balances\n              ethAccount={n}\n              user={currentUser}\n            // style={{\n            //   marginTop: 20,\n            // }}\n            />\n\n          </Grid>;\n        });\n\n      }\n\n      ethAccountList.push(<Grid\n        key={\"AddEthAccount\"}\n        item\n        xs={12}\n        md={6}\n      >\n\n        <Balances\n          // ethAccount={n}\n          user={currentUser}\n        // style={{\n        //   marginTop: 20,\n        // }}\n        />\n\n      </Grid>);\n\n    }\n    else if (ethAccount || (currentUserId && currentUserId === userId)) {\n      ethAccountList = <Grid\n        item\n        xs={12}\n        md={6}\n      >\n\n        <EthWallet\n          // currentUserEthAccount={ethAccount}\n          user={object}\n          currentUser={currentUser}\n        />\n      </Grid>\n    }\n\n    return <Grid\n      container\n      spacing={16}\n    >\n\n      <Grid\n        item\n      >\n\n        {this.renderAvatar()}\n\n      </Grid>\n\n      <Grid\n        item\n        xs\n      >\n\n        <Grid\n          container\n          spacing={16}\n        >\n\n\n\n          {currentUserId && currentUserId === userId ?\n            <MetamaskAccount\n              where={{\n                UserAuthed: {\n                  id: currentUserId,\n                },\n              }}\n            />\n            : null\n          }\n\n          <Grid\n            item\n            xs={12}\n          // md={6}\n          >\n\n            <ChatRooms\n              user={object}\n              currentUser={currentUser}\n            />\n\n\n          </Grid>\n\n\n          {ethAccountList}\n\n\n          {/* {ethAccount || (currentUserId && currentUserId === userId) ?\n            <Grid\n              item\n              xs={12}\n              md={6}\n            >\n\n              <EthWallet\n                // currentUserEthAccount={ethAccount}\n                user={object}\n                currentUser={currentUser}\n              />\n            </Grid>\n            : null\n          } */}\n\n\n          <Grid\n            item\n            xs={12}\n            md={6}\n          >\n\n            <NotificationTypes\n              user={object}\n              inEditMode={inEditMode}\n              mutate={mutate}\n            />\n\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n\n\n\n    </Grid>;\n\n  }\n\n  renderEditableView() {\n\n\n    // return <UserView \n    //   {...this.props}\n    // />\n\n    const object = this.getObjectWithMutations();\n    const inEditMode = this.isInEditMode();\n\n    const {\n      id: userId,\n      username,\n      fullname,\n    } = object;\n\n\n    const {\n      mutate,\n    } = this.props;\n\n    const {\n      user: currentUser,\n      Grid,\n    } = this.context;\n\n\n    const {\n      changePassword,\n    } = this.state;\n\n    const {\n    } = currentUser || {}\n\n    const ethWallet = this.getWalletAddress();\n\n    return <Grid\n      container\n      spacing={16}\n    >\n\n      <Grid\n        item\n      >\n\n        {this.renderAvatar()}\n\n      </Grid>\n\n      <Grid\n        item\n        xs\n      >\n\n        <Grid\n          container\n          spacing={16}\n        >\n\n          <Grid\n            item\n            xs={12}\n            md={6}\n          >\n\n\n            {/* <Grid\n              item\n              xs={12}\n            >\n\n              {this.getTextField({\n                name: \"ethWallet\",\n                helperText: \"Сменить ethereum кошелек\",\n                label: \"Адрес кошелька\",\n                value: ethWallet || \"\",\n              })}\n\n            </Grid> */}\n\n            <input type=\"text\" name=\"username\"\n              style={{\n                border: \"none\",\n                height: 0,\n                width: 0,\n                opacity: 0,\n                cursor: \"default\",\n                padding: 0,\n                margin: 0,\n              }}\n            />\n            <input type=\"password\" name=\"password\"\n              style={{\n                border: \"none\",\n                height: 0,\n                width: 0,\n                opacity: 0,\n                cursor: \"default\",\n                padding: 0,\n                margin: 0,\n              }}\n            />\n\n\n            <Grid\n              item\n              xs={12}\n            >\n\n              {this.getTextField({\n                name: \"fullname\",\n                helperText: \"Фамилия и имя\",\n                label: \"ФИО\",\n              })}\n\n            </Grid>\n\n\n            <Grid\n              item\n              xs={12}\n            >\n\n              {this.getTextField({\n                name: \"email\",\n                helperText: \"Сменить емейл\",\n                label: \"Емейл\",\n              })}\n\n            </Grid>\n\n\n            <Grid\n              item\n              xs={12}\n            >\n\n              {this.getTextField({\n                name: \"username\",\n                helperText: \"Логин пользователя\",\n                label: \"Логин\",\n              })}\n\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n            >\n\n              {this.getTextField({\n                name: \"password\",\n                type: \"password\",\n                label: \"Пароль\",\n                helperText: \"Новый пароль\",\n              })}\n\n            </Grid>\n\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={6}\n          >\n\n            <NotificationTypes\n              user={object}\n              inEditMode={inEditMode}\n              mutate={mutate}\n            />\n\n\n            {userId ?\n              <UsersGroupsBlock\n                user={object}\n                inEditMode={inEditMode}\n              />\n              : null\n            }\n\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n\n    </Grid>;\n\n  }\n\n}\n\n\nexport default UserPageView;","\nimport React, { Component, Fragment } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport PrismaCmsPageLayout from \"@prisma-cms/front/lib/components/pages/layout\";\n\nexport default class PageLayout extends PrismaCmsPageLayout {\n\n  render(content) {\n\n    // console.log(\"PageLayout this\", this);\n\n    return content === null ? null : super.render(<div\n      style={{\n        padding: \"20px 10px\",\n        maxWidth: 1260,\n        margin: \"0 auto\",\n        height: \"100%\",\n      }}\n    >\n      {content}\n    </div>);\n  }\n\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport UserPageProto from \"@prisma-cms/front/lib/components/pages/UsersPage/UserPage\";\n\n\nimport View from \"./View\";\n\nimport Page from \"../../layout\";\n\n\nclass UserPage extends Page {\n\n  static defaultProps = {\n    ...Page.defaultProps,\n    View,\n  }\n\n  render() {\n\n    return super.render(<UserPageProto\n      {...this.props}\n    />);\n  }\n\n}\n\n\nexport default UserPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n  render() {\n    return (\n      <thead>\n        \n      </thead>\n    );\n  }\n}\n\nHeader.propTypes = {\n\n};\n\nexport default Header;","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  styles,\n  TableView,\n} from \"apollo-cms/lib/DataView/List/Table\";\n\nimport withStyles from \"material-ui/styles/withStyles\";\nimport Typography from \"material-ui/Typography\";\nimport Grid from \"material-ui/Grid\";\n\n// import Header from \"./header\";\n\nconst customStyles = theme => {\n\n  return {\n    ...styles,\n    root: {\n\n      \"#root &\": {\n\n        border: 0,\n        boxShadow: \"none\",\n\n        \"& table\": {\n          // border: 2,\n          // borderColor: \"red\",\n          \"& thead, tbody\": {\n            \"& td, th\": {\n              padding: \"4px 20px\",\n            },\n          },\n          \"& thead\": {\n            \"& th\": {\n              textAlign: \"center\",\n            },\n          },\n          \"& tbody\": {\n            \"& tr\": {\n              \"&:hover\": {\n                backgroundColor: \"transparent\",\n              },\n            },\n          },\n        },\n\n      },\n\n\n    },\n    loading: {\n      // https://modxclub.ru/tasks/cjquq4m5o2eah0989chqx3m3d/\n      // opacity: 0.5,\n    },\n  }\n}\n\nclass ObjectsListView extends TableView {\n\n\n  static propTypes = {\n    ...TableView.propTypes,\n    withPagination: PropTypes.bool.isRequired,\n  }\n\n\n  static defaultProps = {\n    ...TableView.defaultProps,\n    withPagination: true,\n    columnData: [],\n    limit: 0,\n    // Header,\n  }\n\n\n  getColumns() {\n\n    const {\n      columnData,\n    } = this.props;\n\n    return [\n      {\n        id: \"id\"\n      },\n    ].concat(columnData);\n  }\n\n\n  render() {\n\n    const {\n      Pagination,\n    } = this.context;\n\n    const {\n      page,\n      withPagination,\n      data: {\n        objectsConnection,\n        loading,\n        variables: {\n          first: limit,\n        },\n      },\n    } = this.props;\n\n\n    const {\n      edges,\n      aggregate,\n    } = objectsConnection || {};\n\n    const {\n      count = 0,\n    } = aggregate || {};\n\n\n    if (!edges || !edges.length) {\n\n      // if (loading) {\n      //   return null;\n      // }\n      // else {\n      //   content = <Typography>\n      //     Данные не были получены\n      //   </Typography>\n      // }\n\n    }\n\n\n    return <Fragment>\n\n      {super.render()}\n\n      {withPagination ? <Grid\n        container\n        spacing={0}\n      >\n\n        {edges && edges.length ? <Grid\n          item\n          xs={12}\n\n        >\n          <Pagination\n            limit={limit}\n            total={count}\n            page={page || 1}\n            style={{\n              marginTop: 20,\n            }}\n          />\n        </Grid> : null\n        }\n\n      </Grid> : null\n      }\n\n    </Fragment>;\n\n  }\n\n\n}\n\nexport {\n  customStyles as styles,\n  ObjectsListView as TableView,\n}\n\nexport default withStyles(customStyles)(ObjectsListView);","\nimport React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport PageLayout from '../layout';\n\nimport Typography from 'material-ui/Typography';\n\nexport default class PageNotFound extends PageLayout {\n\n  static propTypes = {\n    ...PageLayout.propTypes,\n    title: PropTypes.string.isRequired,\n  }\n\n  static defaultProps = {\n    ...PageLayout.defaultProps,\n    title: \"Page not found\",\n  }\n\n\n  setPageMeta(meta = {}) {\n\n    const {\n      title,\n    } = this.props;\n\n    return super.setPageMeta({\n      status: 404,\n      title: title,\n    })\n  }\n\n\n  render() {\n\n    const {\n      title,\n    } = this.props;\n\n    return super.render(<Typography\n      variant=\"title\"\n      style={{\n        textAlign: \"center\",\n        margin: \"50px 0\",\n      }}\n    >\n      {title}\n    </Typography>)\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport withStyles from \"material-ui/styles/withStyles\";\nimport Typography from \"material-ui/Typography\";\nimport Grid from \"material-ui/Grid\";\nimport Button from \"material-ui/Button\";\n\nimport moment from \"moment\";\n\nimport Header from \"./header\";\n\nimport {\n  styles,\n  TableView,\n} from \"../../List\";\n\nimport {\n  BlogLink,\n  UserLink,\n  TopicLink,\n  TagLink,\n} from \"@modxclub/ui\";\n\nimport PageNotFound from \"../../../pages/404\";\n\nimport Filters from \"@prisma-cms/filters\";\n\nlet customStyles = theme => {\n\n  const {\n    palette: {\n      background: {\n        default: defaultBackground,\n      },\n    },\n  } = theme;\n\n  return {\n    ...styles(),\n\n    tags: {\n      marginTop: 5,\n    },\n\n    usersWrapper: {\n      whiteSpace: \"nowrap\",\n      display: \"flex\",\n      alignItems: \"end\",\n    },\n    member: {\n      padding: 2,\n    },\n    topicColumn: {\n      width: \"70%\",\n    },\n    alignCenter: {\n      textAlign: \"center\",\n    },\n  }\n\n}\n\n\nclass ForumView extends TableView {\n\n\n  static propTypes = {\n    ...TableView.propTypes,\n    filters: PropTypes.object,\n    setFilters: PropTypes.func,\n  };\n\n  static defaultProps = {\n    ...TableView.defaultProps,\n    title: \"\",\n    columnData: [],\n    // Header,\n    // Toolbar: () => (null),\n  }\n\n\n\n  // constructor(props) {\n\n  //   super(props);\n\n\n\n  // }\n\n\n\n  getColumns() {\n\n    const {\n      classes,\n      data: {\n        variables: {\n          where,\n        },\n      },\n    } = this.props;\n\n\n    const {\n      tag: activeTag,\n    } = where || {};\n\n    let columns = [\n      {\n        id: \"topic\",\n        label: \"Топик\",\n        className: classes.topicColumn,\n        renderer: (value, record) => {\n\n\n\n          const {\n            id: topicId,\n            name,\n            uri,\n            Tags,\n          } = record;\n\n\n          let tagsList = [];\n\n\n\n          Tags && Tags.map(tag => {\n\n            const {\n              Tag,\n            } = tag;\n\n            const {\n              id,\n              name,\n            } = Tag;\n\n            tagsList.push(<TagLink\n              key={id}\n              object={Tag}\n              color=\"textSecondary\"\n              className={[classes.tag].join(\" \")}\n              textClassName={[activeTag === name ? \"active\" : \"\"].join(\" \")}\n            />);\n          });\n\n          return <div>\n\n            <TopicLink\n              object={record}\n            >\n              <Typography\n                variant=\"subheading\"\n              >\n                {name}\n              </Typography>\n            </TopicLink>\n\n            <div\n              className={classes.tags}\n            >\n              {tagsList}\n            </div>\n          </div>;\n        },\n      },\n      {\n        id: \"Blog\",\n        label: \"Блог\",\n        className: classes.alignCenter,\n        renderer: (value, record) => {\n\n          if (!value) {\n            return null;\n          }\n\n          const {\n            id: blogId,\n            name,\n          } = value;\n\n\n          // return value && <BlogLink\n          //   object={value}\n          // >\n          //   <Button\n          //     size=\"small\"\n          //     color=\"secondary\"\n          //   // noWrap={false}\n          //   >\n          //     {name}\n          //   </Button>\n          // </BlogLink> || null;\n\n          return value && <BlogLink\n            object={value}\n            variant=\"button\"\n          >\n            {name}\n          </BlogLink> || null;\n        },\n      },\n      {\n        id: \"users\",\n        label: \"Участники\",\n        className: classes.alignCenter,\n        renderer: (value, record) => {\n\n          let users = [];\n\n          const {\n            CreatedBy,\n            Comments,\n          } = record;\n\n          let limit = 5;\n\n          Comments && Comments.map(n => {\n\n            const {\n              CreatedBy,\n            } = n;\n\n            if (users.length >= limit || users.findIndex(n => n.id === CreatedBy.id) !== -1) {\n              return;\n            }\n\n            users.push(CreatedBy);\n\n          });\n\n\n          if (users.length < limit && users.findIndex(n => n.id === CreatedBy.id) === -1) {\n            users.push(CreatedBy);\n          }\n\n          return <div\n            className={classes.usersWrapper}\n          >\n            {users.map(n => {\n\n              const {\n                id,\n              } = n;\n\n              return <UserLink\n                key={id}\n                user={n}\n                showName={false}\n                size=\"small\"\n                className={classes.member}\n              />\n\n            })}\n          </div>;\n        },\n      },\n      {\n        id: \"Comments\",\n        label: \"Комментарии\",\n        className: classes.alignCenter,\n        renderer: (value, record) => {\n\n          return value && value.length || 0;\n        },\n      },\n      {\n        id: \"activity\",\n        label: \"Активность\",\n        className: classes.alignCenter,\n        renderer: (value, record) => {\n\n          let activity;\n\n          const {\n            updatedAt,\n            Comments,\n          } = record;\n\n          let date = moment(updatedAt);\n\n\n          let latestComment = Comments.length && Comments[Comments.length - 1];\n\n          if (latestComment) {\n\n            const commentDate = moment(latestComment.updatedAt);\n\n            if (commentDate > date) {\n              date = commentDate;\n            }\n\n          }\n\n\n          return date.fromNow();\n        },\n      },\n    ]\n\n    return columns;\n\n  }\n\n\n  async componentDidMount() {\n\n    const {\n      data,\n    } = this.props;\n\n    if (data && !data.loading) {\n      await data.refetch && data.refetch();\n    }\n\n    super.componentDidMount && super.componentDidMount();\n  }\n\n\n  renderFilters() {\n\n    const {\n      filters,\n      setFilters,\n    } = this.props;\n\n    return filters && setFilters ? <Filters\n      queryName=\"resources\"\n      filters={filters}\n      setFilters={setFilters}\n    /> : null;\n  }\n\n  render() {\n\n\n    const {\n      data,\n      ...other\n    } = this.props;\n\n\n    const {\n      objectsConnection,\n      loading,\n    } = data;\n\n    if (!objectsConnection || !objectsConnection.edges.length) {\n      // if (loading) {\n      //   return null;\n      // }\n      // else {\n      //   return <PageNotFound\n      //     title=\"Топики не были получены\"\n      //   />\n      // }\n    }\n\n    return super.render();\n  }\n\n}\n\n\nexport {\n  customStyles as styles,\n  ForumView as TableView,\n}\n\n\nexport default withStyles(customStyles)(props => <ForumView\n  {...props}\n/>);","\nimport React from \"react\";\n\nimport gql from \"graphql-tag\";\n\nimport { graphql, compose } from \"react-apollo\";\n\n\nimport {\n  ResourceNoNestingFragment,\n  UserNoNestingFragment,\n} from \"../../../schema/generated/api.fragments\";\n\n\nexport const topicFragment = `\n  fragment topicFragment on Resource{\n    ...ResourceNoNesting\n    CreatedBy{\n      ...UserNoNesting\n    }\n    Comments(\n      orderBy: id_ASC\n    ){\n      id\n      uri\n      createdAt\n      updatedAt\n      content @include(if:$getCommentsText)\n      CreatedBy{\n        ...UserNoNesting\n      }\n    }\n    Blog{\n      id\n      name\n      longtitle\n      uri\n    }\n    Tags{\n      Tag{\n        id\n        name\n      }\n    }\n  }\n \n\n  ${ResourceNoNestingFragment}\n  ${UserNoNestingFragment}\n`\n\n\nexport const topicsListFragment = `\n  fragment topicsListFragment on Resource{\n    ...topicFragment\n  }\n\n  ${topicFragment}\n`;\n\n\nexport const topicsFullFragment = `\n  fragment topicsFullFragment on Resource{\n    ...topicFragment\n    content\n  }\n\n  ${topicFragment}\n`;\n\n\nexport const topicsConnectionQuery = gql`\n\n  query topicsConnection(\n    $first:Int!\n    $skip:Int\n    $where:  ResourceWhereInput\n    $orderBy:  ResourceOrderByInput!\n    $getCommentsText:Boolean = false\n  ){\n    objectsConnection: resourcesConnection(\n      orderBy: $orderBy\n      first: $first\n      skip: $skip\n      where: $where\n    ){\n      aggregate{\n        count\n      }\n      edges{\n        node{\n          ...topicsListFragment\n        }\n      }\n    }\n  }\n\n  ${topicsListFragment}\n\n`;\n\n\nexport const topicQuery = gql`\n\n  query topic(\n    $where: ResourceWhereUniqueInput!\n    $getCommentsText:Boolean = true\n  ){\n    object: resource(\n      where: $where\n    ){ \n      ...topicsFullFragment\n    }\n  }\n\n  ${topicsFullFragment}\n\n`;\n\n\nexport const createTopicProcessor = gql`\n \n\n  mutation createTopicProcessor(\n    $data:TopicCreateInput!\n    $getCommentsText:Boolean = true\n  ){\n    response: createTopicProcessor(\n      data: $data\n    ){\n      success\n      message\n      errors{\n        key\n        message\n      }\n      data{\n        ...topicsFullFragment\n      }\n    }\n  }\n\n  ${topicsFullFragment}\n\n`;\n\n\nexport const updateTopicProcessor = gql`\n \n\n  mutation updateTopicProcessor(\n    $data: TopicUpdateInput!\n    $where: ResourceWhereUniqueInput!\n    $getCommentsText:Boolean = true\n  ){\n    response: updateTopicProcessor(\n      data: $data\n      where: $where\n    ){\n      success\n      message\n      errors{\n        key\n        message\n      }\n      data{\n        ...topicsFullFragment\n      }\n    }\n  }\n\n  ${topicsFullFragment}\n\n`;\n\n\n\n\nconst TopicsQuery = graphql(topicsConnectionQuery);\n\nexport const TopicsConnector = TopicsQuery(props => {\n\n  const {\n    View,\n    ...other\n  } = props;\n\n  return <View\n    {...other}\n  />;\n});\n\n\nconst TopicQuery = compose(graphql(topicQuery), graphql(updateTopicProcessor));\n\n\nexport const TopicConnector = TopicQuery(props => {\n\n  const {\n    View,\n    ...other\n  } = props;\n\n  return <View\n    {...other}\n  />;\n});\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\n// import PrismaCmsComponent from \"@prisma-cms/component\";\nimport Context from \"@prisma-cms/context\";\n\n\n// import gql from \"graphql-tag\";\n\n// import { graphql } from \"react-apollo\";\n\nimport View from \"./view\";\n\n\nimport {\n  TopicsConnector,\n} from \"../../pages/Topics/query\";\n\n\nexport class ForumConnector extends Component {\n\n\n  static propTypes = {\n    View: PropTypes.func.isRequired,\n    first: PropTypes.number.isRequired,\n    orderBy: PropTypes.string.isRequired,\n    tagName: PropTypes.string,\n    where: PropTypes.object,\n    getCommentsText: PropTypes.bool.isRequired,\n  };\n\n\n  static defaultProps = {\n    View,\n    first: 12,\n    // where: null,\n    orderBy: \"updatedAt_DESC\",\n    getCommentsText: false,\n  }\n\n\n  static contextType = Context;\n\n\n  constructor(props) {\n\n    super(props);\n\n  }\n\n\n  setFilters(filters) {\n\n    const {\n      uri,\n      router: {\n        history,\n      },\n    } = this.context;\n\n\n\n    let newUri = uri.clone();\n\n    try {\n\n      filters = filters ? JSON.stringify(filters) : undefined;\n    }\n    catch (error) {\n      console.error(error);\n    }\n\n    if (filters) {\n\n      if (newUri.hasQuery) {\n        newUri = newUri.setQuery({\n          filters,\n        });\n      }\n      else {\n        newUri = newUri.addQuery({\n          filters,\n        });\n      }\n\n    }\n    else {\n\n      newUri.removeQuery(\"filters\");\n\n    }\n\n    newUri.removeQuery(\"page\");\n\n\n    const url = newUri.resource();\n\n\n\n    history.push(url);\n\n  }\n\n\n  render() {\n\n    const {\n      first,\n      tagName,\n      where: propsWhere,\n      ...other\n    } = this.props;\n\n    const {\n      uri,\n    } = this.context;\n\n\n    let {\n      page,\n      filters,\n    } = uri.query(true);\n\n    try {\n      filters = filters && JSON.parse(filters) || null;\n    }\n    catch (error) {\n      console.error(console.error(error));\n    }\n\n    let skip;\n\n    page = page && parseInt(page) || 0;\n\n    if (first && page > 1) {\n      skip = (page - 1) * first;\n    }\n\n    let AND = [];\n\n    if (propsWhere) {\n      AND.push(propsWhere);\n    }\n\n\n    if (tagName) {\n      AND.push({\n        tag: tagName,\n      });\n    }\n\n    if (filters) {\n      AND.push(filters);\n    }\n\n\n    let where = {\n      type: \"Topic\",\n      AND,\n    }\n\n\n\n\n\n    return (\n      <TopicsConnector\n        first={first}\n        skip={skip}\n        page={page}\n        where={where}\n        filters={filters || {}}\n        setFilters={filters => this.setFilters(filters)}\n        {...other}\n      />\n    );\n  }\n}\n\n\nexport default ForumConnector;","import React, { Component } from 'react';\n\nimport Page from '../layout';\n\nimport Forum from \"../../view/forum\"\n\n\nexport class TopicsPage extends Page {\n\n\n\tsetPageMeta(meta = {}) {\n\n\t\treturn super.setPageMeta({\n\t\t\ttitle: \"Публикации\",\n\t\t});\n\n\t}\n\n\n\trender() {\n\n\t\tconst {\n\t\t\t...other\n\t\t} = this.props;\n\n\n\t\tconst {\n\t\t\tgetQueryFragment,\n\t\t} = this.context;\n\n\t\treturn super.render(<Forum\n\t\t\tgetQueryFragment={getQueryFragment}\n\t\t\t{...other}\n\t\t/>)\n\t}\n\n}\n\nexport default TopicsPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// import Comment from \"./Comment\";\n\nimport Typography from 'material-ui/Typography'\n\nimport {\n  createCommentProcessor,\n  updateCommentProcessor,\n} from \"@modxclub/ui/src/Comments/query.js\";\n\nimport { graphql } from \"react-apollo\";\n\n\nimport Comment from \"@modxclub/ui/src/Comments/Comment\";\nconst NewComment = graphql(createCommentProcessor)(Comment);\nconst UpdateComment = graphql(updateCommentProcessor)(Comment);\n\n\nclass TopicComments extends Component {\n\n\n  static propTypes = {\n    topic: PropTypes.object.isRequired,\n  };\n\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      ...this.state,\n      commentData: {\n        object: {},\n      },\n    };\n\n  }\n\n\n  render() {\n\n\n    const {\n      topic,\n    } = this.props;\n\n\n    if (!topic) {\n      return null;\n    }\n\n    const {\n      commentData,\n    } = this.state;\n\n    const {\n      id: topicId,\n      Comments,\n    } = topic;\n\n\n\n\n    let comments = Comments && Comments.map(n => {\n\n      const {\n        id,\n      } = n;\n\n      return <UpdateComment\n        key={id}\n        data={{\n          object: n,\n        }}\n      />\n    }) || null;\n\n    return <div>\n\n      {comments}\n\n\n      {topicId && commentData\n        ?\n        <NewComment\n          // key={comments.length + \"__comment\"}\n          cacheKey={`${topicId}_comment_new`}\n          data={commentData}\n          _dirty={{\n            content: {\n              \"blocks\": [\n                {\n                  \"text\": \"\",\n                  \"type\": \"unstyled\",\n                  \"depth\": 0,\n                  \"inlineStyleRanges\": [],\n                  \"entityRanges\": [],\n                  \"data\": {}\n                }\n              ],\n              \"entityMap\": {}\n            },\n            topicID: topicId,\n          }}\n          onSave={result => {\n\n            console.log(\"result\", result);\n\n            this.setState({\n              commentData: null,\n            }, () => {\n              this.setState({\n                commentData: {\n                  ...commentData,\n                },\n              });\n            });\n\n          }}\n        />\n        :\n        null\n      }\n\n    </div>\n  }\n}\n\n\nexport default TopicComments;","\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'react-router-dom';\n\nimport Context from \"@prisma-cms/context\";\n\nimport ViewIcon from \"material-ui-icons/RemoveRedEye\";\n\nexport default class TopicBlogView extends Component {\n\n  static contextType = Context;\n\n  static propTypes = {\n    getFilters: PropTypes.func.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    updateObject: PropTypes.func.isRequired,\n  }\n\n  state = {\n    opened: false,\n  }\n\n  render() {\n\n    const {\n      BlogLink,\n      Autocomplete,\n    } = this.context;\n\n    const {\n      data: {\n        objects,\n      },\n      value,\n      getFilters,\n      setFilters,\n      updateObject,\n      ...other\n    } = this.props;\n\n    const {\n      opened,\n    } = this.state;\n\n    const {\n      name_contains,\n    } = getFilters() || {};\n\n    const items = objects && objects.map(n => {\n      return {\n        ...n,\n        label: n.name,\n      }\n    }) || []\n\n\n    let object = value ? items.find(n => n.id === value) : null;\n\n    /**\n     * Если есть id компании и нет введенного значения,\n     * то выводим название компании\n     */\n\n    let displayValue = (opened && name_contains) || object && object.name || value;\n\n    return <Autocomplete\n      inputProps={{\n        label: \"Блог\",\n        helperText: \"Укажите в какой блог публикуете\",\n      }}\n      onChange={(event, value) => {\n\n        // this.setState({\n        //   value: value,\n        // }, () => {\n        //   this.loadData();\n        // });\n\n        // onChange && onChange(event, value);\n        setFilters({\n          name_contains: value && value.trim() || undefined,\n        })\n      }}\n      // onSelect={(value, item) => {\n\n      //   // this.loadObjectData(id);\n      //   // this.setState({\n      //   //   object: item,\n      //   // }, () => {\n      //   //   // onChange && onChange(item.id);\n      //   //   onSelect && onSelect(value, item);\n      //   // });\n      // }}\n      onDelete={(event) => {\n        updateObject({\n          blogID: undefined,\n        })\n      }}\n      items={items}\n      value={opened ? (name_contains || \"\") : displayValue || value || \"\"}\n      onMenuVisibilityChange={opened => {\n\n\n        // if (opened && !items.length) {\n        //   this.loadData();\n        // }\n\n        this.setState({\n          opened,\n        });\n\n        // onMenuVisibilityChange && onMenuVisibilityChange(opened);\n      }}\n      // getItemText={(item) => {\n\n      //   const {\n      //     value,\n      //     label,\n      //   } = item;\n\n      //   return label;\n      // }}\n      onSelect={(value, item) => {\n\n        const {\n          id,\n        } = item;\n        updateObject({\n          blogID: id || undefined,\n        })\n      }}\n      viewElement={!opened && object ? <BlogLink\n        object={object}\n        target=\"_blank\"\n      >\n        <ViewIcon />\n      </BlogLink> : undefined}\n      {...other}\n    />;\n  }\n\n}\n\n","\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'react-router-dom';\n\n\nimport PrismaCmsComponent from \"@prisma-cms/component\";\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport View from \"./View\";\nimport { Typography } from 'material-ui';\n\nexport default class TopicBlog extends PrismaCmsComponent {\n\n  static propTypes = {\n    ...PrismaCmsComponent.propTypes,\n    View: PropTypes.func.isRequired,\n    first: PropTypes.number,\n    updateObject: PropTypes.func.isRequired,\n    Topic: PropTypes.object.isRequired,\n    inEditMode: PropTypes.bool.isRequired,\n  }\n\n  static defaultProps = {\n    ...PrismaCmsComponent.defaultProps,\n    View,\n    first: 20,\n  }\n\n\n  componentWillMount() {\n\n    const {\n      query: {\n        resources,\n      },\n    } = this.context;\n\n    const {\n      View,\n    } = this.props;\n\n    this.Renderer = graphql(gql(resources))(View);\n\n    super.componentWillMount && super.componentWillMount();\n\n  }\n\n  render() {\n\n    const {\n      Renderer,\n    } = this;\n\n    const {\n      BlogLink,\n    } = this.context;\n\n    const {\n      updateObject,\n      Topic,\n      inEditMode,\n    } = this.props;\n\n    if (!Topic) {\n      return null;\n    }\n\n    const {\n      Blog,\n      blogID,\n    } = Topic;\n\n    const {\n      id: blogId,\n    } = Blog || {};\n\n    let value = blogID || blogId || undefined;\n\n    const filters = this.getFilters();\n\n    let content = null;\n\n    if (inEditMode && !Blog) {\n\n      content = <Renderer\n        value={value}\n        getFilters={() => this.getFilters()}\n        setFilters={(filters) => this.setFilters(filters)}\n        updateObject={updateObject}\n        where={{\n          ...filters,\n          type: \"Blog\",\n        }}\n        orderBy=\"name_ASC\"\n      // onChange={(event, value) => {\n\n      //   this.setFilters({\n      //     name_contains: value && value.trim() || undefined,\n      //   })\n      // }}\n      />;\n\n    }\n    else if (Blog) {\n      content = <Typography>\n        В блоге <BlogLink\n          object={Blog}\n        />\n      </Typography>\n    }\n\n    return content;\n  }\n\n}\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport EditableView from 'apollo-cms/lib/DataView/Object/Editable';\n\n// import Card, {\n//   CardHeader,\n//   CardContent,\n//   CardMedia,\n//   CardActions,\n// } from 'material-ui/Card';\n\nimport TextField from 'material-ui/TextField';\nimport withStyles from 'material-ui/styles/withStyles';\n\nimport moment from \"moment\";\n\nimport {\n  TopicLink,\n  UserLink,\n  BlogLink,\n} from \"@modxclub/ui\"\n\n\n// import TextEditor from \"@modxclub/react-editor\";\nimport Editor from \"@modxclub/react-editor\";\nimport { Typography } from 'material-ui';\n\nimport Grid from \"@prisma-cms/front/lib/modules/ui/Grid\";\n\nimport CommentsView from \"./Comments\";\nimport Blog from \"./Blog\";\n\nconst styles = {\n  root: {\n\n    marginTop: 15,\n    marginBottom: 30,\n\n    '& pre': {\n      whiteSpace: 'pre-line',\n    },\n  },\n  bullet: {\n  },\n  header: {\n    // '& a': {\n    //   textDecoration: 'none',\n    // },\n    marginBottom: 30,\n  },\n}\n\n\nclass TopicView extends EditableView {\n\n\n  static defaultProps = {\n    ...EditableView.defaultProps,\n  }\n\n  canEdit() {\n\n    const {\n      user: currentUser,\n    } = this.context;\n\n    const {\n      id: currentUserId,\n      sudo,\n    } = currentUser || {};\n\n\n    const {\n      id,\n      CreatedBy,\n    } = this.getObjectWithMutations() || {};\n\n\n    const {\n      id: createdById,\n    } = CreatedBy || {}\n\n    return !id || (createdById && createdById === currentUserId) || sudo === true;\n\n  }\n\n\n  getCacheKey() {\n\n    const {\n      id,\n    } = this.getObject() || {};\n\n    return `topic_${id || \"new\"}`;\n  }\n\n\n\n  addMessage = () => {\n\n\n\n  }\n\n\n\n  renderHeader() {\n\n    const {\n      classes,\n    } = this.props;\n\n    const object = this.getObjectWithMutations();\n\n    const {\n      id: topicId,\n      topic_tags,\n      CreatedBy,\n      createdAt,\n    } = object || {}\n\n\n\n    const inEditMode = this.isInEditMode();\n\n    return <div\n      className={classes.header}\n    >\n      <Grid\n        container\n        spacing={16}\n      >\n\n        {CreatedBy\n          ?\n          <Grid\n            item\n          >\n\n            <UserLink\n              user={CreatedBy}\n              showName={false}\n              avatarProps={{\n                size: \"medium\",\n              }}\n            />\n          </Grid>\n          : null\n        }\n\n        <Grid\n          item\n        >\n          {CreatedBy\n            ?\n            <UserLink\n              user={CreatedBy}\n              withAvatar={false}\n            />\n            :\n            null\n          }\n\n          {createdAt ? <Typography\n            variant=\"caption\"\n            color=\"textSecondary\"\n          >\n            {moment(createdAt).format('lll')}\n          </Typography> : null}\n\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n        >\n\n          <Grid\n            container\n            spacing={16}\n            alignItems=\"center\"\n          >\n\n            <Grid\n              item\n              xs\n            >\n\n\n              {inEditMode ? this.getTextField({\n                name: \"name\",\n                label: \"Название топика\",\n                helperText: \"Укажите название топика\",\n              }) :\n                <Typography\n                  variant=\"display1\"\n                  component=\"h1\"\n                >\n                  {this.getTitle()}\n\n                </Typography>\n              }\n\n            </Grid>\n\n            <Grid\n              item\n            >\n\n              <Blog\n                Topic={object}\n                updateObject={data => this.updateObject(data)}\n                inEditMode={inEditMode}\n              />\n\n            </Grid>\n\n            <Grid\n              item\n            >\n              {this.getButtons()}\n\n            </Grid>\n\n\n          </Grid>\n\n\n          {/* {inEditMode && !topicId ? this.getTextField({\n            name: \"topic_tags\",\n            label: \"Теги\",\n            helperText: \"Перечислите теги через запятую\",\n            value: topic_tags && topic_tags.join(\",\") || \"\",\n            onChange: event => {\n\n              const {\n                name,\n                value,\n              } = event.target;\n\n              this.updateObject({\n                [name]: value && value.split(\",\").map(n => n && n.trim() || \"\") || [],\n              });\n\n            }\n          }) : null} */}\n\n        </Grid>\n\n\n      </Grid>\n    </div>\n\n  }\n\n\n  renderDefaultView() {\n\n    const object = this.getObjectWithMutations();\n\n    if (!object) {\n      return null;\n    }\n\n\n\n    const {\n      classes,\n      fullView,\n      ...other\n    } = this.props;\n\n\n    const {\n      errors = [],\n    } = this.state;\n\n    const {\n      id,\n      CreatedBy,\n      createdAt,\n      Blog,\n      name,\n      content,\n    } = object;\n\n    const date = createdAt;\n\n    const inEditMode = this.isInEditMode();\n\n    const allow_edit = this.canEdit();\n\n    return <div\n      className={classes.root}\n    >\n\n      {/* {inEditMode !== true ?\n        <div\n          className={classes.header}\n          avatar={<UserLink\n            user={CreatedBy}\n          />}\n          title={<TopicLink\n            object={object}\n            className=\"Card--title\"\n          />}\n          subheader={<div>{(date ? moment(date).format('YYYY.MM.DD HH:mm') + \" \" : null)}\n            {Blog ? <BlogLink\n              object={Blog}\n            /> : null}\n          </div>}\n        >\n\n\n        </div>\n        :\n        <div>\n          <TextField\n          // name=\"name\"\n          // value={name}\n          // label=\"Название топика\"\n          // error={errors.name && errors.name != \"\"}\n          // onFocus={() => { this.clearError() }}\n          // onChange={(e, value) => { this.onChangename(e, value) }}\n          />\n        </div>\n      } */}\n\n      <div>\n\n        <Editor\n          className=\"topic-editor\"\n          content={content}\n          inEditMode={inEditMode || false}\n          readOnly={inEditMode ? false : true}\n          fullView={true}\n          allow_edit={allow_edit}\n          onChange={(rawContent) => {\n\n\n\n            this.updateObject({\n              content: rawContent,\n            });\n\n          }}\n        />\n\n\n      </div>\n\n      <CommentsView\n        topic={object}\n      />\n\n\n      {/* {fullView === true && (id > 0 && inEditMode !== true) ? <ArticleInfoComments\n        comments={comments}\n        user={this.props.user}\n      /> : null} */}\n\n      {/* {fullView === true && (id > 0 && inEditMode !== true) ? <TextEditor\n        inEditMode={true}\n        allow_edit={true}\n        target_id={id}\n        onMessageEdded={this.addMessage}\n        clearOnSave={true}\n      /> : null} */}\n    </div>;\n\n\n  }\n\n\n  renderEditableView() {\n\n    return this.renderDefaultView();\n\n  }\n\n}\n\n\nexport default withStyles(styles)(props => <TopicView\n  {...props}\n/>);","\n\nimport React, { Component } from 'react';\n\nimport PropTypes from \"prop-types\";\n\nimport Page from '../../layout';\n\n\nimport PageNotFound from \"../../404\";\n\n\n\nimport View from \"./view\";\n\nimport { TopicConnector as Connector } from \"../query\";\n\n\nexport class TopicPage extends Page {\n\n\n  static propTypes = {\n    ...Page.propTypes,\n    View: PropTypes.func.isRequired,\n  }\n\n\n  static defaultProps = {\n    ...Page.defaultProps,\n    View,\n  }\n\n  setPageMeta(meta = {}) {\n\n    const {\n      data: {\n        object: topic,\n      },\n    } = this.props;\n\n\n    if (!topic) {\n      return;\n    }\n\n    const {\n      name,\n      longtitle,\n      uri,\n    } = topic;\n\n    return super.setPageMeta({\n      title: longtitle || name,\n      canonical: uri,\n      ...meta,\n    });\n\n  }\n\n\n  render() {\n\n    const {\n      View,\n      data,\n      ...other\n    } = this.props;\n\n\n    const {\n      object,\n      loading,\n    } = data;\n\n    if (!object) {\n\n      if (loading) {\n        return null;\n      }\n      else {\n        return <PageNotFound \n          title=\"Топик не найден\"\n        />\n      }\n\n    }\n\n    return super.render(<View\n      data={data}\n      onSave={this.onSave}\n      {...other}\n    />);\n\n\n  }\n\n}\n\n\nconst TopicConnector = (props) => {\n\n  const {\n    getCommentsText = true,\n  } = props;\n\n  return <Connector\n    View={TopicPage}\n    getCommentsText={getCommentsText}\n    {...props}\n  />\n\n}\n\n// export default TopicPage;\nexport default TopicConnector;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { graphql, compose } from 'react-apollo';\n\nimport Context from \"@prisma-cms/context\";\n\nimport { TopicPage } from '../';\n\nimport {\n  createTopicProcessor,\n} from \"../../query\";\n\nexport class TopicCreatePage extends TopicPage {\n\n\n\n\n  setPageMeta(meta) {\n\n    return super.setPageMeta({\n      title: \"Добавить топик\",\n    });\n  }\n\n\n  onSave = (result) => {\n\n\n\n    if (result && result.data) {\n\n      const {\n        history,\n      } = this.props;\n\n\n      const {\n        location,\n      } = history;\n\n      const {\n        response: {\n          data: object,\n        },\n      } = result.data || {}\n\n      const {\n        uri,\n      } = object || {};\n\n      if (uri && location.pathname !== uri) {\n\n        history.replace(uri);\n      }\n\n    }\n\n  }\n\n\n  // componentWillMount() {\n\n  //   const {\n  //     View,\n  //   } = this.props;\n\n\n  //   const Renderer = compose(\n  //     graphql(createTopic, {\n  //     }),\n\n  //   )(View);\n\n  //   Object.assign(this.state, {\n  //     Renderer,\n  //     data: {\n  //       object: {},\n  //     },\n  //   });\n\n  //   super.componentWillMount && super.componentWillMount();\n\n  // }\n\n\n  // render() {\n\n  //   const {\n  //     View,\n  //     ...other\n  //   } = this.props;\n\n\n  //   const {\n  //     Renderer,\n  //     data,\n  //   } = this.state;\n\n\n  //   const {\n  //     location: {\n  //       search: {\n  //         name,\n  //         place,\n  //         parent,\n  //       },\n  //     },\n  //   } = this.context;\n\n\n  //   return <Renderer\n  //     data={data}\n  //     onSave={result => this.onSave(result)}\n  //     _dirty={{\n  //       name,\n  //       parent,\n  //       place: place ? {\n  //         id: place,\n  //       } : undefined,\n  //     }}\n  //     {...other}\n  //   />\n\n  // }\n\n}\n\n\n\n\nexport class CreatePage extends Component {\n\n\n  static contextType = Context;\n\n  render() {\n\n    const {\n      user: currentUser,\n      uri,\n    } = this.context;\n\n\n    const {\n      blogID,\n    } = uri.query(true);\n\n\n    return <TopicCreatePage\n      {...this.props}\n      data={{\n        object: {\n          CreatedBy: currentUser,\n        },\n      }}\n      _dirty={{\n        name: \"\",\n        topic_tags: [],\n        content: [],\n        blogID,\n      }}\n    />;\n\n  }\n}\n\nexport default graphql(createTopicProcessor)(CreatePage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport EditableView from 'apollo-cms/lib/DataView/Object/Editable';\n\nimport Forum from \"../../../../view/forum\"\n\nclass TagView extends EditableView {\n\n\n  canEdit() {\n\n    // const {\n    //   user: currentUser,\n    // } = this.context;\n\n    // const {\n    //   id: currentUserId,\n    //   sudo,\n    // } = currentUser || {};\n\n\n    // const {\n    //   id,\n    // } = this.getObjectWithMutations() || {};\n\n    // return !id || sudo === true;\n\n    return false;\n\n  }\n\n\n\n\n  getTitle() {\n\n    const object = this.getObjectWithMutations();\n\n    const {\n      name,\n    } = object || {};\n\n    return name && `Топики с тегом \"${name}\"` || null;\n\n  }\n\n\n  renderDefaultView() {\n\n\n    const {\n      where,\n      ...other\n    } = this.props;\n\n\n\n    const {\n      name: tagName,\n    } = this.getObjectWithMutations();\n\n\n    let forum = null;\n\n    if (tagName) {\n      forum = <Forum\n        where={{\n          Tags_some: {\n            Tag: {\n              name: tagName,\n            },\n          },\n        }}\n        {...other}\n      />\n    }\n\n    return forum\n\n  }\n\n  renderEditableView() {\n\n    return this.renderDefaultView();\n  }\n\n\n}\n\n\nexport default TagView;","\n\nimport React, { Component } from 'react';\n\nimport PropTypes from \"prop-types\";\n\nimport Page from '../../layout';\n\n\n// import Forum from \"../../../view/forum\"\n\nimport View from \"./View\";\n\nexport class TagPage extends Page {\n\n\n  static propTypes = {\n    ...Page.propTypes,\n    View: PropTypes.func.isRequired,\n    tagName: PropTypes.string.isRequired,\n  }\n\n\n  static defaultProps = {\n    ...Page.defaultProps,\n    View,\n  }\n\n  setPageMeta(meta = {}) {\n\n    const {\n      tagName,\n    } = this.props;\n\n    return super.setPageMeta({\n      title: `Топики с тегом \"${tagName}\"`,\n    });\n\n  }\n\n\n  render() {\n\n    const {\n      tagName,\n      View,\n      ...other\n    } = this.props;\n \n\n    return super.render(<View\n      data={{\n        object: {\n          name: tagName,\n        },\n      }}\n      {...other}\n    />)\n\n    // return super.render(<Forum\n    //   tagName={tagName}\n    //   {...other}\n    // />)\n  }\n\n}\n\nexport default TagPage;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport { withStyles } from 'material-ui/styles';\n\n\n// import gql from 'graphql-tag';\n\nimport {\n  styles,\n  TableView,\n} from '../../../../view/List';\n\nclass BlogsPageView extends TableView {\n\n\n  static defaultProps = {\n    ...TableView.defaultProps,\n    title: \"Блоги\",\n  };\n\n\n  getColumns() {\n\n    const {\n      ChatMessageLink,\n      ChatRoomLink,\n      UserLink,\n      Grid,\n      BlogLink,\n    } = this.context;\n\n    return [\n      // {\n      //   id: \"id\",\n      // },\n      // {\n      //   id: \"id\",\n      //   label: \"ID сообщения\",\n      //   renderer: (value, record) => {\n\n      //     return record ? <ChatMessageLink\n      //       object={record}\n      //     /> : null;\n      //   },\n      // },\n      {\n        id: \"name\",\n        label: \"Название\",\n        renderer: (value, record) => {\n\n          return record ? <BlogLink\n            object={record}\n          /> : null;\n        },\n      },\n      {\n        id: \"CreatedBy\",\n        label: \"Автор\",\n        renderer: (value) => {\n\n          return value ? <UserLink\n            user={value}\n          /> : null;\n        },\n      },\n    ]\n\n  }\n\n  // renderContent() {\n\n  //   const {\n  //     data: {\n  //       loading,\n  //       objectsConnection,\n  //     },\n  //     classes,\n  //   } = this.props;\n\n  //   const {\n  //     Grid,\n  //     query: {\n  //       updateChatMessageProcessor,\n  //     },\n  //   } = this.context;\n\n\n  //   let messages = objectsConnection && objectsConnection.edges.map(({ node }) => node) || [];\n\n\n  //   let messagesList = <Grid\n  //     container\n  //   >\n  //     {messages.map(n => {\n\n  //       return <Grid\n  //         key={n.id}\n  //         item\n  //         xs={12}\n  //       >\n  //         <ChatMessage\n  //           data={{\n  //             object: n,\n  //           }}\n  //           mutate={props => {\n\n  //             return this.mutate({\n  //               mutation: gql(updateChatMessageProcessor),\n  //               ...props\n  //             });\n  //           }}\n  //         />\n  //       </Grid>\n\n  //     })}\n  //   </Grid>\n\n  //   return <div\n  //     className={classes.root}\n  //   >\n  //     {messagesList}\n  //   </div>;\n\n  // }\n\n}\n\n\nexport default withStyles(styles)(props => <BlogsPageView\n  {...props}\n/>);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../layout\";\n\nclass ListPageLayout extends Page {\n  \n}\n \n\nexport default ListPageLayout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\n\n\nimport View from \"./View/List\";\n\nimport ListPage from \"../List\";\n\n\nclass BlogsPage extends ListPage {\n\n\n  static propTypes = {\n    ...ListPage.propTypes,\n    View: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    ...ListPage.defaultProps,\n    View,\n    first: 10,\n    orderBy: \"name_ASC\",\n  }\n\n\n  componentWillMount() {\n\n    const {\n      query: {\n        resourcesConnection,\n      },\n    } = this.context;\n\n    const {\n      View,\n    } = this.props;\n\n    this.Renderer = graphql(gql(resourcesConnection))(View);\n\n    super.componentWillMount && super.componentWillMount();\n  }\n\n\n  setPageMeta(meta) {\n\n    return super.setPageMeta({\n      title: \"Блоги\",\n      ...meta,\n    });\n  }\n\n\n\n  render() {\n\n    const {\n      Renderer,\n    } = this;\n\n    const {\n      View,\n      where,\n      ...other\n    } = this.props;\n\n    const filters = this.getFilters();\n\n    return <Renderer\n      where={{\n        AND: [\n          {\n            type_in: [\"Blog\", \"PersonalBlog\"],\n          },\n          {\n            ...where\n          },\n        ],\n        ...filters,\n      }}\n      {...this.getPaginationParams()}\n      {...other}\n        addObject={() => {\n          const {\n            router: {\n              history,\n            },\n          } = this.context;\n          history.push(`/blogs/create`);\n        }}\n    />\n  }\n}\n\n\nexport default BlogsPage; ","\nimport React from \"react\";\n\nimport gql from \"graphql-tag\";\n\nimport { graphql } from \"react-apollo\";\n\nimport {\n  UserNoNestingFragment,\n  ResourceNoNestingFragment,\n} from \"../../../schema/generated/api.fragments\";\n\n\n\nexport const blogFragment = `\n  fragment blogFragment on Resource{\n    ...ResourceNoNesting\n    CreatedBy{\n      ...UserNoNesting\n    }\n  }\n  ${ResourceNoNestingFragment}\n  ${UserNoNestingFragment}\n`;\n\n\nexport const blogsListFragment = `\n  fragment blogsListFragment on Resource{\n    ...blogFields\n  }\n  ${blogFragment}\n`;\n\nexport const blogFullFragment = `\n  fragment blogFullFragment on Resource{\n    ...blogFragment\n  }\n  ${blogFragment}\n`;\n\n\nexport const blogsConnectionQuery = gql`\n\n  query blogsConnection(\n    $first:Int!\n    $skip:Int\n    $where: ResourceWhereInput\n    $orderBy: ResourceOrderByInput!\n  ){\n    objectsConnection: blogsConnection(\n      orderBy: $orderBy\n      first: $first\n      skip: $skip\n      where: $where\n    ){\n      aggregate{\n        count\n      }\n      edges{\n        node{\n          ...blogsListFragment\n        }\n      }\n    }\n  }\n\n  ${blogsListFragment}\n\n`;\n\n\n\nexport const blogQuery = gql`\n\n  query blog(\n    $where: ResourceWhereUniqueInput!\n  ){\n    object: resource(\n      where: $where\n    ){ \n      ...blogFullFragment\n    }\n  }\n\n  ${blogFullFragment}\n\n`;\n\n\n\n\nconst BlogsQuery = graphql(blogsConnectionQuery);\n\nexport const BlogsConnector = BlogsQuery(props => {\n\n  const {\n    View,\n    ...other\n  } = props;\n\n  return <View\n    {...other}\n  />;\n});\n\n\nconst BlogQuery = graphql(blogQuery);\n\nexport const BlogConnector = BlogQuery(props => {\n\n  const {\n    View,\n    ...other\n  } = props;\n\n  return <View\n    {...other}\n  />;\n});\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport moment from \"moment\";\n\nimport EditableView from 'apollo-cms/lib/DataView/Object/Editable';\n\nimport Forum from \"../../../../view/forum\"\nimport { Typography } from 'material-ui';\nimport { withStyles } from 'material-ui';\n\n\nconst styles = {\n  root: {\n\n    marginTop: 15,\n    marginBottom: 30,\n\n    '& pre': {\n      whiteSpace: 'pre-line',\n    },\n  },\n  bullet: {\n  },\n  header: {\n    // '& a': {\n    //   textDecoration: 'none',\n    // },\n    marginBottom: 30,\n  },\n}\n\nclass BlogView extends EditableView {\n\n\n  canEdit() {\n\n    const {\n      user: currentUser,\n    } = this.context;\n\n    const {\n      id: currentUserId,\n      sudo,\n    } = currentUser || {};\n\n\n    const {\n      id,\n      CreatedBy,\n    } = this.getObjectWithMutations() || {};\n\n\n    const {\n      id: createdById,\n    } = CreatedBy || {}\n\n    return !id || (createdById && createdById === currentUserId) || sudo === true;\n\n  }\n\n\n\n  // getTitle() {\n\n  //   // const object = this.getObjectWithMutations();\n\n  //   // const {\n  //   //   name,\n  //   // } = object || {};\n\n  //   // return name && `Топики в блоге \"${name}\"` || null;\n\n  //   return null;\n  // }\n\n\n\n  renderHeader() {\n\n    const {\n      Grid,\n      UserLink,\n    } = this.context;\n\n    const {\n      classes,\n    } = this.props;\n\n    const object = this.getObjectWithMutations();\n\n    const {\n      id: topicId,\n      topic_tags,\n      CreatedBy,\n      createdAt,\n    } = object || {}\n\n\n\n    const inEditMode = this.isInEditMode();\n\n    return <div\n      className={classes.header}\n    >\n      <Grid\n        container\n        spacing={16}\n      >\n\n        {CreatedBy\n          ?\n          <Grid\n            item\n          >\n\n            <UserLink\n              user={CreatedBy}\n              showName={false}\n              avatarProps={{\n                size: \"medium\",\n              }}\n            />\n          </Grid>\n          : null\n        }\n\n        <Grid\n          item\n        >\n          {CreatedBy\n            ?\n            <UserLink\n              user={CreatedBy}\n              withAvatar={false}\n            />\n            :\n            null\n          }\n\n          {createdAt ? <Typography\n            variant=\"caption\"\n            color=\"textSecondary\"\n          >\n            {moment(createdAt).format('lll')}\n          </Typography> : null}\n\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n        >\n\n          <Grid\n            container\n            spacing={16}\n            alignItems=\"center\"\n          >\n\n            <Grid\n              item\n              xs\n            >\n\n\n              {inEditMode ? this.getTextField({\n                name: \"name\",\n                label: \"Название блога\",\n                helperText: \"Укажите название блога\",\n              }) :\n                <Typography\n                  variant=\"display1\"\n                  component=\"h1\"\n                >\n                  {this.getTitle()}\n\n                </Typography>\n              }\n\n            </Grid>\n\n            <Grid\n              item\n            >\n              {this.getButtons()}\n\n            </Grid>\n\n\n          </Grid>\n\n\n          {/* {inEditMode && !topicId ? this.getTextField({\n            name: \"topic_tags\",\n            label: \"Теги\",\n            helperText: \"Перечислите теги через запятую\",\n            value: topic_tags && topic_tags.join(\",\") || \"\",\n            onChange: event => {\n\n              const {\n                name,\n                value,\n              } = event.target;\n\n              this.updateObject({\n                [name]: value && value.split(\",\").map(n => n && n.trim() || \"\") || [],\n              });\n\n            }\n          }) : null} */}\n\n        </Grid>\n\n\n      </Grid>\n    </div>\n\n  }\n\n\n\n  renderDefaultView() {\n\n\n    const {\n      where,\n      classes,\n      ...other\n    } = this.props;\n\n\n    // const {\n    //   data: {\n    //     object: blog,\n    //     loading,\n    //   },\n    // } = this.props;\n\n\n    const {\n      id: blogId,\n      name,\n      type,\n    } = this.getObjectWithMutations();\n\n\n    let forum = null;\n\n    if (blogId) {\n      forum = <Forum\n        title={name && <Typography\n          variant=\"subheading\"\n        >\n          {`Топики в блоге \"${name}\"`}\n        </Typography> || undefined}\n        where={{\n          Blog: {\n            id: blogId,\n          },\n        }}\n        {...other}\n        addObject={type === \"Blog\" ? () => {\n          const {\n            router: {\n              history,\n            },\n          } = this.context;\n          history.push(`/add-topic.html?blogID=${blogId}`);\n        } : undefined}\n      />\n    }\n\n    return forum\n\n  }\n\n  renderEditableView() {\n\n    return this.renderDefaultView();\n  }\n\n\n}\n\n\nexport default withStyles(styles)(props => <BlogView {...props} />);","\n\nimport React, { Component } from 'react';\n\nimport PropTypes from \"prop-types\";\n\nimport Page from '../../layout';\n\nimport PageNotFound from \"../../404\";\n\n\nimport { BlogConnector } from \"../query\";\n\nimport View from \"./View\";\nimport gql from 'graphql-tag';\n\nexport class BlogPage extends Page {\n\n\n  static propTypes = {\n    ...Page.propTypes,\n    View: PropTypes.func.isRequired,\n  }\n\n\n  static defaultProps = {\n    ...Page.defaultProps,\n    View,\n  }\n\n\n  setPageMeta(meta = {}) {\n\n    const {\n      data: {\n        object: blog,\n      },\n    } = this.props;\n\n    if (!blog) {\n      return;\n    }\n\n    const {\n      name: blogName,\n      uri,\n    } = blog;\n\n    return super.setPageMeta({\n      title: `Топики в блоге \"${blogName}\"`,\n      canonical: uri,\n    });\n\n  }\n\n\n\n  mutate = (options) => {\n\n    const {\n      query: {\n        updateBlogProcessor\n      },\n      client,\n    } = this.context;\n\n    return client.mutate({\n      mutation: gql(updateBlogProcessor),\n      ...options,\n    });\n\n  }\n\n\n  render() {\n\n    const {\n      data,\n      View,\n      ...other\n    } = this.props;\n\n\n    const {\n      object: blog,\n      loading,\n    } = data;\n\n    let output = null;\n\n\n    if (!blog) {\n\n      if (loading) {\n        output = null;\n      }\n      else {\n        return <PageNotFound\n          title=\"Блог не найден\"\n        />\n      }\n\n    }\n    else {\n      output = <View\n        data={data}\n        onSave={this.onSave}\n        mutate={this.mutate}\n        {...other}\n      />\n    }\n\n    return super.render(output)\n\n  }\n\n}\n\nexport default (props) => {\n\n  return <BlogConnector\n    View={BlogPage}\n    {...props}\n  />\n};\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { graphql, compose } from 'react-apollo';\n\nimport Context from \"@prisma-cms/context\";\n\nimport { BlogPage } from '../';\nimport gql from 'graphql-tag';\n\n// import {\n//   createBlogProcessor,\n// } from \"../../query\";\n\nexport class BlogCreatePage extends BlogPage {\n\n\n\n\n  setPageMeta(meta) {\n\n    return super.setPageMeta({\n      title: \"Добавить блог\",\n    });\n  }\n\n\n  onSave = (result) => {\n\n\n\n    if (result && result.data) {\n\n      const {\n        history,\n      } = this.props;\n\n\n      const {\n        location,\n      } = history;\n\n      const {\n        response: {\n          data: object,\n        },\n      } = result.data || {}\n\n      const {\n        uri,\n      } = object || {};\n\n      if (uri && location.pathname !== uri) {\n\n        history.replace(uri);\n      }\n\n    }\n\n  }\n\n  mutate = (options) => {\n\n    const {\n      query: {\n        createBlogProcessor\n      },\n      client,\n    } = this.context;\n\n    return client.mutate({\n      mutation: gql(createBlogProcessor),\n      ...options,\n    });\n\n  }\n\n\n}\n\n\n\n\nexport class CreatePage extends Component {\n\n\n  // static contextType = Context;\n\n  render() {\n\n\n    return <BlogCreatePage\n      {...this.props}\n      data={{\n        object: {},\n      }}\n      _dirty={{\n        name: \"\",\n      }}\n    />;\n\n  }\n}\n\nexport default CreatePage;\n\n// export default graphql(createBlogProcessor)(CreatePage);\n","\nimport React from \"react\";\n\nimport {\n  ResourceNoNestingFragment,\n  UserNoNestingFragment,\n} from \"../../../schema/generated/api.fragments\";\n\nimport gql from \"graphql-tag\";\n\nimport { graphql, compose } from \"react-apollo\";\n\n\n\nexport const resourceFragment = `\n  fragment resourceFragment on Resource{\n    ...ResourceNoNesting\n\n    CreatedBy{\n      ...UserNoNesting\n    }\n\n    CommentTarget{\n      id\n      name\n      uri\n    }\n    \n  }\n  \n  ${ResourceNoNestingFragment}\n  ${UserNoNestingFragment}\n`\n// parent\n// Topic{\n//   id\n//   uri\n//   name\n// }\n\nexport const resourcesListFragment = `\n  fragment resourcesListFragment on Resource{\n    ...resourceFragment\n  }\n\n  ${resourceFragment}\n`;\n\n\n\nexport const resourcesConnectionQuery = gql`\n\n  query resourcesConnection(\n    $first:Int!\n    $skip:Int\n    $where: ResourceWhereInput\n    $orderBy: ResourceOrderByInput!\n  ){\n    objectsConnection: resourcesConnection(\n      orderBy: $orderBy\n      first: $first\n      skip: $skip\n      where: $where\n    ){\n      aggregate{\n        count\n      }\n      edges{\n        node{\n          ...resourcesListFragment\n        }\n      }\n    }\n  }\n\n  ${resourcesListFragment}\n\n`;\n\nexport const resourceQuery = gql`\n\n  query resource(\n    $where: ResourceWhereUniqueInput!\n  ){\n    object: resource(\n      where: $where\n    ){ \n      ...resourceFragment \n    }\n  }\n\n  ${resourceFragment}\n\n`;\n\n\n\nconst ResourcesQuery = graphql(resourcesConnectionQuery, {\n  options: props => {\n\n    const {\n      where,\n      ...other\n    } = props;\n\n    return {\n      variables: {\n        ...other,\n        where: {\n          ...where,\n          type: \"Comment\",\n        }\n      },\n    }\n  }\n});\n\nexport const CommentsConnector = ResourcesQuery(props => {\n\n  const {\n    View,\n    ...other\n  } = props;\n\n  return <View\n    {...other}\n  />;\n});\n\n\n\nconst ResourceQuery = graphql(resourceQuery);\n\nexport const Comment = ResourceQuery(props => {\n\n  const {\n    View,\n    ...other\n  } = props;\n\n  return <View\n    {...other}\n  />;\n});\n\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CommentsList from \"@modxclub/ui/src/Comments/List\";\n\nimport { Typography } from 'material-ui';\n\nimport Context from \"@prisma-cms/context\";\n\nclass CommentsView extends Component {\n\n  static contextType = Context;\n\n  static propTypes = {\n    pagination: PropTypes.number,\n  };\n\n\n  async componentDidMount() {\n\n    const {\n      data,\n    } = this.props;\n\n    if (data && !data.loading) {\n      await data.refetch && data.refetch();\n    }\n\n    super.componentDidMount && super.componentDidMount();\n  }\n\n\n  render() {\n\n    const {\n      Pagination,\n      Grid,\n    } = this.context;\n\n    const {\n      page,\n    } = this.props;\n\n\n\n    const {\n      objectsConnection,\n      loading,\n      variables: {\n        first: limit,\n      },\n    } = this.props.data;\n\n\n    const {\n      edges,\n      aggregate,\n    } = objectsConnection || {};\n\n    const {\n      count = 0,\n    } = aggregate || {};\n\n    if (!edges || !edges.length) {\n\n      if (loading) {\n        return null;\n      }\n      else {\n        return <Typography>\n          Данные не были получены\n        </Typography>\n      }\n\n    }\n\n\n    let comments = edges.map(n => n.node);\n\n\n    let content = <Grid\n      container\n      spacing={0}\n    >\n\n      {edges && edges.length ? <Grid\n        item\n        xs={12}\n\n      >\n\n        <CommentsList\n          comments={comments}\n          linkType=\"target\"\n        />\n\n        {page !== undefined ?\n          <Pagination\n            limit={limit}\n            total={count}\n            page={page || 1}\n            style={{\n              marginTop: 20,\n            }}\n          /> : null\n        }\n      </Grid> : null\n      }\n\n    </Grid>\n\n\n    return (content);\n  }\n}\n\n\nexport default CommentsView;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../layout\";\n\nimport {\n  CommentsConnector,\n} from \"./query\";\n\nimport View from \"./View\";\n\nclass CommentsPage extends Page {\n\n  static propTypes = {\n    ...Page.propTypes,\n    first: PropTypes.number.isRequired,\n    orderBy: PropTypes.string.isRequired,\n  };\n\n\n  static defaultProps = {\n    ...Page.defaultProps,\n    first: 10,\n    orderBy: \"createdAt_DESC\",\n    View,\n  }\n\n\n\n  setPageMeta(meta = {}) {\n\n    return super.setPageMeta({\n      title: \"Комментарии\",\n      ...meta,\n    });\n\n  }\n\n\n  render() {\n\n    let {\n      first,\n      where,\n      ...other\n    } = this.props;\n\n    const {\n      uri,\n    } = this.context;\n\n\n    let {\n      page,\n    } = uri.query(true);\n\n\n\n    let skip;\n\n    page = page && parseInt(page) || 0;\n\n    if (first && page > 1) {\n      skip = (page - 1) * first;\n    }\n\n    return super.render(\n      <CommentsConnector\n        where={where}\n        first={first}\n        skip={skip}\n        page={page}\n        {...other}\n      />\n    );\n  }\n}\n\n\nexport default CommentsPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../../layout\";\n\nimport PageNotFound from \"../../404\";\nimport { graphql } from 'react-apollo';\n\nimport {\n  Comment as CommentQuery,\n} from \"../query\";\n\n\nimport {\n  updateCommentProcessor,\n} from \"@modxclub/ui/src/Comments/query.js\";\n\nimport Comment from \"@modxclub/ui/src/Comments/Comment\";\nimport { Typography } from 'material-ui';\n\nimport {\n  Link,\n} from \"@modxclub/ui\";\n\nconst UpdateComment = graphql(updateCommentProcessor)(Comment);\n\nclass CommentPage extends Page {\n\n  static propTypes = {\n    ...Page.propTypes,\n  };\n\n\n  static defaultProps = {\n    ...Page.defaultProps,\n  }\n\n\n\n  setPageMeta(meta) {\n\n    const {\n      data: {\n        object: comment,\n      },\n    } = this.props;\n\n\n    if (!comment) {\n      return;\n    }\n\n    const {\n      CommentTarget: Topic,\n      name,\n      uri,\n    } = comment;\n\n    const {\n      name: topicName,\n      longtitle,\n    } = Topic || {};\n\n    return super.setPageMeta({\n      title: `${name ? `${name} | ` : ''}Комментарий к топику ${longtitle || topicName}`,\n      canonical: uri,\n      ...meta,\n    });\n\n  }\n\n\n  render() {\n\n    const {\n      data,\n      ...other\n    } = this.props;\n\n    const {\n      object: comment,\n      loading,\n    } = data;\n\n    if (!comment) {\n\n      if (loading) {\n        return null;\n      }\n      else {\n        return <PageNotFound />\n      }\n    }\n\n    return super.render(\n      <div>\n        <UpdateComment\n          data={data}\n          linkType=\"target\"\n          {...other}\n        />\n\n        <Typography>\n          <Link\n            to=\"/comments\"\n          >\n            Вернуться к списку комментариев\n          </Link>\n        </Typography>\n      </div>\n    );\n  }\n}\n\n\nexport default (props) => {\n\n  return <CommentQuery\n    View={CommentPage}\n    {...props}\n  />\n};","\nimport React from \"react\";\n\nimport gql from \"graphql-tag\";\n\nimport { graphql, compose } from \"react-apollo\";\n\n\nimport {\n  ProjectNoNestingFragment,\n  UserNoNestingFragment,\n  TaskNoNestingFragment,\n  TimerNoNestingFragment,\n} from \"../../../../schema/generated/api.fragments\";\n\n\nexport const createProjectProcessor = gql`\n \n\nmutation createProjectProcessor(\n  $data: ProjectCreateInput!\n){\n  response: createProjectProcessor(\n    data: $data\n  ){\n    success\n    message\n    errors{\n      key\n      message\n    }\n    data{\n      ...ProjectNoNesting\n      Resource{\n        id\n        uri\n      }\n    }\n  }\n}\n\n${ProjectNoNestingFragment}\n\n`;\n\n\nexport const updateProjectProcessor = gql`\n\n\nmutation updateProjectProcessor(\n  $data: ProjectUpdateInput!\n  $where: ProjectWhereUniqueInput!\n){\n  response: updateProjectProcessor(\n    data: $data\n    where: $where\n  ){\n    success\n    message\n    errors{\n      key\n      message\n    }\n    data{\n      ...ProjectNoNesting\n    }\n  }\n}\n\n${ProjectNoNestingFragment}\n\n`;\n\n\n\nexport const projectFragment = `\n  fragment projectFragment on Project{\n    ...ProjectNoNesting\n\n    CreatedBy{\n      ...UserNoNesting\n    }\n\n    Members{\n      id\n      User{\n        ...UserNoNesting\n      }\n    }\n    \n    Tasks{\n      ...TaskNoNesting\n      CreatedBy{\n        ...UserNoNesting\n      }\n      Timers(\n        where:{\n          stopedAt: null\n        }\n      ){\n        ...TimerNoNesting\n        CreatedBy{\n          ...UserNoNesting\n        }\n      }\n      CreatedBy{\n        ...UserNoNesting\n      }\n      Parent {\n        ...TaskNoNesting\n      }\n    }\n    Resource{\n      id\n      uri\n      Image{\n        id\n        path\n      }\n    }\n    \n  }\n  \n  ${ProjectNoNestingFragment}\n  ${UserNoNestingFragment}\n  ${TaskNoNestingFragment}\n  ${TimerNoNestingFragment}\n`\n\nexport const projectsListFragment = `\n  fragment projectsListFragment on Project{\n    ...projectFragment\n  }\n\n  ${projectFragment}\n`;\n\n\n\nexport const projectsConnectionQuery = gql`\n\n  query projectsConnection(\n    $first:Int!\n    $skip:Int\n    $where: ProjectWhereInput\n    $orderBy: ProjectOrderByInput!\n  ){\n    objectsConnection: projectsConnection(\n      orderBy: $orderBy\n      first: $first\n      skip: $skip\n      where: $where\n    ){\n      aggregate{\n        count\n      }\n      edges{\n        node{\n          ...projectsListFragment\n        }\n      }\n    }\n  }\n\n  ${projectsListFragment}\n\n`;\n\nexport const projectQuery = gql`\n\n  query project(\n    $where: ProjectWhereUniqueInput!\n  ){\n    object: project(\n      where: $where\n    ){ \n      ...projectFragment \n    }\n  }\n\n  ${projectFragment}\n\n`;\n\nexport const projectResourceQuery = gql`\n\n  query project(\n    $where: ResourceWhereUniqueInput!\n  ){\n    object: resource(\n      where: $where\n    ){ \n      id\n      name\n      uri\n      type\n      Project{\n        ...projectFragment \n      }\n    }\n  }\n\n  ${projectFragment}\n\n`;\n\n\n\nconst ProjectsQuery = graphql(projectsConnectionQuery);\nexport const ProjectsConnector = ProjectsQuery(props => {\n\n  const {\n    View,\n    ...other\n  } = props;\n\n  return <View\n    {...other}\n  />;\n});\n\n\n\nconst ProjectQuery = graphql(projectQuery);\nexport const Project = ProjectQuery(props => {\n\n  const {\n    View,\n    ...other\n  } = props;\n\n  return <View\n    {...other}\n  />;\n});\n\n\nconst ProjectResourceQuery = graphql(projectResourceQuery);\nexport const ProjectResource = ProjectResourceQuery(props => {\n\n  const {\n    View,\n    ...other\n  } = props;\n\n  return <View\n    {...other}\n  />;\n});\n\n\n\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// import EditableView from 'apollo-cms/lib/DataView/Object/Editable';\n\nimport withStyles from \"material-ui/styles/withStyles\";\n\n\n\nimport { Typography } from 'material-ui';\n\n\nimport Card, {\n  CardContent,\n  CardMedia,\n} from 'material-ui/Card';\nimport Button from 'material-ui/Button';\nimport Chip from 'material-ui/Chip';\nimport Dialog from 'material-ui/Dialog';\n\nimport { Uploader } from \"@prisma-cms/ui\";\n\n\nimport {\n  UserLink,\n  ProjectLink,\n  Link,\n  Grid,\n} from \"@modxclub/ui\"\n\nimport {\n  styles as baseStyles,\n  ProjectView as PrismaCmsCooperationProjectView,\n} from \"@prisma-cms/cooperation/lib/components/pages/Projects/View/Project\";\n\n\nexport const styles = theme => {\n\n  const styles = baseStyles(theme);\n\n  const {\n    root,\n    ...other\n  } = styles;\n\n  return {\n    root: {\n      ...root,\n      height: \"100%\",\n    },\n    ...other,\n    header: {\n      padding: \"15px 15px 0\",\n    },\n    thumb: {\n      width: \"100%\",\n      maxWidth: 600,\n      cursor: \"pointer\",\n    },\n    imageOpened: {\n      maxWidth: \"100%\",\n    },\n    memberLinks: {\n      \"& > div\": {\n        marginRight: 10,\n      },\n    },\n    inputRoot: {\n      marginLeft: 24,\n    },\n  }\n\n}\n\n\nexport class ProjectView extends PrismaCmsCooperationProjectView {\n\n\n  static propTypes = {\n    ...PrismaCmsCooperationProjectView.propTypes,\n    classes: PropTypes.object.isRequired,\n    showDetails: PropTypes.bool.isRequired,\n    tasksLimit: PropTypes.number,\n  };\n\n  static defaultProps = {\n    ...PrismaCmsCooperationProjectView.defaultProps,\n    showDetails: false,\n  };\n\n  // static contextTypes = {\n  //   ...PrismaCmsCooperationProjectView.contextTypes,\n  //   openLoginForm: PropTypes.func.isRequired,\n  // };\n\n\n  renderHeader() {\n\n    return null;\n  }\n\n  // canEdit() {\n\n  //   const {\n  //     user: currentUser,\n  //   } = this.context;\n\n  //   const {\n  //     id: currentUserId,\n  //     sudo,\n  //   } = currentUser || {};\n\n\n  //   const {\n  //     id,\n  //     CreatedBy,\n  //   } = this.getObjectWithMutations() || {};\n\n\n  //   const {\n  //     id: createdById,\n  //   } = CreatedBy || {}\n\n  //   return !id || (createdById && createdById === currentUserId) || sudo === true;\n  // }\n\n\n  // save() {\n\n  //   const {\n  //     user: currentUser,\n  //     openLoginForm,\n  //   } = this.context;\n\n  //   if (!currentUser) {\n\n  //     return openLoginForm();\n  //   }\n\n  //   return super.save();\n  // }\n\n\n  // getCacheKey() {\n\n  //   const {\n  //     id,\n  //   } = this.getObject() || {};\n\n  //   return `project_${id || \"new\"}`;\n  // }\n\n\n\n  handleOpen = (image) => {\n\n    let thumb = image ? `/images/resized/big/${image}` : null;\n\n    if (!thumb) {\n      return false;\n    }\n\n    this.setState({\n      open: true,\n      openedImage: thumb,\n    });\n  };\n\n  handleClose = () => {\n\n    this.setState({\n      open: false,\n      openedImage: undefined,\n    });\n  };\n\n\n  // renderHeader() {\n\n  //   return null;\n  // }\n\n\n\n  onUpload(r) {\n\n    const {\n      singleUpload,\n    } = r.data;\n\n\n\n\n    const {\n      path: image,\n    } = singleUpload || {};\n\n    if (singleUpload) {\n      this.updateObject({\n        image,\n      });\n    }\n\n  }\n\n\n\n  renderResetButton() {\n\n    const {\n      id,\n    } = this.getObjectWithMutations() || {}\n\n    return id ? super.renderResetButton() : null;\n  }\n\n\n  renderDefaultView() {\n\n\n    const {\n      classes,\n    } = this.props;\n\n    const object = this.getObjectWithMutations();\n\n\n    const inEditMode = this.isInEditMode();\n\n\n    let {\n      openedImage,\n      editMembers,\n    } = this.state;\n\n\n    let {\n      user: currentUser,\n      // updateProject,\n      // saveProject,\n    } = this.context;\n\n\n    if (!object) {\n      return null;\n    }\n\n    let {\n      id: projectId,\n      name,\n      url,\n      companies,\n      developer_id,\n      developer_uri = \"/\",\n      developer_title,\n      createdby,\n      Members,\n      _isDirty,\n      _errors,\n      Resource,\n      CreatedBy,\n\n      image: newImage,\n    } = object;\n\n    const {\n      Image,\n    } = Resource || {}\n\n    const {\n      id: createdById,\n      username: author_username,\n      fullname: author_fullname,\n      // author_photo,\n      // author_thumb,\n    } = CreatedBy || {};\n\n    let {\n      path: image,\n    } = Image || {};\n\n    image = newImage || image;\n\n    let thumb = image ? `/images/resized/middle/${image}` : null;\n\n    /*\n     * Участники проекта\n     * */\n    let project_members = Members || []\n    var members = [];\n\n    if (inEditMode) {\n      // members.push(<Chip\n      //   key=\"create\"\n      //   className=\"link\"\n      //   style={{\n      //     margin: 4,\n      //   }}\n      //   label={project_members.length ? \"Редактировать участников\" : \"Добавить участника\"}\n      //   avatar={<MembersAvatar />}\n      //   onClick={event => {\n      //     this.setState({\n      //       editMembers: true,\n      //     });\n      //   }}\n      // >\n      // </Chip>);\n    }\n\n    if (project_members.length) {\n      project_members.map(function (member) {\n\n        let {\n          id,\n          User,\n        } = member;\n\n        members.push(<UserLink\n          key={id}\n          user={User}\n          size=\"small\"\n        />);\n      }, this);\n    }\n\n\n    /*\n     * Используемые компоненты\n     * */\n    var extras = [];\n\n    if (object.extras && object.extras.length) {\n      object.extras.map(function (extra) {\n\n\n        extras.push(<Chip\n          key={extra.id}\n          style={{\n            margin: 4,\n          }}\n          label={extra.pagetitle}\n        >\n        </Chip>);\n      }, this);\n    }\n\n    var dialog_actions = [];\n\n    if (this.state.url != '') {\n      dialog_actions.push(\n        <Button\n          key=\"link\"\n          href={this.state.url}\n          target=\"_blank\"\n          rel=\"nofollow\"\n          secondary={true}\n        >Перейти на сайт</Button>\n      );\n    }\n\n    dialog_actions.push(\n      <Button\n        key=\"close\"\n        onClick={this.handleClose}\n      >Закрыть</Button>\n    );\n\n\n    return <Card\n      className=\"portfolio-card__wrapper\"\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n      }}\n    >\n      {/* <CardHeader\n        title={<Link\n          to={`/profile/${author_username}`}\n          style={{\n            textDecoration: 'none',\n          }}\n        >\n          {author_fullname || author_username}\n        </Link>}\n        // subheader={companies && <CompaniesList companies={companies} /> || undefined}\n        avatar={<div>\n\n          {this.getButtons()}\n\n          {CreatedBy ?\n            <UserLink\n              user={CreatedBy}\n            /> : null\n          }\n\n        </div>}\n      /> */}\n\n      <div\n        className={classes.header}\n      >\n        <Grid\n          container\n          spacing={8}\n          alignItems=\"center\"\n        >\n\n          <Grid\n            item\n            xs={inEditMode}\n          >\n\n            {/* {inEditMode\n              ?\n              this.getTextField({\n                name: \"name\",\n                fullWidth: true,\n              })\n              :\n\n              projectId ? <ProjectLink\n                object={object}\n              />\n                :\n                null\n            } */}\n\n          </Grid>\n\n          <Grid\n            item\n          >\n\n\n            {this.getButtons()}\n\n          </Grid>\n\n\n          <Grid\n            item\n            xs={!inEditMode}\n          >\n\n          </Grid>\n\n\n          <Grid\n            item\n          >\n            {CreatedBy\n              ?\n              <UserLink\n                user={CreatedBy}\n              />\n              :\n              null\n            }\n          </Grid>\n\n        </Grid>\n      </div>\n\n\n      <CardContent>\n\n        {inEditMode\n          ?\n\n          this.getTextField({\n            label: \"Название проекта\",\n            name: \"name\",\n          })\n\n          :\n          <Typography\n            variant=\"title\"\n            style={{\n              // textAlign: 'right',\n              padding: 3,\n            }}\n          >\n\n            <ProjectLink\n              object={object}\n            // title={longtitle}\n            // className=\"underline-none\"\n            >\n              <Typography\n                variant=\"title\"\n              >\n                {name}\n              </Typography>\n            </ProjectLink>\n          </Typography>\n        }\n\n      </CardContent>\n\n      <CardMedia\n      >\n\n        <div\n          className=\"overlay\"\n        >\n\n          {inEditMode && currentUser ?\n            <Uploader\n              onUpload={result => this.onUpload(result)}\n              inEditMode={inEditMode}\n              helperText=\"Для загрузки перетащите файл сюда\"\n              classes={{\n                inputRoot: classes.inputRoot,\n              }}\n            >\n            </Uploader>\n            : null\n          }\n\n          {thumb ?\n            <img\n              className={classes.thumb}\n              src={thumb}\n              onClick={event => {\n                this.handleOpen(image);\n              }}\n            />\n            : null\n          }\n        </div>\n\n\n\n\n\n\n      </CardMedia>\n\n      <CardContent>\n\n        {inEditMode\n          ?\n\n          this.getTextField({\n            label: \"URL-адрес сайта\",\n            name: \"url\",\n          })\n\n          :\n          <Typography\n            variant=\"subheading\"\n            style={{\n              textAlign: 'right',\n              padding: 5,\n            }}\n          >\n\n            {url\n              ?\n              <a\n                href={url}\n                target=\"_blank\"\n                title={name}\n              >{url}</a>\n              :\n              null\n            }\n          </Typography>\n        }\n\n        {/* {object.content} */}\n\n\n      </CardContent>\n\n\n      {developer_id\n        ?\n        <CardContent>\n\n          Компания-разработчик\n                <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n            }}\n          >\n            <Link\n              to={developer_uri}\n              style={{\n                textDecoration: 'none',\n              }}\n              title={developer_title}\n            >\n              <Chip\n                label={developer_title}\n                className=\"link\"\n              />\n            </Link>\n          </div>\n        </CardContent>\n        :\n        null\n      }\n\n\n      {members && members.length\n        ?\n        <CardContent>\n\n          <Typography\n            variant=\"subheading\"\n          >\n            Участники проекта {editMembers\n              ?\n              <Button\n                onClick={event => {\n                  this.setState({\n                    editMembers: false,\n                  })\n                }}\n              >\n                Скрыть детали\n              </Button>\n              :\n              null\n            }\n          </Typography>\n\n          <div\n            className={classes.memberLinks}\n          >\n\n            {members}\n\n          </div>\n        </CardContent>\n        :\n        null\n      }\n\n\n      {this.renderTasks()}\n\n\n\n      {extras.length ?\n        <CardContent>\n          Используемые компоненты\n              <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n            }}\n          >\n            {extras}\n          </div>\n        </CardContent>\n        : null}\n\n\n      <Dialog\n        title={name}\n        onClose={this.handleClose}\n        modal={false}\n        contentStyle={{\n          maxWidth: '100%',\n        }}\n        open={this.state.open && openedImage ? true : false}\n        autoScrollBodyContent={true}\n        actions={dialog_actions}\n      >\n        <img\n          className={classes.imageOpened}\n          src={openedImage}\n          style={{\n            // minHeight: typeof window != \"undefined\" ? window.innerHeight * 0.8 : undefined,\n          }}\n        />\n      </Dialog>\n    </Card>\n\n  }\n\n\n\n\n}\n\n\nexport default withStyles(styles)(props => <ProjectView\n  {...props}\n/>);","\nimport React from \"react\";\n\nimport gql from \"graphql-tag\";\n\nimport { graphql, compose } from \"react-apollo\";\n\n\nimport {\n  TimerNoNestingFragment,\n  UserNoNestingFragment,\n  TaskNoNestingFragment,\n  ProjectNoNestingFragment,\n} from \"../../../../schema/generated/api.fragments\";\n\n\nexport const createTimerProcessor = gql`\n \n  mutation createTimerProcessor(\n    $data: TimerCreateInput!\n  ){\n    response: createTimerProcessor(\n      data: $data\n    ){\n      success\n      message\n      errors{\n        key\n        message\n      }\n      data{\n        ...TimerNoNesting\n      }\n    }\n  }\n\n  ${TimerNoNestingFragment}\n\n`;\n\n\nexport const updateTimerProcessor = gql`\n\n  mutation updateTimerProcessor(\n    $data: TimerUpdateInput!\n    $where: TimerWhereUniqueInput!\n  ){\n    response: updateTimerProcessor(\n      data: $data\n      where: $where\n    ){\n      success\n      message\n      errors{\n        key\n        message\n      }\n      data{\n        ...TimerNoNesting\n      }\n    }\n  }\n\n  ${TimerNoNestingFragment}\n\n`;\n\n\n\nexport const timerFragment = `\n  fragment timerFragment on Timer{\n    ...TimerNoNesting\n\n    CreatedBy{\n      ...UserNoNesting\n    }\n\n    Task {\n      ...TaskNoNesting\n\n      Project{\n        ...ProjectNoNesting\n        Resource{\n          id\n          uri\n        }\n      }\n    }\n    \n  }\n  \n  ${TimerNoNestingFragment}\n  ${UserNoNestingFragment}\n  ${TaskNoNestingFragment}\n  ${ProjectNoNestingFragment}\n`\n\nexport const timersListFragment = `\n  fragment timersListFragment on Timer{\n    ...timerFragment\n  }\n\n  ${timerFragment}\n`;\n\n\n\nexport const timersConnectionQuery = gql`\n\n  query timersConnection(\n    $first:Int!\n    $skip:Int\n    $where: TimerWhereInput\n    $orderBy: TimerOrderByInput!\n  ){\n    objectsConnection: timersConnection(\n      orderBy: $orderBy\n      first: $first\n      skip: $skip\n      where: $where\n    ){\n      aggregate{\n        count\n      }\n      edges{\n        node{\n          ...timersListFragment\n        }\n      }\n    }\n  }\n\n  ${timersListFragment}\n\n`;\n\nexport const timerQuery = gql`\n\n  query timer(\n    $where: TimerWhereUniqueInput!\n  ){\n    object: timer(\n      where: $where\n    ){ \n      ...timerFragment \n    }\n  }\n\n  ${timerFragment}\n\n`;\n\n\n\nconst TimersQuery = graphql(timersConnectionQuery);\nexport const TimersConnector = TimersQuery(props => {\n\n  const {\n    View,\n    ...other\n  } = props;\n\n  return <View\n    {...other}\n  />;\n});\n\n\n\nconst TimerQuery = graphql(timerQuery);\nexport const Timer = TimerQuery(props => {\n\n  const {\n    View,\n    ...other\n  } = props;\n\n  return <View\n    {...other}\n  />;\n});\n\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport EditableView from 'apollo-cms/lib/DataView/Object/Editable';\n\nimport withStyles from \"material-ui/styles/withStyles\";\nimport { Typography, IconButton } from 'material-ui';\nimport StopIcon from 'material-ui-icons/Stop';\n\nimport Grid from \"@prisma-cms/front/lib/modules/ui/Grid\";\n\nimport moment from \"moment\";\n\nimport {\n  UserLink,\n  TimerLink,\n  ProjectLink,\n  TaskLink,\n} from \"@modxclub/ui\"\n\nconst styles = theme => {\n\n  return {\n\n    root: {\n    },\n  }\n\n}\n\nclass TimerView extends EditableView {\n\n\n  static propTypes = {\n    ...EditableView.propTypes,\n    classes: PropTypes.object.isRequired,\n  };\n\n  static defaultProps = {\n    ...EditableView.defaultProps,\n  };\n\n  // static contextTypes = {\n  //   ...EditableView.contextTypes,\n  //   openLoginForm: PropTypes.func.isRequired,\n  // };\n\n\n  canEdit() {\n\n    const {\n      user: currentUser,\n    } = this.context;\n\n    const {\n      id: currentUserId,\n      sudo,\n    } = currentUser || {};\n\n\n    const {\n      id,\n      CreatedBy,\n    } = this.getObjectWithMutations() || {};\n\n\n    const {\n      id: createdById,\n    } = CreatedBy || {}\n\n    return !id || (createdById && createdById === currentUserId) || sudo === true;\n  }\n\n\n  getButtons() {\n\n    const canEdit = this.canEdit();\n\n    // if (!canEdit) {\n    //   return null;\n    // }\n\n    const {\n      id: timerId,\n      stopedAt,\n    } = this.getObjectWithMutations() || {};\n\n    if (!timerId || stopedAt) {\n      return null;\n    }\n\n    let buttons = [];\n\n\n    buttons.push(<IconButton\n      key=\"stop\"\n      onClick={() => this.stopTimer(timerId)}\n      disabled={!canEdit}\n    >\n      <StopIcon />\n    </IconButton>);\n\n    return buttons;\n  }\n\n\n  async stopTimer(timerId) {\n\n    const {\n      mutate,\n    } = this.props;\n\n    return await mutate({\n      variables: {\n        where: {\n          id: timerId,\n        },\n        data: {\n          stopedAt: new Date(),\n        },\n      },\n    });\n\n  }\n\n\n  save() {\n\n    const {\n      user: currentUser,\n      openLoginForm,\n    } = this.context;\n\n    if (!currentUser) {\n\n      return openLoginForm();\n    }\n\n    return super.save();\n  }\n\n\n  getCacheKey() {\n\n    const {\n      id,\n    } = this.getObject() || {};\n\n    return `timer_${id || \"new\"}`;\n  }\n\n\n\n  renderHeader() {\n\n    const {\n      classes,\n    } = this.props;\n\n    const object = this.getObjectWithMutations();\n\n    const {\n      id: timerId,\n      CreatedBy,\n      createdAt,\n      stopedAt,\n      Task,\n    } = object || {}\n\n\n    const {\n      Project,\n    } = Task || {}\n\n\n\n\n    const inEditMode = this.isInEditMode();\n\n\n    return <div\n      className={classes.header}\n    >\n      <Grid\n        container\n        spacing={16}\n      >\n\n        <Grid\n          item\n          xs\n        >\n\n          <Grid\n            container\n            alignItems=\"center\"\n          >\n\n\n            <Grid\n              item\n            >\n\n              {/* {inEditMode\n                ?\n                this.getTextField({\n                  name: \"name\",\n                  fullWidth: true,\n                })\n                :\n\n                timerId ? <TimerLink\n                  object={object}\n                />\n                  :\n                  null\n              } */}\n\n              {Task ? <TaskLink\n                object={Task}\n              /> : null}\n\n              {Project ? <span> (<ProjectLink\n                object={Project}\n              />)\n              </span> : null}\n\n            </Grid>\n\n            <Grid\n              item\n            >\n\n\n              {this.getButtons()}\n\n            </Grid>\n\n            <Grid\n              item\n              xs\n            >\n            </Grid>\n\n\n            <Grid\n              item\n            >\n              {CreatedBy\n                ?\n                <UserLink\n                  user={CreatedBy}\n                />\n                :\n                null\n              }\n            </Grid>\n\n\n\n            {createdAt ?\n              <Grid\n                item\n                xs={12}\n              >\n                Начало: {moment(createdAt).format('lll')}\n              </Grid>\n              : null}\n\n            {stopedAt ?\n              <Grid\n                item\n                xs={12}\n              >\n                Конец: {moment(stopedAt).format('lll')}\n              </Grid>\n              : null}\n\n          </Grid>\n\n\n\n        </Grid>\n\n\n      </Grid>\n    </div>\n\n  }\n\n\n  renderDefaultView() {\n\n    const {\n      classes,\n    } = this.props;\n\n\n    const timer = this.getObjectWithMutations();\n\n\n    if (!timer) {\n      return null;\n    }\n\n    const {\n      content,\n    } = timer;\n\n\n    const inEditMode = this.isInEditMode();\n    const allow_edit = this.canEdit();\n\n\n    return <Grid\n      container\n    >\n\n      <Grid\n        item\n      >\n\n\n\n      </Grid>\n\n\n    </Grid>;\n  }\n\n\n  renderEditableView() {\n\n    return this.renderDefaultView();\n\n\n  }\n\n\n\n  renderResetButton() {\n\n    const {\n      id,\n    } = this.getObjectWithMutations() || {}\n\n    return id ? super.renderResetButton() : null;\n  }\n\n\n\n  render() {\n\n    const object = this.getObjectWithMutations();\n\n    if (!object) {\n      return null;\n    }\n\n    const {\n      classes,\n    } = this.props;\n\n    return <div\n      className={classes.root}\n    >\n\n      {super.render()}\n\n    </div>\n\n  }\n}\n\n\nexport default withStyles(styles)(props => <TimerView\n  {...props}\n/>);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { graphql } from 'react-apollo';\n\nimport {\n  // createTimerProcessor,\n  updateTimerProcessor,\n} from \"../../query\";\n\nimport Timer from \"../Timer\";\n\n// const NewTimer = graphql(createTimerProcessor)(Timer);\nconst UpdateTimer = graphql(updateTimerProcessor)(Timer);\n\nclass TimersList extends Component {\n\n  static propTypes = {\n    timers: PropTypes.array.isRequired,\n  };\n\n  static defaultProps = {\n  };\n\n  render() {\n\n    const {\n      timers,\n    } = this.props;\n\n    if(!timers){\n      return null;\n    }\n\n    return (\n      timers.map(n => {\n        const {\n          id,\n        } = n;\n\n        return <UpdateTimer\n          key={id}\n          data={{\n            object: n,\n          }}\n        />\n      })\n    );\n  }\n}\n\n\nexport default TimersList;","\nimport React from \"react\";\n\nimport gql from \"graphql-tag\";\n\nimport { graphql, compose } from \"react-apollo\";\n\n\nimport {\n  TaskNoNestingFragment,\n  UserNoNestingFragment,\n  TimerNoNestingFragment,\n  ProjectNoNestingFragment,\n} from \"../../../../schema/generated/api.fragments\";\n\n\nexport const createTaskProcessor = gql`\n \n\nmutation createTaskProcessor(\n  $data: TaskCreateInput!\n){\n  response: createTaskProcessor(\n    data: $data\n  ){\n    success\n    message\n    errors{\n      key\n      message\n    }\n    data{\n      ...TaskNoNesting\n    }\n  }\n}\n\n${TaskNoNestingFragment}\n\n`;\n\n\nexport const updateTaskProcessor = gql`\n\n\n  mutation updateTaskProcessor(\n    $data: TaskUpdateInput!\n    $where: TaskWhereUniqueInput!\n  ){\n    response: updateTaskProcessor(\n      data: $data\n      where: $where\n    ){\n      success\n      message\n      errors{\n        key\n        message\n      }\n      data{\n        ...TaskNoNesting\n      }\n    }\n  }\n\n  ${TaskNoNestingFragment}\n\n`;\n\n\n\nexport const taskFragment = `\n  fragment taskFragment on Task{\n    ...TaskNoNesting\n\n    CreatedBy{\n      ...UserNoNesting\n    }\n\n    Timers(\n      orderBy: createdAt_DESC\n    ){\n      ...TimerNoNesting\n      CreatedBy{\n        ...UserNoNesting\n      }\n    }\n\n    Project{\n      ...ProjectNoNesting\n      CreatedBy{\n        ...UserNoNesting\n      }\n      Resource{\n        id\n        uri\n      }\n    }\n\n    RelatedTo{\n      ...TaskNoNesting\n    }\n    \n  }\n  \n  ${TaskNoNestingFragment}\n  ${UserNoNestingFragment}\n  ${TimerNoNestingFragment}\n  ${ProjectNoNestingFragment}\n`\n\nexport const tasksListFragment = `\n  fragment tasksListFragment on Task{\n    ...taskFragment\n  }\n\n  ${taskFragment}\n`;\n\n\n\nexport const tasksConnectionQuery = gql`\n\n  query tasksConnection(\n    $first:Int!\n    $skip:Int\n    $where: TaskWhereInput\n    $orderBy: TaskOrderByInput!\n  ){\n    objectsConnection: tasksConnection(\n      orderBy: $orderBy\n      first: $first\n      skip: $skip\n      where: $where\n    ){\n      aggregate{\n        count\n      }\n      edges{\n        node{\n          ...tasksListFragment\n        }\n      }\n    }\n  }\n\n  ${tasksListFragment}\n\n`;\n\nexport const taskQuery = gql`\n\n  query task(\n    $where: TaskWhereUniqueInput!\n  ){\n    object: task(\n      where: $where\n    ){ \n      ...taskFragment \n    }\n  }\n\n  ${taskFragment}\n\n`;\n\n\n\nconst TasksQuery = graphql(tasksConnectionQuery);\nexport const TasksConnector = TasksQuery(props => {\n\n  const {\n    View,\n    ...other\n  } = props;\n\n  return <View\n    {...other}\n  />;\n});\n\n\n\nconst TaskQuery = graphql(taskQuery);\nexport const Task = TaskQuery(props => {\n\n  const {\n    View,\n    ...other\n  } = props;\n\n  return <View\n    {...other}\n  />;\n});\n\n\n\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport EditableView from 'apollo-cms/lib/DataView/Object/Editable';\n\nimport { withStyles, IconButton } from 'material-ui';\nimport StartIcon from \"material-ui-icons/PlayArrow\";\nimport StopIcon from \"material-ui-icons/Stop\";\n\nimport { Typography } from 'material-ui';\n\nimport Grid from \"@prisma-cms/front/lib/modules/ui/Grid\";\n\nimport moment from \"moment\";\n\nimport {\n  UserLink,\n  TaskLink,\n  Editor,\n  ProjectLink,\n} from \"@modxclub/ui\"\n\n\nimport TimersListView from \"../../../Timers/View/List\";\n\n\nimport {\n  createTaskProcessor,\n  updateTaskProcessor,\n} from \"../../query\";\n\nimport {\n  createTimerProcessor,\n  updateTimerProcessor,\n} from \"../../../Timers/query\";\nimport { graphql, compose } from 'react-apollo';\n\n\nexport {\n  UserLink,\n  TaskLink,\n  Editor,\n  ProjectLink,\n  updateTaskProcessor,\n  createTimerProcessor,\n  updateTimerProcessor,\n}\n\nexport const styles = theme => {\n\n  return {\n\n    root: {\n    },\n  }\n\n}\n\nexport class TaskView extends EditableView {\n\n\n  static propTypes = {\n    ...EditableView.propTypes,\n    classes: PropTypes.object.isRequired,\n    showDetails: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    ...EditableView.defaultProps,\n    showDetails: false,\n  };\n\n  // static contextTypes = {\n  //   ...EditableView.contextTypes,\n  //   openLoginForm: PropTypes.func.isRequired,\n  // };\n\n\n  canEdit() {\n\n    const {\n      user: currentUser,\n    } = this.context;\n\n    const {\n      id: currentUserId,\n      sudo,\n    } = currentUser || {};\n\n\n    const {\n      id,\n      CreatedBy,\n    } = this.getObjectWithMutations() || {};\n\n\n    const {\n      id: createdById,\n    } = CreatedBy || {}\n\n    return !id || (createdById && createdById === currentUserId) || sudo === true;\n  }\n\n\n  save() {\n\n    const {\n      user: currentUser,\n      openLoginForm,\n    } = this.context;\n\n    if (!currentUser) {\n\n      return openLoginForm();\n    }\n\n    return super.save();\n  }\n\n\n\n  async saveObject(data) {\n\n    let {\n      mutate,\n      createTask,\n      updateTask,\n    } = this.props;\n\n    if (!mutate) {\n\n      const {\n        id,\n      } = this.getObjectWithMutations() || {};\n\n      if (id && updateTask) {\n        mutate = updateTask;\n      }\n      else if (!id && createTask) {\n        mutate = createTask;\n      }\n      else {\n        throw (new Error(\"Mutate not defined\"));\n      }\n\n    }\n\n    const mutation = this.getMutation(data);\n\n    const result = await mutate(mutation).then(r => r).catch(e => {\n\n      // throw (e);\n      return e;\n    });\n\n\n\n    return result;\n\n  }\n\n\n  getCacheKey() {\n\n    const {\n      id,\n    } = this.getObject() || {};\n\n    return `task_${id || \"new\"}`;\n  }\n\n\n  getButtons() {\n\n    let buttons = super.getButtons() || [];\n\n    const {\n      createTimer,\n      updateTimer,\n      classes,\n    } = this.props;\n\n    const {\n      id: taskId,\n      Timers,\n    } = this.getObjectWithMutations();\n\n    const {\n      user: currentUser,\n    } = this.context;\n\n\n    let activeTimers = Timers && Timers.filter(n => n.stopedAt === null) || []\n\n    // buttons.push(<IconButton\n    //   key=\"start\"\n    //   onClick={() => createTimer({\n    //     variables: {\n    //       data: {\n    //         Task: {\n    //           connect: {\n    //             id: taskId,\n    //           },\n    //         },\n    //       },\n    //     },\n    //   })}\n    //   className={classes.button}\n    // >\n    //   <StartIcon />\n    // </IconButton>);\n\n\n    const {\n      id: currentUserId,\n    } = currentUser || {};\n\n    const activeTimer = activeTimers.find(n => n.CreatedBy.id === currentUserId);\n\n    if (activeTimer) {\n\n      const {\n        id: timerId,\n      } = activeTimer;\n\n      buttons.push(<IconButton\n        key=\"stop\"\n        onClick={() => this.mutate({\n          mutation: updateTimerProcessor,\n          variables: {\n            data: {\n              stopedAt: new Date(),\n            },\n            where: {\n              id: timerId,\n            },\n          },\n        })}\n        className={classes.button}\n      >\n        <StopIcon />\n      </IconButton>);\n    }\n    else {\n      buttons.push(<IconButton\n        key=\"start\"\n        onClick={() => this.mutate({\n          mutation: createTimerProcessor,\n          variables: {\n            data: {\n              Task: {\n                connect: {\n                  id: taskId,\n                },\n              },\n            },\n          },\n        })}\n        className={classes.button}\n      >\n        <StartIcon />\n      </IconButton>);\n    }\n\n    return buttons;\n  }\n\n\n  renderHeader() {\n\n    const {\n      classes,\n    } = this.props;\n\n    const object = this.getObjectWithMutations();\n\n    const {\n      id: taskId,\n      CreatedBy,\n      createdAt,\n      Project,\n    } = object || {}\n\n\n\n    const inEditMode = this.isInEditMode();\n\n\n    return <div\n      className={classes.header}\n    >\n      <Grid\n        container\n        spacing={16}\n      >\n\n        <Grid\n          item\n          xs\n        >\n\n          <Grid\n            container\n            alignItems=\"center\"\n          >\n\n\n            <Grid\n              item\n              xs={inEditMode}\n            >\n\n              {inEditMode\n                ?\n                this.getTextField({\n                  name: \"name\",\n                  fullWidth: true,\n                  label: \"Название задачи\"\n                })\n                :\n\n                taskId ? <Fragment>\n                  <TaskLink\n                    object={object}\n                  /> {Project ? <span> (<ProjectLink\n                    object={Project}\n                  />)\n                  </span> : null}\n                </Fragment>\n                  :\n                  null\n              }\n\n            </Grid>\n\n            <Grid\n              item\n            >\n\n\n              {this.getButtons()}\n\n            </Grid>\n\n\n            <Grid\n              item\n              xs={!inEditMode}\n            >\n\n            </Grid>\n\n\n            <Grid\n              item\n            >\n              {CreatedBy\n                ?\n                <UserLink\n                  user={CreatedBy}\n                />\n                :\n                null\n              }\n            </Grid>\n\n          </Grid>\n\n\n\n        </Grid>\n\n\n      </Grid>\n    </div>\n\n  }\n\n\n\n  renderActiveTimers() {\n\n    const {\n      Timers,\n    } = this.getObjectWithMutations() || {};\n\n    let activeTimers = Timers && Timers.filter(n => n.stopedAt === null) || []\n\n    let collaborators = [];\n\n\n    if (activeTimers.length) {\n\n      activeTimers.map(n => {\n        const {\n          id,\n          CreatedBy,\n        } = n;\n\n        collaborators.push(<Grid\n          key={id}\n          item\n        >\n          <UserLink\n            user={CreatedBy}\n            size=\"small\"\n          />\n        </Grid>);\n      });\n\n    }\n\n    return collaborators && collaborators.length ? <div>\n      <Typography>\n        Сейчас над задачей работают:\n      </Typography>\n\n      <Grid\n        container\n        spacing={8}\n      >\n\n        {collaborators}\n\n      </Grid>\n\n    </div> : null;\n  }\n\n\n  renderDefaultView() {\n\n    const {\n      classes,\n      showDetails,\n    } = this.props;\n\n\n    const task = this.getObjectWithMutations();\n\n\n    if (!task) {\n      return null;\n    }\n\n    const {\n      content,\n      Timers,\n      startDatePlaning,\n      endDatePlaning,\n      startDate,\n      endDate,\n    } = task;\n\n\n    const inEditMode = this.isInEditMode();\n    const allow_edit = this.canEdit();\n\n\n    let details;\n\n    if (showDetails) {\n\n      details = <Fragment>\n\n        {Timers && Timers.length ?\n          <Grid\n            item\n            xs={12}\n          >\n\n            <Typography\n              variant=\"subheading\"\n            >\n              Таймеры в задаче\n            </Typography>\n\n            <TimersListView\n              timers={Timers}\n            />\n\n          </Grid>\n          : null\n        }\n\n      </Fragment>\n\n    }\n\n    return <Grid\n      container\n      spacing={8}\n    >\n\n      {inEditMode || content ?\n        <Grid\n          item\n          xs={12}\n        >\n          <Typography\n            variant=\"subheading\"\n          >\n            Описание задачи\n          </Typography>\n\n          <Editor\n            value={content}\n            readOnly={!inEditMode}\n            onChange={content => {\n              return this.updateObject({\n                content,\n              })\n            }}\n          />\n        </Grid>\n        : null\n      }\n\n      {inEditMode || startDatePlaning ?\n        <Grid\n          item\n          xs={12}\n        >\n\n          {this.getTextField({\n            name: \"startDatePlaning\",\n            label: \"Планируемая дата начала\",\n            type: \"date\",\n            value: startDatePlaning && moment(startDatePlaning).format(\"YYYY-MM-DD\") || \"дд.мм.гггг\",\n            disabled: !inEditMode,\n          })}\n\n        </Grid>\n        : null\n      }\n\n      {inEditMode || endDatePlaning ?\n        <Grid\n          item\n          xs={12}\n        >\n\n          {this.getTextField({\n            name: \"endDatePlaning\",\n            label: \"Планируемая дата завершения\",\n            type: \"date\",\n            value: endDatePlaning && moment(endDatePlaning).format(\"YYYY-MM-DD\") || \"дд.мм.гггг\",\n            disabled: !inEditMode,\n          })}\n\n        </Grid>\n        : null\n      }\n\n      {inEditMode || startDate ?\n        <Grid\n          item\n          xs={12}\n        >\n\n          {this.getTextField({\n            name: \"startDate\",\n            label: \"Дата начала\",\n            type: \"date\",\n            value: startDate && moment(startDate).format(\"YYYY-MM-DD\") || \"дд.мм.гггг\",\n            disabled: !inEditMode,\n          })}\n\n        </Grid>\n        : null\n      }\n\n      {inEditMode || endDate ?\n        <Grid\n          item\n          xs={12}\n        >\n\n          {this.getTextField({\n            name: \"endDate\",\n            label: \"Дата завершения\",\n            type: \"date\",\n            value: endDate && moment(endDate).format(\"YYYY-MM-DD\") || \"дд.мм.гггг\",\n            disabled: !inEditMode,\n          })}\n\n        </Grid>\n        : null\n      }\n\n      {details}\n\n    </Grid>;\n  }\n\n\n  renderEditableView() {\n\n    return this.renderDefaultView();\n\n\n  }\n\n\n\n  renderResetButton() {\n\n    const {\n      id,\n    } = this.getObjectWithMutations() || {}\n\n    return id ? super.renderResetButton() : null;\n  }\n\n\n\n  render() {\n\n    const object = this.getObjectWithMutations();\n\n    if (!object) {\n      return null;\n    }\n\n    const {\n      classes,\n    } = this.props;\n\n    return <div\n      className={classes.root}\n    >\n\n      {super.render()}\n\n    </div>\n\n  }\n}\n\n\nconst processors = compose(\n\n  graphql(createTaskProcessor, {\n    name: \"createTask\",\n  }),\n  graphql(updateTaskProcessor, {\n    name: \"updateTask\",\n  }),\n  // graphql(createTimerProcessor, {\n  //   name: \"createTimer\",\n  // }),\n  // graphql(updateTimerProcessor, {\n  //   name: \"updateTimer\",\n  // }),\n\n);\n\nexport {\n  processors,\n}\n\nexport default processors(withStyles(styles)(props => <TaskView\n  {...props}\n/>));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  TaskView as CooperatorTaskView,\n  styles,\n  TaskLink,\n  // updateTaskProcessor,\n  // createTimerProcessor,\n  // updateTimerProcessor,\n  processors,\n} from \"../../../../../Tasks/View/Task\";\n\nimport { withStyles } from 'material-ui';\nimport { Grid } from '@modxclub/ui';\n// import { graphql, compose } from 'react-apollo';\n\nclass TaskView extends CooperatorTaskView {\n\n  // static propTypes = {\n  //   item: PropTypes.object.isRequired,\n  // };\n\n\n  renderHeader() {\n\n    return null;\n  }\n\n\n\n  renderDefaultView() {\n\n    const object = this.getObjectWithMutations();\n\n    const inEditMode = this.isInEditMode();\n\n    let output;\n\n    if (inEditMode) {\n      output = this.getTextField({\n        name: \"name\",\n        label: \"Название задачи\",\n      });\n    }\n    else {\n\n      output = <TaskLink\n        object={object}\n      />;\n    }\n\n    return <Grid\n      container\n      spacing={8}\n      alignItems=\"center\"\n    >\n      <Grid\n        item\n        xs={inEditMode}\n      >\n\n        {output}\n      </Grid>\n\n      <Grid\n        item\n      >\n        {this.getButtons()}\n      </Grid>\n\n      <Grid\n        item\n      >\n        {this.renderActiveTimers()}\n      </Grid>\n\n\n    </Grid>\n\n  }\n\n}\n\n\nexport default processors(withStyles(styles)(props => <TaskView \n  {...props}\n/>));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Task from \"./Task\";\nimport { Typography } from 'material-ui';\nimport { Link } from '@modxclub/ui';\n\nclass TasksList extends Component {\n\n  static propTypes = {\n    tasks: PropTypes.array.isRequired,\n    tasksLimit: PropTypes.number,\n  }\n\n  render() {\n\n    const {\n      tasks,\n      tasksLimit,\n    } = this.props;\n\n    let output = null;\n\n    if (!tasks) {\n      return null;\n    }\n\n    if (tasks.length) {\n      output = tasks.map((n, index) => {\n\n        if (tasksLimit > 0 && tasksLimit < index + 1) {\n          return;\n        }\n\n        const {\n          id,\n        } = n;\n\n        return <Task\n          key={id}\n          data={{\n            object: n,\n          }}\n        />\n      });\n    }\n    else {\n      output = <Typography\n        color=\"textSecondary\"\n      >\n        Нет задач\n      </Typography>\n    }\n\n    return output;\n  }\n}\n\n\nexport default TasksList;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  styles,\n  ProjectView as BaseProjectView,\n} from \"../../Project\";\n\nimport { withStyles } from 'material-ui';\n\n\nimport { Typography } from 'material-ui';\n\n\nimport {\n  CardContent,\n} from 'material-ui/Card';\n\nimport {\n  Link,\n} from \"@modxclub/ui\"\n\nimport TasksListView from \"../../Project/Tasks\";\n\n\nclass ProjectView extends BaseProjectView {\n\n\n\n\n  renderTasks() {\n\n    const {\n      id: projectId,\n      Tasks,\n    } = this.getObjectWithMutations() || {};\n\n    const {\n      tasksLimit,\n    } = this.props;\n\n    const showDetails = false;\n\n    return Tasks && <CardContent>\n\n      <Typography\n        variant=\"subheading\"\n      >\n        Задачи в проекте\n      </Typography>\n\n      <TasksListView\n        tasks={Tasks}\n        showDetails={showDetails}\n        tasksLimit={tasksLimit}\n      />\n\n      <Link\n        to={`/tasks/create/${projectId}`}\n      >\n        <Typography\n        >\n          Поставить задачу\n        </Typography>\n      </Link>\n\n    </CardContent> || null;\n\n  }\n\n\n\n  // renderEditableView() {\n\n  //   return this.renderDefaultView();\n\n  // }\n\n\n}\n\nexport default withStyles(styles)(props => <ProjectView \n  {...props}\n/>);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { graphql } from 'react-apollo';\n\nimport {\n  // createProjectProcessor,\n  updateProjectProcessor,\n} from \"../../query\";\n\nimport Project from \"./Project\";\n\nimport {\n  Grid,\n} from \"@modxclub/ui\";\n\n// const NewProject = graphql(createProjectProcessor)(Project);\nconst UpdateProject = graphql(updateProjectProcessor)(Project);\n\nclass ProjectsList extends Component {\n\n  static propTypes = {\n    projects: PropTypes.array.isRequired,\n  };\n\n  static defaultProps = {\n  };\n  \n\n  render() {\n\n    const {\n      projects,\n    } = this.props;\n\n    return <Grid\n      container\n      spacing={16}\n    >\n\n      {projects.map(n => {\n        const {\n          id,\n        } = n;\n\n        return <Grid\n          key={id}\n          item\n          xs={12}\n          sm={6}\n          md={4}\n          lg={3}\n        >\n          <UpdateProject\n            data={{\n              object: n,\n            }}\n            tasksLimit={3}\n          />\n        </Grid>\n      })}\n\n    </Grid>\n  }\n}\n\n\nexport default ProjectsList;","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport { Typography } from 'material-ui';\n \n\nimport Context from \"@prisma-cms/context\";\nimport Filters from \"@prisma-cms/filters\";\n\nimport ProjectsList from \"./List\";\n\nclass ProjectsView extends Component {\n\n  static contextType = Context;\n\n\n  static propTypes = {\n    filters: PropTypes.object,\n    setFilters: PropTypes.func,\n  };\n\n\n  renderFilters() {\n\n    const {\n      filters,\n      setFilters,\n    } = this.props;\n\n    return filters && setFilters ? <Filters\n      queryName=\"projects\"\n      filters={filters}\n      setFilters={setFilters}\n    /> : null;\n  }\n\n\n  \n  render() {\n\n    const  {\n      Pagination,\n      Link,\n      Grid,\n    } = this.context;\n    \n    const {\n      page,\n    } = this.props;\n\n\n\n    const {\n      objectsConnection,\n      loading,\n      variables: {\n        first: limit,\n      },\n    } = this.props.data;\n\n\n    const {\n      edges,\n      aggregate,\n    } = objectsConnection || {};\n\n    const {\n      count = 0,\n    } = aggregate || {};\n\n\n    let output;\n\n    if (!edges || !edges.length) {\n\n      if (loading) {\n        output = null;\n      }\n      else {\n        output = <Typography\n          variant=\"title\"\n        >\n          Данные не были получены\n        </Typography>\n      }\n\n    }\n    else {\n\n      let projects = edges.map(n => n.node);\n\n      output = <Grid\n        item\n        xs={12}\n\n      >\n\n        <ProjectsList\n          projects={projects}\n        />\n\n        <Pagination\n          limit={limit}\n          total={count}\n          page={page || 1}\n          style={{\n            marginTop: 20,\n          }}\n        />\n      </Grid>\n\n    }\n\n\n\n\n    let content = <Grid\n      container\n      spacing={8}\n    >\n\n      <Grid\n        item\n        xs={12}\n\n      >\n        {this.renderFilters()}\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n\n      >\n        <Link\n          to=\"/projects/create\"\n        >\n          <Typography\n\n          >\n            Добавить проект\n          </Typography>\n        </Link>\n      </Grid>\n\n      {output}\n\n    </Grid>\n\n\n    return (content);\n  }\n}\n\n\nexport default ProjectsView;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../../layout\";\n\nimport {\n  ProjectsConnector,\n} from \"./query\";\n\nimport View from \"./View\";\n\n\nclass ProjectsPage extends Page {\n\n  static propTypes = {\n    ...Page.propTypes,\n    first: PropTypes.number.isRequired,\n    orderBy: PropTypes.string.isRequired,\n  };\n\n\n  static defaultProps = {\n    ...Page.defaultProps,\n    first: 12,\n    orderBy: \"updatedAt_DESC\",\n    View,\n  }\n\n\n\n  setPageMeta(meta) {\n\n    return super.setPageMeta(meta || {\n      title: \"Проекты\",\n      ...meta,\n    });\n\n  }\n\n  setFilters(filters) {\n\n    const {\n      uri,\n      router: {\n        history,\n      },\n    } = this.context;\n\n\n\n    let newUri = uri.clone();\n\n    try {\n\n      filters = filters ? JSON.stringify(filters) : undefined;\n    }\n    catch (error) {\n      console.error(error);\n    }\n\n    if (filters) {\n\n      if (newUri.hasQuery) {\n        newUri = newUri.setQuery({\n          filters,\n        });\n      }\n      else {\n        newUri = newUri.addQuery({\n          filters,\n        });\n      }\n\n    }\n    else {\n\n      newUri.removeQuery(\"filters\");\n\n    }\n\n    newUri.removeQuery(\"page\");\n\n\n    const url = newUri.resource();\n\n\n\n    history.push(url);\n\n  }\n\n\n  render() {\n\n    let {\n      first,\n      where: propsWhere,\n      ...other\n    } = this.props;\n\n    const {\n      uri,\n    } = this.context;\n\n\n    let {\n      page,\n      filters,\n    } = uri.query(true);\n\n\n    try {\n      filters = filters && JSON.parse(filters) || null;\n    }\n    catch (error) {\n      console.error(console.error(error));\n    }\n\n\n    let AND = [];\n\n    if (propsWhere) {\n      AND.push(propsWhere);\n    }\n\n\n    if (filters) {\n      AND.push(filters);\n    }\n\n\n    let where = {\n      AND,\n    }\n\n\n    let skip;\n\n    page = page && parseInt(page) || 0;\n\n    if (first && page > 1) {\n      skip = (page - 1) * first;\n    }\n\n    return super.render(\n      <ProjectsConnector\n        where={where}\n        first={first}\n        skip={skip}\n        page={page ? parseInt(page) : undefined}\n        filters={filters || {}}\n        setFilters={filters => this.setFilters(filters)}\n        {...other}\n      />\n    );\n  }\n}\n\n\nexport default ProjectsPage;","\n/**\n * Страница не совсем проекта.\n * В данном случае проект получаем через страницу, то есть уникальное поле - uri,\n * оно только у ресурса есть.\n * По этой причине получаем ресурс, а из него уже получает проект\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../../../layout\";\n\nimport PageNotFound from \"../../../404\";\nimport { graphql } from 'react-apollo';\n\nimport {\n  // Project as ProjectQuery,\n  ProjectResource as ProjectResourceQuery,\n  createProjectProcessor,\n  updateProjectProcessor,\n} from \"../query\";\n\n\nimport ProjectView from \"../View/Project\";\n\nimport { Typography } from 'material-ui';\n\nconst UpdateProject = graphql(updateProjectProcessor)(ProjectView);\nconst CreateProject = graphql(createProjectProcessor)(ProjectView);\n\n\nexport class ProjectPage extends Page {\n\n  static propTypes = {\n    ...Page.propTypes,\n    showDetails: PropTypes.bool.isRequired,\n  };\n\n\n  static defaultProps = {\n    ...Page.defaultProps,\n    showDetails: true,\n  }\n\n\n\n  setPageMeta(meta = {}) {\n\n    const {\n      data: {\n        object: Resource,\n      },\n    } = this.props;\n    \n    const {\n      Project: project,\n      uri,\n    } = Resource || {};\n\n\n    if (!project) {\n      return;\n    }\n\n    const {\n      name,\n    } = project;\n\n    return super.setPageMeta({\n      title: `Проект ${name}`,\n      canonical: uri,\n      ...meta,\n    });\n\n  }\n\n\n  render() {\n\n    const {\n      data,\n      ...other\n    } = this.props;\n\n    const {\n      object: resource,\n      loading,\n    } = data;\n\n    const {\n      Project: project,\n    } = resource || {};\n\n    if (!project) {\n\n      if (loading) {\n        return null;\n      }\n      else {\n        return <PageNotFound />\n      }\n    }\n\n\n    const {\n      id: projectId,\n    } = project;\n\n    let Mutation;\n\n    if (projectId) {\n      Mutation = UpdateProject;\n    }\n    else {\n      Mutation = CreateProject;\n    }\n\n    return super.render(\n      <div>\n        <Mutation\n          data={{\n            loading,\n            object: project,\n          }}\n          {...other}\n        />\n      </div>\n    );\n  }\n}\n\n\nexport default (props) => {\n\n  // return <ProjectQuery\n  return <ProjectResourceQuery\n    View={ProjectPage}\n    {...props}\n  />\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ProjectPage,\n} from \"../\";\n\nclass CreateProjectPage extends Component {\n\n\n  onSave(result) {\n\n    if (result) {\n\n      const {\n        data: object,\n      } = result.data && result.data.response || {}\n\n\n      const {\n        // id,\n        Resource,\n      } = object || {};\n\n      const {\n        uri,\n      } = Resource || {};\n\n      // if (id) {\n\n      //   const {\n      //     history,\n      //   } = this.props;\n\n      //   history.push(`/projects/${id}/`);\n      // }\n\n      if (uri) {\n\n        const {\n          history,\n        } = this.props;\n\n        history.push(uri);\n      }\n\n    }\n\n  }\n\n\n  render() {\n\n    return <ProjectPage\n      data={{\n        object: {\n          Project: {},\n        }\n      }}\n      _dirty={{\n        name: \"\",\n      }}\n      onSave={result => this.onSave(result)}\n    />\n  }\n}\n\n\nexport default CreateProjectPage;","\nimport React, { Fragment } from \"react\";\nimport PropTypes from 'prop-types';\n\n// import CooperationTasksPage from \"@prisma-cms/cooperation/lib/components/pages/Tasks\";\n\nimport Page from \"../../layout\";\n// import View from \"./View/Gantt\";\n\n\nimport {\n  TasksPage as PrismaCmsTasksPage,\n} from \"@prisma-cms/cooperation\"\n\n\nexport class TasksPage extends Page {\n\n\n  render() {\n\n\n    return super.render(<PrismaCmsTasksPage\n      {...this.props}\n    />)\n\n  }\n\n}\n\n\n// export class TasksPage extends Page {\n\n//   static propTypes = {\n//     ...Page.propTypes,\n//   };\n\n\n//   static defaultProps = {\n//     ...Page.defaultProps,\n//     View,\n//   }\n\n\n\n\n//   render() {\n\n\n//     let {\n//       ...other\n//     } = this.props;\n\n\n//     return (<Fragment>\n\n//       <style\n//         dangerouslySetInnerHTML={{\n//           __html: `\n//             #root {\n//               display: flex;\n//               flex-direction: column;\n//             }\n//           `,\n//         }}\n//       />\n\n//       <CooperationTasksPage\n//         {...other}\n//       />\n\n//     </Fragment>);\n//   }\n\n// }\n\nexport default TasksPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../../../layout\";\n\nimport CooperationTaskPage from \"@prisma-cms/cooperation/lib/components/pages/Tasks/Task\";\n\n\nexport class TaskPage extends Page {\n\n\n  render() {\n\n    return super.render(<CooperationTaskPage\n      {...this.props}\n    />);\n  }\n\n}\n\n\nexport default TaskPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// import {\n//   TaskPage,\n// } from \"../\";\n\nimport {\n  TaskPage,\n} from \"@prisma-cms/cooperation/lib/components/pages/Tasks/Task\";\n\nclass CreateTaskPage extends Component {\n\n\n  onSave(result) {\n\n\n    if (result) {\n\n      const {\n        data: object,\n      } = result.data && result.data.response || {}\n\n\n      const {\n        id,\n      } = object || {};\n\n      if (id) {\n\n        const {\n          history,\n        } = this.props;\n\n        history.push(`/tasks/${id}/`);\n      }\n\n    }\n\n  }\n\n\n  render() {\n\n    const {\n      match: {\n        params: {\n          projectId,\n        },\n      },\n    } = this.props;\n\n    return <TaskPage\n      data={{\n        object: {}\n      }}\n      _dirty={{\n        name: \"\",\n        Project: projectId ? {\n          connect: {\n            id: projectId,\n          },\n        } : undefined,\n      }}\n      onSave={result => this.onSave(result)}\n    />\n  }\n}\n\n\nexport default CreateTaskPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../../layout\";\n\n// import {\n//   TimersConnector,\n// } from \"./query\";\n\n// import View from \"./View\";\n\nimport {\n  TimersPage as PrismaCmsTimersPage,\n} from \"@prisma-cms/cooperation\";\n\nclass TimersPage extends Page {\n\n  // static propTypes = {\n  //   ...Page.propTypes,\n  //   first: PropTypes.number.isRequired,\n  //   orderBy: PropTypes.string.isRequired,\n  // };\n\n\n  // static defaultProps = {\n  //   ...Page.defaultProps,\n  //   first: 10,\n  //   orderBy: \"createdAt_DESC\",\n  //   View,\n  // }\n\n\n\n  // setPageMeta(meta = {}) {\n\n  //   return super.setPageMeta({\n  //     title: \"Таймеры\",\n  //     ...meta,\n  //   });\n\n  // }\n\n\n  render() {\n\n    // let {\n    //   first,\n    //   where,\n    //   ...other\n    // } = this.props;\n\n    // const {\n    //   uri,\n    // } = this.context;\n\n\n    // let {\n    //   page,\n    // } = uri.query(true);\n\n\n\n    // let skip;\n\n    // page = page && parseInt(page) || 0;\n\n    // if (first && page > 1) {\n    //   skip = (page - 1) * first;\n    // }\n\n    return super.render(\n      <PrismaCmsTimersPage\n        // where={where}\n        // first={first}\n        // skip={skip}\n        // page={page ? parseInt(page) : undefined}\n        {...this.props}\n      />\n    );\n  }\n}\n\n\nexport default TimersPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../../../layout\";\n\nimport PageNotFound from \"../../../404\";\nimport { graphql } from 'react-apollo';\n\nimport {\n  Timer as TimerQuery,\n  updateTimerProcessor,\n} from \"../query\";\n\n\nimport TimerView from \"../View/Timer\";\n\n// import { Typography } from 'material-ui';\n\n// import {\n//   Link,\n// } from \"../../../../components/ui\";\n\nconst UpdateTimer = graphql(updateTimerProcessor)(TimerView);\n\n\nclass TimerPage extends Page {\n\n  static propTypes = {\n    ...Page.propTypes,\n  };\n\n\n  static defaultProps = {\n    ...Page.defaultProps,\n  }\n\n\n\n  setPageMeta(meta = {}) {\n\n    const {\n      data: {\n        object: timer,\n      },\n    } = this.props;\n\n\n    if (!timer) {\n      return;\n    }\n\n    const {\n      Task: Task,\n    } = timer;\n\n    const {\n      name,\n    } = Task || {};\n\n    return super.setPageMeta({\n      title: `Таймер к задаче ${name}`,\n      ...meta,\n    });\n\n  }\n\n\n  render() {\n\n    const {\n      data,\n      ...other\n    } = this.props;\n\n    const {\n      object: timer,\n      loading,\n    } = data;\n\n    if (!timer) {\n\n      if (loading) {\n        return null;\n      }\n      else {\n        return <PageNotFound />\n      }\n    }\n\n    return super.render(\n      <div>\n        <UpdateTimer\n          data={data}\n          linkType=\"target\"\n          {...other}\n        />\n      </div>\n    );\n  }\n}\n\n\nexport default (props) => {\n\n  return <TimerQuery\n    View={TimerPage}\n    {...props}\n  />\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from '../../layout';\n\nimport {\n  TransactionsPage as BaseTransactionsPage,\n} from \"@prisma-cms/ethereum\";\n\n\nclass TransactionsPage extends Page {\n\n\n  setPageMeta(meta) {\n\n    return super.setPageMeta(meta || {\n      title: \"Транзакции Ethereum\",\n      ...meta,\n    });\n\n  }\n\n\n  render() {\n\n    return super.render(<BaseTransactionsPage\n      {...this.props}\n    />);\n  }\n}\n\n\nexport default TransactionsPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from '../../../layout';\n\nimport {\n  TransactionPage as BaseTransactionPage,\n} from \"@prisma-cms/ethereum\";\n\n\nclass TransactionPage extends Page {\n\n  render() {\n\n    return super.render(<BaseTransactionPage\n      {...this.props}\n    />);\n  }\n}\n\n\nexport default TransactionPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../../layout\";\n\nimport {\n  ChatRooms,\n} from \"@prisma-cms/society\";\n\n\nclass ChatRoomsPage extends Page {\n\n\n  setPageMeta() {\n\n    return super.setPageMeta({\n      title: \"Чаты\",\n    });\n\n  }\n\n\n  render() {\n\n    return super.render(\n      <ChatRooms\n        {...this.props}\n      />\n    );\n  }\n}\n\n\nexport default ChatRoomsPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../../../layout\";\n\n// import {\n//   ChatRoom,\n// } from \"@prisma-cms/society\";\n\nimport ChatRoom from \"@prisma-cms/webrtc/lib/components/pages/society/ChatRooms/ChatRoom\";\n\n\nclass ChatRoomPage extends Page {\n\n\n  // setPageMeta() {\n\n  //   return super.setPageMeta({\n  //     title: \"Чаты\",\n  //   });\n\n  // }\n\n\n  render() {\n\n    return super.render(\n      <ChatRoom\n        {...this.props}\n      />\n    );\n  }\n}\n\n\nexport default ChatRoomPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../../../../layout\";\n\nimport {\n  CreateChatRoom,\n} from \"@prisma-cms/society\";\n\n\nclass CreateChatRoomPage extends Page {\n\n\n  setPageMeta() {\n\n    return super.setPageMeta({\n      title: \"Создать новую чат-комнату\",\n    });\n\n  }\n\n\n  render() {\n\n    return super.render(\n      <CreateChatRoom\n        {...this.props}\n      />\n    );\n  }\n}\n\n\nexport default CreateChatRoomPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../../layout\";\n\nimport {\n  ChatMessages,\n} from \"@prisma-cms/society\";\n\n\nclass ChatMessagesPage extends Page {\n\n\n  setPageMeta() {\n\n    return super.setPageMeta({\n      title: \"Сообщения в чатах\",\n    });\n\n  }\n\n\n  render() {\n\n    return super.render(\n      <ChatMessages\n        {...this.props}\n      />\n    );\n  }\n}\n\n\nexport default ChatMessagesPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../../../layout\";\n\nimport {\n  ChatMessage,\n} from \"@prisma-cms/society\";\n\n\nclass ChatMessagePage extends Page {\n\n  render() {\n\n    return super.render(\n      <ChatMessage\n        {...this.props}\n      />\n    );\n  }\n}\n\n\nexport default ChatMessagePage;","\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport gql from \"graphql-tag\";\n\n// import CooperationSubscriptionProvider from \"@prisma-cms/cooperation/lib/components/SubscriptionProvider\";\n\nexport default class SubscriptionProvider extends Component {\n\n  static propTypes = {\n    client: PropTypes.object.isRequired,\n    loadApiData: PropTypes.func.isRequired,\n    user: PropTypes.object,\n  }\n\n\n  static contextTypes = {\n  };\n\n\n  state = {\n    subscriptions: [],\n  }\n\n\n  componentDidMount() {\n\n    this.subscribe();\n\n  }\n\n  componentWillUnmount() {\n\n    this.unsubscribe();\n\n  }\n\n\n\n  async subscribe() {\n\n\n\n    const {\n      client,\n      loadApiData,\n    } = this.props;\n\n\n    const {\n      localStorage,\n    } = this.context;\n\n\n    await this.unsubscribe();\n\n\n    let {\n      subscriptions,\n    } = this.state;\n\n\n\n    // const subscribeUser = gql`\n    //   subscription user{\n    //     user{\n    //       mutation\n    //       node{\n    //         id\n    //       }\n    //     }\n    //   }\n    // `;\n\n    // const userSub = await client\n    //   .subscribe({\n    //     query: subscribeUser,\n    //     variables: {\n    //     },\n    //   })\n    //   .subscribe({\n    //     next: async (data) => {\n\n    //       await client.reFetchObservableQueries();\n\n    //     },\n    //     error(error) {\n    //       console.error('subscribeCalls callback with error: ', error)\n    //     },\n    //   });\n\n    // subscriptions.push(userSub);\n\n\n    // const subscribeResource = gql`\n    //   subscription resource{\n    //     resource{\n    //       mutation\n    //       node{\n    //         id\n    //       }\n    //     }\n    //   }\n    // `;\n\n    // const resourceSub = await client\n    //   .subscribe({\n    //     query: subscribeResource,\n    //     variables: {\n    //     },\n    //   })\n    //   .subscribe({\n    //     next: async (data) => {\n\n    //       await client.reFetchObservableQueries();\n\n    //     },\n    //     error(error) {\n    //       console.error('subscribeCalls callback with error: ', error)\n    //     },\n    //   });\n\n    // subscriptions.push(resourceSub);\n\n\n    // const subscribeEthTransaction = gql`\n    //   subscription ethTransaction{\n    //     ethTransaction{\n    //       mutation\n    //       node{\n    //         id\n    //       }\n    //     }\n    //   }\n    // `;\n\n    // const ethTransactionSub = await client\n    //   .subscribe({\n    //     query: subscribeEthTransaction,\n    //     variables: {\n    //     },\n    //   })\n    //   .subscribe({\n    //     next: async (data) => {\n\n    //       await loadApiData();\n\n    //       await client.reFetchObservableQueries();\n\n    //     },\n    //     error(error) {\n    //       console.error('subscribeCalls callback with error: ', error)\n    //     },\n    //   });\n\n    // subscriptions.push(ethTransactionSub);\n\n\n\n    this.setState({\n      subscriptions,\n    });\n\n  }\n\n\n  unsubscribe() {\n\n\n    return new Promise((resolve) => {\n\n      const {\n        subscriptions,\n      } = this.state;\n\n      if (subscriptions && subscriptions.length) {\n\n\n        subscriptions.map(n => {\n          n.unsubscribe();\n        });\n\n        Object.assign(this.state, {\n          subscriptions: [],\n        });\n\n      }\n\n      resolve();\n\n    });\n\n  }\n\n\n  render() {\n\n    const {\n      children,\n      user,\n      client,\n      loadApiData,\n      ...other\n    } = this.props;\n\n    return children || null\n\n  }\n\n}","import React, { Component } from 'react';\nimport Button from 'material-ui/Button';\nimport Snackbar from 'material-ui/Snackbar';\n\nimport Page from '../../../layout';\n\nimport { Link } from \"react-router-dom\";\n\nexport default class Lesson1Page extends Page {\n\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      ...super.state,\n      open: false,\n      vertical: null,\n      horizontal: null,\n    }\n\n  }\n\n\n  handleClick = state => () => {\n    this.setState({ open: true, ...state });\n  };\n\n  handleRequestClose = () => {\n    this.setState({ open: false });\n  };\n\n\n  render() {\n\n    const { vertical, horizontal, open } = this.state;\n\n    return super.render(\n      <div>\n        <Button onClick={this.handleClick({ vertical: 'top', horizontal: 'left' })}>\n          Top-Left\n        </Button>\n        <Button onClick={this.handleClick({ vertical: 'top', horizontal: 'center' })}>\n          Top-Center\n        </Button>\n        <Button onClick={this.handleClick({ vertical: 'top', horizontal: 'right' })}>\n          Top-Right\n        </Button>\n        <br />\n        <Button onClick={this.handleClick({ vertical: 'bottom', horizontal: 'left' })}>\n          Bottom-Left\n        </Button>\n        <Button onClick={this.handleClick({ vertical: 'bottom', horizontal: 'center' })}>\n          Bottom-Center\n        </Button>\n        <Button onClick={this.handleClick({ vertical: 'bottom', horizontal: 'right' })}>\n          Bottom-Right\n        </Button>\n        <Snackbar\n          anchorOrigin={{ vertical, horizontal }}\n          open={open}\n          onClose={this.handleRequestClose}\n          SnackbarContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">I love snacks</span>}\n        />\n\n        <div\n          style={{\n            margin: \"20px 0 0 15px\",\n          }}\n        >\n          <Link\n            to=\"/topics/react-js.-urok-№1.-byistryij-start-2616.html\"\n          >\n            Статья\n          </Link>.\n        </div>\n      </div>\n    );\n  }\n} ","\nimport React, {\n  Component,\n} from 'react';\n\n\nimport Context from '@prisma-cms/context';\n\nimport * as UI from \"@modxclub/ui\"\n\nclass ContextProvider extends Component {\n\n  static contextType = Context;\n\n\n  render() {\n\n    const {\n      children,\n    } = this.props;\n\n    let {\n      query,\n    } = this.context;\n\n    Object.assign(this.context, {\n      query: {\n        ...query,\n        ...this.prepareQuery(),\n      },\n      // query: query ? Object.assign(query, {\n      //   ...this.prepareQuery(),\n      // }) : query,\n      ...UI,\n    });\n\n    return <Context.Provider\n      value={this.context}\n    >\n      {children || null}\n    </Context.Provider>;\n\n  }\n\n\n  prepareQuery() {\n\n\n    return {\n      ...this.prepareUserQuery(),\n      ...this.prepareResourcesQuery(),\n      ...this.prepareTaskQuery(),\n      ...this.prepareTimerQuery(),\n      ...this.prepareProjectQuery(),\n    }\n\n  }\n\n\n  prepareUserQuery() {\n    const {\n      queryFragments,\n    } = this.context;\n\n\n    const {\n      UserNoNestingFragment,\n      EthAccountNoNestingFragment,\n      NotificationTypeNoNestingFragment,\n      ProjectNoNestingFragment,\n      ProjectMemberNoNestingFragment,\n      ResourceNoNestingFragment,\n      BatchPayloadNoNestingFragment,\n    } = queryFragments;\n\n\n    const userFragment = `\n      fragment user on User {\n        ...UserNoNesting\n        EthAccounts{\n          ...EthAccountNoNesting\n        }\n        NotificationTypes{\n          ...NotificationTypeNoNesting\n        }\n        Projects{\n          ...ProjectMemberNoNesting\n          Project{\n            ...ProjectNoNesting\n            Resource{\n              ...ResourceNoNesting\n            }\n          }\n        }\n        ProjectsCreated{\n          ...ProjectNoNesting\n          Resource{\n            ...ResourceNoNesting\n          }\n        }\n      }\n\n      ${UserNoNestingFragment}\n      ${EthAccountNoNestingFragment}\n      ${NotificationTypeNoNestingFragment}\n      ${ProjectNoNestingFragment}\n      ${ProjectMemberNoNestingFragment}\n      ${ResourceNoNestingFragment}\n    `;\n\n\n    const usersConnection = `\n      query usersConnection (\n        $where: UserWhereInput\n        $orderBy: UserOrderByInput\n        $skip: Int\n        $after: String\n        $before: String\n        $first: Int\n        $last: Int\n      ){\n        objectsConnection: usersConnection (\n          where: $where\n          orderBy: $orderBy\n          skip: $skip\n          after: $after\n          before: $before\n          first: $first\n          last: $last\n        ){\n          aggregate{\n            count\n          }\n          edges{\n            node{\n              ...user\n            }\n          }\n        }\n      }\n\n      ${userFragment}\n    `;\n\n\n    const users = `\n      query users (\n        $where: UserWhereInput\n        $orderBy: UserOrderByInput\n        $skip: Int\n        $after: String\n        $before: String\n        $first: Int\n        $last: Int\n      ){\n        objects: users (\n          where: $where\n          orderBy: $orderBy\n          skip: $skip\n          after: $after\n          before: $before\n          first: $first\n          last: $last\n        ){\n          ...user\n        }\n      }\n\n      ${userFragment}\n    `;\n\n\n    const user = `\n      query user (\n        $where: UserWhereUniqueInput!\n      ){\n        object: user(\n          where: $where\n        ){\n          ...user\n        }\n      }\n\n      ${userFragment}\n    `;\n\n\n    const createUserProcessor = `\n      mutation createUserProcessor(\n        $data: UserCreateInput!\n      ) {\n        response: createUserProcessor(\n          data: $data\n        ){\n          success\n          message\n          errors{\n            key\n            message\n          }\n          data{\n            ...user\n          }\n        }\n      }\n\n      ${userFragment}\n    `;\n\n\n    const updateUserProcessor = `\n      mutation updateUserProcessor(\n        $data: UserUpdateInput!\n        $where: UserWhereUniqueInput\n      ) {\n        response: updateUserProcessor(\n          data: $data\n          where: $where\n        ){\n          success\n          message\n          errors{\n            key\n            message\n          }\n          data{\n            ...user\n          }\n        }\n      }\n\n      ${userFragment}\n    `;\n\n\n    const deleteUser = `\n      mutation deleteUser (\n        $where: UserWhereUniqueInput!\n      ){\n        deleteUser(\n          where: $where\n        ){\n          ...UserNoNesting\n        }\n      }\n      ${UserNoNestingFragment}\n    `;\n\n\n    const deleteManyUsers = `\n      mutation deleteManyUsers (\n        $where: UserWhereInput\n      ){\n        deleteManyUsers(\n          where: $where\n        ){\n          ...BatchPayloadNoNesting\n        }\n      }\n      ${BatchPayloadNoNestingFragment}\n    `;\n\n\n    return {\n      usersConnection,\n      users,\n      user,\n      createUserProcessor,\n      updateUserProcessor,\n      deleteUser,\n      deleteManyUsers,\n    }\n  }\n\n\n  prepareResourcesQuery() {\n\n    const {\n      queryFragments: {\n        ResourceNoNestingFragment,\n        UserNoNestingFragment,\n      },\n    } = this.context;\n\n\n    const blogFragment = `\n      fragment blog on Resource{\n        ...ResourceNoNesting\n        CreatedBy{\n          ...UserNoNesting\n        }\n      }\n      ${ResourceNoNestingFragment}\n      ${UserNoNestingFragment}\n    `;\n\n    const createBlogProcessor = `\n      mutation createBlogProcessor(\n        $data: BlogCreateInput!\n      ){\n        response: createBlogProcessor(\n          data: $data\n        ){\n          success\n          message\n          errors{\n            key\n            message\n          }\n          data{\n            ...blog\n          }\n        }\n      }\n\n      ${blogFragment}\n    `;\n\n    const updateBlogProcessor = `\n      mutation updateBlogProcessor(\n        $data: BlogUpdateInput!\n        $where: ResourceWhereUniqueInput!\n      ){\n        response: updateBlogProcessor(\n          data: $data\n          where: $where\n        ){\n          success\n          message\n          errors{\n            key\n            message\n          }\n          data{\n            ...blog\n          }\n        }\n      }\n\n      ${blogFragment}\n    `;\n\n\n    return {\n      createBlogProcessor,\n      updateBlogProcessor,\n    }\n  }\n\n\n  prepareTaskQuery() {\n\n\n    const {\n      queryFragments,\n    } = this.context;\n\n\n    const {\n      TaskNoNestingFragment,\n      TaskReactionNoNestingFragment,\n      UserNoNestingFragment,\n      TimerNoNestingFragment,\n      ProjectNoNestingFragment,\n    } = queryFragments;\n\n\n    const TaskFragment = `\n      fragment Task on Task{\n        ...TaskNoNesting\n\n        CreatedBy{\n          ...UserNoNesting\n        }\n\n        Timers(\n          orderBy: createdAt_DESC\n        ){\n          ...TimerNoNesting\n          CreatedBy{\n            ...UserNoNesting\n          }\n        }\n\n        Project{\n          ...ProjectNoNesting\n          CreatedBy{\n            ...UserNoNesting\n          }\n          Resource{\n            id\n            name\n            uri\n          }\n        }\n\n        RelatedTo{\n          ...TaskNoNesting\n        }\n\n        Reactions{\n          ...TaskReactionNoNesting\n          CreatedBy{\n            ...UserNoNesting\n          }\n        }\n        \n      }\n      \n      ${TaskNoNestingFragment}\n      ${TaskReactionNoNestingFragment}\n      ${UserNoNestingFragment}\n      ${TimerNoNestingFragment}\n      ${ProjectNoNestingFragment}\n    `\n\n\n    const tasksConnection = `\n      query tasksConnection (\n        $where: TaskWhereInput\n        $orderBy: TaskOrderByInput\n        $skip: Int\n        $after: String\n        $before: String\n        $first: Int\n        $last: Int\n      ){\n        objectsConnection: tasksConnection (\n          where: $where\n          orderBy: $orderBy\n          skip: $skip\n          after: $after\n          before: $before\n          first: $first\n          last: $last\n        ){\n          aggregate{\n            count\n          }\n          edges{\n            node{\n              ...Task\n            }\n          }\n        }\n      }\n\n      ${TaskFragment}\n    `;\n\n\n    const tasks = `\n      query tasks (\n        $where: TaskWhereInput\n        $orderBy: TaskOrderByInput\n        $skip: Int\n        $after: String\n        $before: String\n        $first: Int\n        $last: Int\n      ){\n        objects: tasks (\n          where: $where\n          orderBy: $orderBy\n          skip: $skip\n          after: $after\n          before: $before\n          first: $first\n          last: $last\n        ){\n          ...Task\n        }\n      }\n\n      ${TaskFragment}\n    `;\n\n\n    const task = `\n      query task (\n        $where: TaskWhereUniqueInput!\n      ){\n        object: task (\n          where: $where\n        ){\n          ...Task\n        }\n      }\n\n      ${TaskFragment}\n    `;\n\n\n    const createTaskProcessor = `\n      mutation createTaskProcessor(\n        $data: TaskCreateInput!\n      ) {\n        response: createTaskProcessor(\n          data: $data\n        ){\n          success\n          message\n          errors{\n            key\n            message\n          }\n          data{\n            ...Task\n          }\n        }\n      }\n\n      ${TaskFragment}\n    `;\n\n\n    const updateTaskProcessor = `\n      mutation updateTaskProcessor(\n        $data: TaskUpdateInput!\n        $where: TaskWhereUniqueInput!\n      ) {\n        response: updateTaskProcessor(\n          data: $data\n          where: $where\n        ){\n          success\n          message\n          errors{\n            key\n            message\n          }\n          data{\n            ...Task\n          }\n        }\n      }\n\n      ${TaskFragment}\n    `;\n\n\n    const taskStatusEnum = `\n      query {\n        objects: __type(\n          name: \"TaskStatus\"\n        ){\n          values: enumValues{\n            name\n            description\n          }\n        }\n      }\n    `;\n\n    return {\n      tasksConnection,\n      tasks,\n      task,\n      createTaskProcessor,\n      updateTaskProcessor,\n      taskStatusEnum,\n    }\n\n  }\n\n\n  prepareTimerQuery() {\n\n\n    const {\n      queryFragments,\n    } = this.context;\n\n\n    const {\n      TimerNoNestingFragment,\n      UserNoNestingFragment,\n      TaskNoNestingFragment,\n      ProjectNoNestingFragment,\n      ResourceNoNestingFragment,\n    } = queryFragments;\n\n    const TimerFragment = `\n      fragment Timer on Timer{\n        ...TimerNoNesting\n    \n        CreatedBy{\n          ...UserNoNesting\n        }\n    \n        Task {\n          ...TaskNoNesting\n    \n          Project{\n            ...ProjectNoNesting\n            Resource{\n              ...ResourceNoNesting\n            }\n          }\n    \n          CreatedBy{\n            ...UserNoNesting\n          }\n        }\n        \n      }\n      \n      ${TimerNoNestingFragment}\n      ${UserNoNestingFragment}\n      ${TaskNoNestingFragment}\n      ${ProjectNoNestingFragment}\n      ${ResourceNoNestingFragment}\n    `\n\n    const timersConnection = `\n      query timersConnection (\n        $where: TimerWhereInput\n        $orderBy: TimerOrderByInput\n        $skip: Int\n        $after: String\n        $before: String\n        $first: Int\n        $last: Int\n      ){\n        objectsConnection: timersConnection (\n          where: $where\n          orderBy: $orderBy\n          skip: $skip\n          after: $after\n          before: $before\n          first: $first\n          last: $last\n        ){\n          aggregate{\n            count\n          }\n          edges{\n            node{\n              ...Timer\n            }\n          }\n        }\n      }\n\n      ${TimerFragment}\n    `;\n\n\n    const timers = `\n      query timers (\n        $where: TimerWhereInput\n        $orderBy: TimerOrderByInput\n        $skip: Int\n        $after: String\n        $before: String\n        $first: Int\n        $last: Int\n      ){\n        objects: timers (\n          where: $where\n          orderBy: $orderBy\n          skip: $skip\n          after: $after\n          before: $before\n          first: $first\n          last: $last\n        ){\n          ...Timer\n        }\n      }\n\n      ${TimerFragment}\n    `;\n\n\n    const timer = `\n      query timer (\n        $where: TimerWhereUniqueInput!\n      ){\n        object: timer (\n          where: $where\n        ){\n          ...Timer\n        }\n      }\n\n      ${TimerFragment}\n    `;\n\n\n    const createTimerProcessor = `\n      mutation createTimerProcessor(\n        $data: TimerCreateInput!\n      ) {\n        response: createTimerProcessor(\n          data: $data\n        ){\n          success\n          message\n          errors{\n            key\n            message\n          }\n          data{\n            ...Timer\n          }\n        }\n      }\n\n      ${TimerFragment}\n    `;\n\n\n    const updateTimerProcessor = `\n      mutation updateTimerProcessor(\n        $data: TimerUpdateInput!\n        $where: TimerWhereUniqueInput!\n      ) {\n        response: updateTimerProcessor(\n          data: $data\n          where: $where\n        ){\n          success\n          message\n          errors{\n            key\n            message\n          }\n          data{\n            ...Timer\n          }\n        }\n      }\n\n      ${TimerFragment}\n    `;\n\n\n\n    return {\n      timersConnection,\n      timers,\n      timer,\n      createTimerProcessor,\n      updateTimerProcessor,\n    }\n\n  }\n\n\n  prepareProjectQuery() {\n\n\n    const {\n      queryFragments,\n    } = this.context;\n\n\n    const {\n      ProjectNoNestingFragment,\n      UserNoNestingFragment,\n      TaskNoNestingFragment,\n      TimerNoNestingFragment,\n    } = queryFragments;\n\n\n    const ProjectFragment = `fragment Project on Project {\n      ...ProjectNoNesting\n\n      CreatedBy{\n        ...UserNoNesting\n      }\n  \n      Members{\n        id\n        User{\n          ...UserNoNesting\n        }\n      }\n      \n      Tasks{\n        ...TaskNoNesting\n        Timers(\n          where:{\n            stopedAt: null\n          }\n        ){\n          ...TimerNoNesting\n          CreatedBy{\n            ...UserNoNesting\n          }\n        }\n        CreatedBy{\n          ...UserNoNesting\n        }\n        Parent {\n          ...TaskNoNesting\n        }\n      }\n      \n      Resource{\n        id\n        uri\n        Image{\n          id\n          path\n        }\n      }\n\n    }\n    \n      ${ProjectNoNestingFragment}\n      ${UserNoNestingFragment}\n      ${TaskNoNestingFragment}\n      ${TimerNoNestingFragment}\n    `;\n\n\n    const projectsConnection = `\n      query projectsConnection (\n        $where: ProjectWhereInput\n        $orderBy: ProjectOrderByInput\n        $skip: Int\n        $after: String\n        $before: String\n        $first: Int\n        $last: Int\n      ){\n        objectsConnection: projectsConnection (\n          where: $where\n          orderBy: $orderBy\n          skip: $skip\n          after: $after\n          before: $before\n          first: $first\n          last: $last\n        ){\n          aggregate{\n            count\n          }\n          edges{\n            node{\n              ...Project\n            }\n          }\n        }\n      }\n\n      ${ProjectFragment}\n    `;\n\n\n    const projects = `\n      query projects (\n        $where: ProjectWhereInput\n        $orderBy: ProjectOrderByInput\n        $skip: Int\n        $after: String\n        $before: String\n        $first: Int\n        $last: Int\n      ){\n        objects: projects (\n          where: $where\n          orderBy: $orderBy\n          skip: $skip\n          after: $after\n          before: $before\n          first: $first\n          last: $last\n        ){\n          ...Project\n        }\n      }\n\n      ${ProjectFragment}\n    `;\n\n\n    const project = `\n      query project (\n        $where: ProjectWhereUniqueInput!\n      ){\n        object: project (\n          where: $where\n        ){\n          ...Project\n        }\n      }\n\n      ${ProjectFragment}\n    `;\n\n\n    const createProjectProcessor = `\n      mutation createProjectProcessor(\n        $data: ProjectCreateInput!\n      ) {\n        response: createProjectProcessor(\n          data: $data\n        ){\n          success\n          message\n          errors{\n            key\n            message\n          }\n          data{\n            ...Project\n          }\n        }\n      }\n\n      ${ProjectFragment}\n    `;\n\n\n    const updateProjectProcessor = `\n      mutation updateProjectProcessor(\n        $data: ProjectUpdateInput!\n        $where: ProjectWhereUniqueInput!\n      ) {\n        response: updateProjectProcessor(\n          data: $data\n          where: $where\n        ){\n          success\n          message\n          errors{\n            key\n            message\n          }\n          data{\n            ...Project\n          }\n        }\n      }\n\n      ${ProjectFragment}\n    `;\n\n\n\n    return {\n      projectsConnection,\n      projects,\n      project,\n      createProjectProcessor,\n      updateProjectProcessor,\n    }\n\n  }\n\n}\n\nexport default ContextProvider;","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport AppBar from 'material-ui/AppBar';\n// import Toolbar from 'material-ui/Toolbar';\nimport Typography from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\n// import IconButton from 'material-ui/IconButton';\n\n\n// import CreateIcon from 'material-ui-icons/Create';\n\n\nimport UserItem from \"@prisma-cms/front/lib/components/App/Renderer/MainMenu/User\";\nimport { styles as defaultStyles } from \"@prisma-cms/front/lib/components/App/Renderer/MainMenu\";\nimport Language from \"@prisma-cms/front/lib/components/Language\";\n// import UserItem from \"./User\";\n\nimport { Link } from \"react-router-dom\";\nimport { Notices } from '@prisma-cms/society';\n// import { IconButton } from 'material-ui';\n\n// import Context from \"@prisma-cms/context\";\nimport PrismaCmsComponent from \"@prisma-cms/component\";\n\nimport {\n  CallRequestButtons,\n} from \"@prisma-cms/webrtc\";\n\nexport const styles = theme => {\n\n  const {\n    palette: {\n      background: {\n        default: backgroundColor,\n      },\n    },\n  } = theme;\n\n  return {\n    ...defaultStyles,\n    root: {\n      // flexGrow: 1,\n      backgroundColor,\n      position: \"relative\",\n    },\n    flex: {\n      flex: 1,\n    },\n    menuButton: {\n      marginLeft: 5,\n      // marginRight: -12,\n    },\n    fullWidth: {\n      width: \"100%\",\n    },\n  }\n};\n\n\nexport const locales = {\n  ru: {\n    values: {\n      \"Signin\": \"Войти\",\n      \"Signout\": \"Выход\",\n      \"Chats\": \"Чаты\",\n      \"Users\": \"Участники\",\n      \"Ethereum\": \"Ethereum\",\n      \"API Schema\": \"API схема\",\n    }\n  },\n};\n\n\nexport class MainMenu extends PrismaCmsComponent {\n\n  // static contextType = Context;\n\n  static propTypes = {\n    ...PrismaCmsComponent.propTypes,\n    classes: PropTypes.object.isRequired,\n  };\n\n\n  static defaultProps = {\n    ...PrismaCmsComponent.defaultProps,\n    locales,\n  }\n\n  render() {\n\n    const {\n      classes,\n      ...other\n    } = this.props;\n\n\n    const {\n      user: currentUser,\n      logout,\n      router: {\n        history,\n      },\n      Grid,\n    } = this.context;\n\n    const {\n      id: userId,\n    } = currentUser || {}\n\n    return (\n      <AppBar\n        // position=\"static\"\n        color=\"default\"\n        className={classes.root}\n      >\n\n        <Grid\n          container\n          alignItems=\"center\"\n          spacing={16}\n        >\n          <Grid\n            item\n            xs={12}\n            sm\n          >\n            <Link\n              to=\"/\"\n            >\n              <Typography\n                variant=\"title\"\n                // color=\"inherit\"\n                className={classes.link}\n              >\n                Prisma-CMS\n              </Typography>\n            </Link>\n\n          </Grid>\n\n          <Grid\n            item\n          >\n            <Link\n              to=\"/chat-rooms\"\n            >\n              <Typography\n                component=\"span\"\n                className={classes.link}\n              >\n                {this.lexicon(\"Chats\")}\n              </Typography>\n            </Link>\n          </Grid>\n\n          <Grid\n            item\n          >\n            <Link\n              to=\"/users\"\n            >\n              <Typography>\n                {this.lexicon(\"Users\")}\n              </Typography>\n            </Link>\n\n          </Grid>\n\n          <Grid\n            item\n          >\n            <Link\n              to=\"/eth-transactions\"\n            >\n              <Typography>\n                {this.lexicon(\"Ethereum\")}\n              </Typography>\n            </Link>\n\n          </Grid>\n\n          <Grid\n            item\n          >\n            <a\n              href=\"/graphql-voyager\"\n              rel=\"noindex,nofollow\"\n            >\n              <Typography>\n                {this.lexicon(\"API Schema\")}\n              </Typography>\n            </a>\n\n          </Grid>\n\n          <Grid\n            item\n          >\n            <a\n              href=\"/api/\"\n              rel=\"noindex,nofollow\"\n              target=\"_blank\"\n            >\n              <Typography>\n                {this.lexicon(\"Query Builder\")}\n              </Typography>\n            </a>\n\n          </Grid>\n\n\n          <Grid\n            item\n            xs\n          >\n          </Grid>\n\n\n          <Language\n          />\n\n          {currentUser ?\n            <Grid\n              key=\"callRequests\"\n              item\n            >\n              <CallRequestButtons\n                key={userId}\n                classes={{\n                  icon: classes.link,\n                }}\n              />\n            </Grid>\n            : null\n          }\n\n          {currentUser ?\n            <Grid\n              key=\"notifications\"\n              item\n            >\n              <Notices\n                key={userId}\n                user={currentUser}\n                classes={{\n                  icon: classes.link,\n                }}\n              />\n            </Grid>\n            : null\n          }\n\n          {currentUser\n            ?\n            <Fragment>\n\n              <Grid\n                key=\"user\"\n                item\n              >\n                <UserItem\n                  key={userId}\n                  user={currentUser}\n                  classes={classes}\n                />\n              </Grid>\n              <Grid\n                key=\"logout\"\n                item\n              >\n                <Button\n                  onClick={() => logout()}\n                  className={classes.link}\n                  size=\"small\"\n                >\n                  {this.lexicon(\"Signout\")}\n                </Button>\n\n              </Grid>\n            </Fragment>\n            :\n            <Grid\n              key=\"login\"\n              item\n            >\n              <Button\n                onClick={e => {\n                  // this.setState({\n                  //   opened: true,\n                  // });\n                  const {\n                    openLoginForm,\n                  } = this.context;\n                  openLoginForm();\n                }}\n                className={classes.link}\n                size=\"small\"\n              >\n                {this.lexicon(\"Signin\")}\n              </Button>\n\n            </Grid>\n          }\n        </Grid>\n\n      </AppBar>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(props => <MainMenu\n  {...props}\n/>);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport EditorComponent from \"@prisma-cms/front-editor/lib/components/App/components/\";\n\n// import Icon from \"material-ui-icons/SettingsOverscan\";\n\nimport CustomUserPage from \"../../../../../UsersPage/UserPage\";\n\nclass UserPage extends EditorComponent {\n\n  // static defaultProps = {\n  //   ...EditorComponent.defaultProps,\n  //   marginTop: 10,\n  //   marginBottom: 10,\n  // }\n\n  static Name = \"UserPage\"\n\n  renderPanelView() {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(<div\n      className={classes.panelButton}\n    >\n      {/* <Icon />  */}\n      User page\n    </div>);\n  }\n\n\n  renderChildren() {\n\n    // const {\n    //   ...other\n    // } = this.getComponentProps(this);\n\n\n    const {\n      parent,\n    } = this.props;\n\n    if (!parent) {\n      return false;\n    }\n\n    const {\n      props: {\n        match,\n      },\n    } = parent;\n\n\n\n    const {\n      params: where,\n    } = match || {};\n\n    if (!where) {\n      return null;\n    }\n\n    return <CustomUserPage\n      where={where}\n    />;\n  }\n\n}\n\nexport default UserPage;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\n\n\nimport UserLink from '@modxclub/ui/src/Link/User';\n\n\nexport default class UserMenuItem extends Component {\n\n  static defaultProps = {\n  }\n\n\n  static propTypes = {\n    user: PropTypes.object.isRequired,\n\n  }\n\n\n  static contextTypes = {\n    client: PropTypes.object.isRequired,\n  };\n\n\n  constructor(props) {\n\n    super(props);\n\n\n    this.state = {\n    };\n\n  }\n\n  componentDidMount() {\n\n\n  }\n\n\n  render() {\n\n    const {\n      user,\n    } = this.props;\n\n    return <UserLink\n      user={user}\n      // showName={false}\n      // style={{\n      //   margin: 0,\n      // }}\n    />;\n\n  }\n\n}\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport AppBar from 'material-ui/AppBar';\nimport Toolbar from 'material-ui/Toolbar';\nimport Typography from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\n// import IconButton from 'material-ui/IconButton';\n\nimport { Grid } from '@modxclub/ui';\n\nimport CreateIcon from 'material-ui-icons/Create';\n\n\n// import UserItem from \"@prisma-cms/front/lib/components/App/Renderer/MainMenu/User\";\nimport { styles as defaultStyles } from \"@prisma-cms/front/lib/components/App/Renderer/MainMenu\";\nimport Language from \"@prisma-cms/front/lib/components/Language\";\nimport UserItem from \"./User\";\n\nimport { Link } from \"react-router-dom\";\nimport { Notices } from '@prisma-cms/society';\nimport { IconButton } from 'material-ui';\n\nimport PrismaCmsComponent from \"@prisma-cms/component\";\n\nimport {\n  CallRequestButtons,\n} from \"@prisma-cms/webrtc\";\n\nexport const styles = theme => {\n\n  const {\n    palette: {\n      background: {\n        default: backgroundColor,\n      },\n    },\n  } = theme;\n\n  return {\n    ...defaultStyles,\n    root: {\n      // flexGrow: 1,\n      backgroundColor,\n      position: \"relative\",\n    },\n    flex: {\n      flex: 1,\n    },\n    menuButton: {\n      marginLeft: 5,\n      // marginRight: -12,\n    },\n  }\n};\n\n\nexport const locales = {\n  ru: {\n    values: {\n      \"Signin\": \"Войти\",\n      \"Signout\": \"Выйти\",\n      \"Chats\": \"Чаты\",\n      \"Users\": \"Участники\",\n      \"Ethereum\": \"Ethereum\",\n      \"API Schema\": \"API схема\",\n      \"Topics\": \"Топики\",\n      \"Blogs\": \"Блоги\",\n      \"Chats\": \"Чаты\",\n      \"Projects\": \"Проекты\",\n      \"Tasks\": \"Задачи\",\n      \"Timers\": \"Таймеры\",\n    }\n  },\n};\n\n\nexport class MainMenu extends PrismaCmsComponent {\n\n\n  static propTypes = {\n    ...PrismaCmsComponent.propTypes,\n    classes: PropTypes.object.isRequired,\n  };\n\n\n  static defaultProps = {\n    ...PrismaCmsComponent.defaultProps,\n    locales,\n  }\n\n  render() {\n\n    const {\n      classes,\n      ...other\n    } = this.props;\n\n\n    const {\n      user: currentUser,\n      logout,\n      router: {\n        history,\n      },\n    } = this.context;\n\n    const {\n      id: userId,\n    } = currentUser || {}\n\n    return (\n      <AppBar\n        // position=\"static\"\n        color=\"default\"\n        className={classes.root}\n      >\n        <Toolbar>\n\n\n          {/* <Button color=\"inherit\">Login</Button> */}\n\n          <Grid\n            container\n            alignItems=\"center\"\n            spacing={16}\n          >\n            <Grid\n              item\n              xs={12}\n              sm\n            >\n              <Typography\n                variant=\"title\"\n                color=\"inherit\"\n                className={classes.flex}\n              >\n                <Link\n                  to=\"/\"\n                >\n                  PrismaCMS\n                </Link>\n              </Typography>\n\n            </Grid>\n\n\n            <Grid\n              item\n            >\n              <Link\n                to=\"/topics\"\n              >\n                <Typography>\n                  {this.lexicon(\"Topics\")}\n                </Typography>\n              </Link>\n\n            </Grid>\n\n            <Grid\n              item\n            >\n              <Link\n                to=\"/blogs\"\n              >\n                <Typography>\n                  {this.lexicon(\"Blogs\")}\n                </Typography>\n              </Link>\n\n            </Grid>\n\n            <Grid\n              item\n            >\n              <Link\n                to=\"/chat-rooms\"\n              >\n                <Typography\n                  component=\"span\"\n                  className={classes.link}\n                >\n                  {this.lexicon(\"Chats\")}\n                </Typography>\n              </Link>\n            </Grid>\n\n            <Grid\n              item\n            >\n              <Link\n                to=\"/people\"\n              >\n                <Typography>\n                  {this.lexicon(\"Users\")}\n                </Typography>\n              </Link>\n\n            </Grid>\n\n            <Grid\n              item\n            >\n              <Link\n                to=\"/projects\"\n              >\n                <Typography>\n                  {this.lexicon(\"Projects\")}\n                </Typography>\n              </Link>\n\n            </Grid>\n\n            <Grid\n              item\n            >\n              <Link\n                to=\"/tasks?status_in=New&status_in=Accepted&status_in=Progress&status_in=Paused&status_in=RevisionsRequired&status_in=Discuss&status_in=Approved&status_in=Done\"\n              >\n                <Typography>\n                  {this.lexicon(\"Tasks\")}\n                </Typography>\n              </Link>\n\n            </Grid>\n\n            <Grid\n              item\n            >\n              <Link\n                to=\"/timers\"\n              >\n                <Typography>\n                  {this.lexicon(\"Timers\")}\n                </Typography>\n              </Link>\n\n            </Grid>\n\n\n            <Grid\n              item\n            >\n              <Link\n                to=\"/eth-transactions\"\n              >\n                <Typography>\n                  {this.lexicon(\"Ethereum\")}\n                </Typography>\n              </Link>\n\n            </Grid>\n\n            <Grid\n              item\n            >\n              <a\n                href=\"/graphql-voyager\"\n                rel=\"noindex,nofollow\"\n                target=\"_blank\"\n              >\n                <Typography>\n                  {this.lexicon(\"API Schema\")}\n                </Typography>\n              </a>\n\n            </Grid>\n\n\n            <Grid\n              item\n            >\n              <a\n                href=\"https://api.prisma-cms.com\"\n                rel=\"noindex,nofollow\"\n                target=\"_blank\"\n              >\n                <Typography>\n                  {this.lexicon(\"API\")}\n                </Typography>\n              </a>\n\n            </Grid>\n\n\n            <Grid\n              item\n              xs\n            >\n            </Grid>\n\n            <Language />\n\n            {currentUser ?\n              <Grid\n                key=\"callRequests\"\n                item\n              >\n                <CallRequestButtons\n                  key={userId}\n                  classes={{\n                    icon: classes.link,\n                  }}\n                />\n              </Grid>\n              : null\n            }\n\n            {currentUser ?\n              <Grid\n                key=\"notifications\"\n                item\n              >\n                <Notices\n                  key={userId}\n                  user={currentUser}\n                  classes={{\n                    icon: classes.link,\n                  }}\n                />\n              </Grid>\n              : null\n            }\n\n            <Grid\n              key=\"write\"\n              item\n            >\n              <IconButton\n                onClick={event => {\n                  history.push(\"/add-topic.html\");\n                }}\n              >\n                <CreateIcon />\n              </IconButton>\n\n            </Grid>\n\n            {currentUser\n              ?\n              <Fragment>\n\n                <Grid\n                  key=\"user\"\n                  item\n                >\n                  <UserItem\n                    key={userId}\n                    user={currentUser}\n                    classes={classes}\n                  />\n                </Grid>\n                <Grid\n                  key=\"logout\"\n                  item\n                >\n                  <a\n                    href=\"javascript:;\"\n                    onClick={() => logout()}\n                  >\n                    {this.lexicon(\"Signout\")}\n                  </a>\n\n                </Grid>\n              </Fragment>\n              :\n              <Grid\n                key=\"login\"\n                item\n              >\n                <Button\n                  onClick={e => {\n                    // this.setState({\n                    //   opened: true,\n                    // });\n                    const {\n                      openLoginForm,\n                    } = this.context;\n                    openLoginForm();\n                  }}\n                >\n                  <Typography\n                    component=\"span\"\n                  >\n                    {this.lexicon(\"Signin\")}\n                  </Typography>\n                </Button>\n\n              </Grid>\n            }\n          </Grid>\n\n\n\n          {/* <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            <MenuIcon />\n          </IconButton> */}\n\n        </Toolbar>\n      </AppBar >\n    );\n  }\n}\n\n\nexport default withStyles(styles)(props => <MainMenu\n  {...props}\n/>);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MainMenu from '../../../../../menu/mainMenu';\n\nimport EditorComponent from \"@prisma-cms/front-editor/lib/components/App/components/\";\n\nclass OldPageHeader extends EditorComponent {\n\n  static defaultProps = {\n    ...EditorComponent.defaultProps,\n  }\n\n  static Name = \"OldPageHeader\"\n\n  renderPanelView() {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(<div\n      className={classes.panelButton}\n    >\n      Old Page Header\n    </div>);\n  }\n\n\n  // getRootElement() {\n\n  //   return MainMenu;\n  // }\n\n  renderChildren(){\n\n    return <MainMenu\n\n    />\n  }\n\n\n  // renderMainView() {\n\n  //   // const {\n  //   //   marginTop,\n  //   //   marginBottom,\n  //   // } = this.getComponentProps(this);\n\n  //   const {\n  //     style,\n  //     marginTop,\n  //     marginBottom,\n  //     ...other\n  //   } = this.getRenderProps();\n\n  //   return <div\n  //     style={{\n  //       marginTop,\n  //       marginBottom,\n  //       ...style,\n  //     }}\n  //     {...other}\n  //   >\n  //     {super.renderMainView()}\n  //   </div>;\n  // }\n\n}\n\nexport default OldPageHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport EditorComponent from \"@prisma-cms/front-editor/lib/components/App/components/\";\n\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nclass OldPages extends EditorComponent {\n\n  static defaultProps = {\n    ...EditorComponent.defaultProps,\n  }\n\n  static Name = \"OldPages\"\n\n  renderPanelView() {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(<div\n      className={classes.panelButton}\n    >\n      Old Pages\n    </div>);\n  }\n\n\n\n  renderChildren() {\n\n\n\n    const {\n      oldRoutes,\n    } = this.context;\n\n    return <Switch>\n      {oldRoutes.map(n => {\n        const {\n          path,\n        } = n;\n\n        return <Route\n          key={path}\n          {...n}\n        />\n      })}\n    </Switch>\n  }\n\n}\n\nexport default OldPages;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport EditorComponent from \"@prisma-cms/front-editor/lib/components/App/components/\";\nimport { ObjectContext } from \"@prisma-cms/front-editor/lib/components/App/components/public/Connectors/Connector/ListView\";\n\nimport { Link } from \"react-router-dom\";\n\nclass SwitchTemplateLink extends EditorComponent {\n\n  static defaultProps = {\n    ...EditorComponent.defaultProps,\n  }\n\n  static Name = \"SwitchTemplateLink\"\n\n  renderPanelView() {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(<div\n      className={classes.panelButton}\n    >\n      Switch Template\n    </div>);\n  }\n\n\n  // getRootElement() {\n\n  //   return MainMenu;\n  // }\n\n\n  prepareDragItemComponents() {\n\n    return super.prepareDragItemComponents().concat([\n      {\n        \"name\": \"NamedField\",\n        \"props\": {\n          \"name\": \"name\"\n        },\n        \"components\": []\n      }\n    ])\n  }\n\n  renderChildren() {\n\n    return <ObjectContext.Consumer>\n      {context => {\n\n\n\n        const {\n          object,\n        } = context;\n\n        const children = super.renderChildren();\n\n        const {\n          id: templateId,\n        } = object || {};\n\n        if (templateId) {\n\n          return <Link\n            to={`/?templateId=${templateId}`}\n            // onClick={event => {\n\n            //   const {\n            //     localStorage,\n            //   } = global;\n\n            //   if (localStorage && localStorage.setItem) {\n            //     localStorage.setItem(\"PrismaCmsTemplateId\", templateId);\n            //   }\n\n            // }}\n          >\n            {children}\n          </Link>\n        }\n        else {\n          return children;\n        }\n\n      }}\n    </ObjectContext.Consumer>\n\n  }\n\n\n  // renderMainView() {\n\n  //   // const {\n  //   //   marginTop,\n  //   //   marginBottom,\n  //   // } = this.getComponentProps(this);\n\n  //   const {\n  //     style,\n  //     marginTop,\n  //     marginBottom,\n  //     ...other\n  //   } = this.getRenderProps();\n\n  //   return <div\n  //     style={{\n  //       marginTop,\n  //       marginBottom,\n  //       ...style,\n  //     }}\n  //     {...other}\n  //   >\n  //     {super.renderMainView()}\n  //   </div>;\n  // }\n\n}\n\nexport default SwitchTemplateLink;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport View from \"../View\";\n\n// import Context from \"@prisma-cms/context\";\nimport PrismaCmsComponent from \"@prisma-cms/component\";\n\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nclass CreateUserPage extends PrismaCmsComponent {\n\n  // static contextType = Context;\n\n\n  // componentWillMount() {\n\n  //   console.log(\"this.context\", this.context);\n\n  //   const {\n  //     query: {\n  //       createUserProcessor,\n  //     },\n  //   } = this.context;\n\n  //   this.createUser = gql(createUserProcessor);\n\n  //   super.componentWillMount && super.componentWillMount();\n  // }\n\n\n  createUser = async (props) => {\n\n    // console.log(\"props\", { ...props });\n\n    const {\n      query: {\n        createUserProcessor,\n      },\n    } = this.context;\n\n    // this.createUser = gql(createUserProcessor);\n\n    return this.mutate({\n      mutation: gql(createUserProcessor),\n      ...props,\n    });\n\n\n  }\n\n\n  onSave = result => {\n\n    // console.log(\"result\", result);\n\n    const {\n      response,\n    } = result && result.data || {};\n\n    const {\n      id: userId,\n    } = response && response.data || {};\n\n    if (userId) {\n      const {\n        router: {\n          history,\n        },\n      } = this.context;\n\n      history.push(`/users/${userId}`);\n    }\n\n  }\n\n\n  render() {\n\n\n    // const {\n    //   query: {\n    //     createUserProcessor,\n    //   },\n    // } = this.context;\n\n    const {\n      ...other\n    } = this.props;\n\n    return super.render(\n      <View\n        data={{\n          object: {},\n        }}\n        _dirty={{\n        }}\n        mutate={this.createUser}\n        onSave={this.onSave}\n        {...other}\n      />\n    );\n  }\n\n}\n\n\nexport default CreateUserPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport EditorComponent from \"@prisma-cms/front-editor/lib/components/App/components/\";\n\n// import Icon from \"material-ui-icons/SettingsOverscan\";\n\nimport CustomCreateUserPage from \"../../../../../../UsersPage/UserPage/Create\";\n\nclass CreateUserPage extends EditorComponent {\n\n  // static defaultProps = {\n  //   ...EditorComponent.defaultProps,\n  //   marginTop: 10,\n  //   marginBottom: 10,\n  // }\n\n  static Name = \"CreateUserPage\"\n\n  renderPanelView() {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(<div\n      className={classes.panelButton}\n    >\n      {/* <Icon />  */}\n      Create User page\n    </div>);\n  }\n\n\n  renderChildren() {\n\n    return <CustomCreateUserPage\n    />;\n  }\n\n\n}\n\nexport default CreateUserPage;\n","import React, { Fragment } from 'react';\n\nimport EditorComponent from '@prisma-cms/front-editor/lib/components/App/components/';\nimport EditableObject from '@prisma-cms/front-editor/lib/components/App/components/public/form/EditableObject';\n\n\n\nexport class Resource extends EditorComponent {\n\n  static Name = 'Resource';\n\n  static defaultProps = {\n    ...EditorComponent.defaultProps,\n\n  }\n\n  renderPanelView(content) {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(\n      content ||\n      <div\n        className={classes.panelButton}\n      >\n        Resource\n      </div>\n    );\n  }\n\n\n  getRootElement() {\n\n    return super.getRootElement();\n  }\n\n\n  canBeParent(parent) {\n\n    return parent instanceof EditableObject && super.canBeParent(parent);\n  }\n\n\n  canBeChild(child) {\n\n    return super.canBeChild(child);\n  }\n\n\n}\n\nexport default Resource;","import React, { Fragment } from 'react';\n\nimport { EditableObjectContext } from '@prisma-cms/front-editor/lib/components/App/context';\n\nimport Resource from '../';\n\nimport { TopicPage } from '../../../../../../pages/Topics/Topic';\n\nexport class TopicView extends TopicPage {\n\n  static defaultProps = {\n    ...TopicPage.defaultProps,\n  }\n\n}\n\n\nexport class Topic extends Resource {\n\n  static Name = 'Topic';\n\n\n  renderPanelView(content) {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(\n      content ||\n      <div\n        className={classes.panelButton}\n      >\n        Topic\n      </div>\n    );\n  }\n\n\n  View = props => {\n\n    const {\n      children,\n    } = props;\n\n    return children || null;\n  }\n\n\n\n  renderChildren() {\n\n\n    return <EditableObjectContext.Consumer>\n      {context => {\n\n        const {\n          inEditMode: objectInEditMode,\n          getObjectWithMutations,\n        } = context;\n\n        /**\n        Если это уже существующий топик и у него есть контент, но нет компонентов,\n        то выводим классическую страницу.\n         */\n\n        const object = getObjectWithMutations();\n\n        const {\n          content,\n          components,\n        } = object || {};\n\n        let View;\n\n        if (!content || components) {\n          View = this.View;\n        }\n\n\n        return <TopicView\n          data={{\n            object,\n          }}\n          View={View}\n        >\n\n          {super.renderChildren()}\n\n        </TopicView>\n      }}\n    </EditableObjectContext.Consumer>\n\n  }\n\n\n}\n\nexport default Topic;","import React, { Fragment } from 'react';\n\nimport EditorComponent from '@prisma-cms/front-editor/lib/components/App/components/';\nimport ResourceFields from '..';\n\nexport class ResourceField extends EditorComponent {\n\n  static Name = 'ResourceField';\n\n  static defaultProps = {\n    ...EditorComponent.defaultProps,\n  }\n\n\n  renderPanelView(content) {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(\n      content ||\n      <div\n        className={classes.panelButton}\n      >\n        ResourceField\n      </div>\n    );\n  }\n\n\n  canBeParent(parent) {\n\n    return parent instanceof ResourceFields\n      ;\n  }\n\n}\n\nexport default ResourceField;","import React, { Fragment } from 'react';\nimport PropTypes from \"prop-types\";\n\nimport EditorComponent from '@prisma-cms/front-editor/lib/components/App/components/';\nimport EditableObject from '@prisma-cms/front-editor/lib/components/App/components/public/form/EditableObject';\nimport { EditableObjectContext, EditorContext } from '@prisma-cms/front-editor/lib/components/App/context';\nimport Resource from '..';\nimport ResourceField from './Field';\nimport OldPageHeader from '../../OldPageHeader';\nimport OldPages from '../../pages/OldPages';\nimport { Button } from 'material-ui';\n\n\nexport class ResourceFieldsProxy extends EditorComponent {\n\n\n  static propTypes = {\n    objectContext: PropTypes.object.isRequired,\n  }\n\n  /**\n   * Обновление данных объекта.\n   * Так как компоненты рендерятся на основании передаваемых свойств,\n   * надо обновить данные абсолютного родителя, а не просто текущего элемента\n   */\n  updateObject(data) {\n\n    // console.log(\"ResourceFieldsProxy updateObject data\", { ...data });\n\n    // const object = this.getObjectWithMutations();\n\n    const {\n      objectContext,\n    } = this.props;\n\n    // console.log(\"ResourceFieldsProxy updateObject objectContext\", { ...objectContext });\n\n    const {\n      updateObject,\n    } = objectContext;\n\n\n\n    return updateObject(data);\n\n  }\n\n}\n\n\nexport class ResourceFields extends EditorComponent {\n\n  static Name = 'ResourceFields';\n\n  static defaultProps = {\n    ...EditorComponent.defaultProps,\n  }\n\n\n  renderPanelView() {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(\n      <div\n        className={classes.panelButton}\n      >\n        ResourceFields\n      </div>\n    );\n  }\n\n\n  getRootElement() {\n\n    return super.getRootElement();\n  }\n\n\n  canBeParent(parent) {\n\n    return parent instanceof Resource && super.canBeParent(parent);\n  }\n\n\n  canBeChild(child) {\n\n    // return child instanceof ResourceField && super.canBeChild(child);\n\n    return !(child instanceof OldPageHeader)\n      && !(child instanceof OldPages)\n      && super.canBeChild(child);\n  }\n\n\n  renderMainView() {\n\n    return <EditableObjectContext.Consumer>\n      {context => {\n\n        Object.assign(this, {\n          objectContext: context,\n        });\n\n        return super.renderMainView();\n\n      }}\n    </EditableObjectContext.Consumer>;\n  }\n\n\n  updateObject(data) {\n\n    const {\n      inEditMode,\n    } = this.getEditorContext();\n\n    // if (inEditMode) {\n\n    console.log(\"ResourceFields updateObject data\", data);\n\n\n    //   console.log(\"updateObject this\", { ...this });\n\n    //   return super.updateObject(data);\n\n    // }\n    // else {\n    //   this.forceUpdate();\n    // }\n\n\n    if (inEditMode) {\n      return super.updateObject(data);\n    }\n    else {\n\n      const {\n        objectContext,\n      } = this;\n\n      const {\n        updateObject,\n        getObjectWithMutations,\n      } = objectContext || {};\n\n\n      if (updateObject && getObjectWithMutations) {\n        // console.log(\"updateObject updateObject\", updateObject);\n\n        const {\n          components,\n        } = getObjectWithMutations() || {}\n\n        if (components) {\n          updateObject({\n            components,\n          });\n        }\n\n      }\n\n    }\n\n\n\n    return\n\n  }\n\n\n\n\n  addComponent(item) {\n\n\n    const {\n      inEditMode,\n    } = this.getEditorContext();\n\n\n\n    if (inEditMode) {\n      return super.addComponent(item);\n    }\n\n\n    const {\n      name,\n      component,\n    } = item;\n\n    if (!component) {\n      item.component = name;\n    }\n\n    this.addItem(item);\n\n  }\n\n  addItem(item) {\n\n\n    const {\n      objectContext: {\n        updateObject,\n        getObjectWithMutations,\n      },\n    } = this;\n\n\n    const {\n      components,\n    } = getObjectWithMutations() || {};\n\n    updateObject({\n      components: (components || []).concat([item]),\n    });\n\n  }\n\n\n\n  // prepareNewItem(item) {\n\n  //   item = super.prepareNewItem(item);\n\n  //   if (!item) {\n  //     return;\n  //   }\n\n  //   const {\n  //     name,\n  //     component,\n  //   } = item;\n\n  //   if (!component) {\n  //     item.component = name;\n  //   }\n\n  //   /**\n  //    * Пока я не пофиксил багу с обновлением данных дочерних компонентов\n  //    * первого уровня, все добавляемые в корень компоненты оборачиваем в контейнер\n  //    */\n  //   let newItem = {\n  //     name: \"Section\",\n  //     component: \"Section\",\n  //     props: {},\n  //     components: [item],\n  //   };\n\n  //   return newItem;\n\n  // }\n\n\n  getActiveParent() {\n\n    const {\n      inEditMode,\n    } = this.getEditorContext();\n\n    let parent;\n\n    if (inEditMode) {\n\n      parent = super.getActiveParent();\n\n    }\n    else {\n      parent = this;\n    }\n\n\n    return parent;\n\n  }\n\n\n\n  renderChildren() {\n\n    const {\n      Grid,\n    } = this.context;\n\n    const {\n      Components,\n      inEditMode,\n    } = this.getEditorContext();\n\n    let buttons;\n\n\n\n    const {\n      objectContext,\n    } = this;\n\n    const {\n      // getEditor,\n      inEditMode: objectInEditMode,\n      // canEdit,\n      getObjectWithMutations,\n    } = objectContext;\n\n    const {\n      components,\n    } = getObjectWithMutations() || {};\n\n\n    let customComponents;\n\n\n    if (!inEditMode && ((components && components.length) || objectInEditMode)) {\n\n      customComponents = <EditorContext.Consumer>\n        {context => {\n\n          let {\n            activeItem,\n            setActiveItem,\n          } = context;\n\n\n          if (objectInEditMode) {\n\n            activeItem = activeItem || this;\n\n            context = {\n              ...context,\n              inEditMode: true,\n              // activeItem,\n              // activeItem: this,\n            };\n\n          }\n\n          return <EditorContext.Provider\n            value={context}\n          >\n\n\n            {/* {components && components.map((n, index) => this.renderComponent(n, index))} */}\n\n            {/* {this.renderComponent({\n              name: \"ResourceFieldsProxy\",\n              component: \"ResourceFieldsProxy\",\n              props: {},\n              components,\n            })} */}\n\n            <ResourceFieldsProxy\n              object={{\n                props: {},\n                components,\n              }}\n              parent={this}\n              mode=\"main\"\n              objectContext={objectContext}\n            />\n\n            {!objectInEditMode\n              ? null\n              : activeItem === this ?\n                <Grid\n                  container\n                  spacing={8}\n                >\n                  {Components.map((Component, index) => {\n\n                    const name = Component.Name;\n\n                    return <Component\n                      key={`${name}-${index}`}\n                      mode=\"add_child\"\n                      className={\"add_child\"}\n                      parent={this}\n                    />\n                  })}\n                </Grid>\n                :\n                <div\n                  style={{\n                    marginTop: 30,\n                  }}\n                >\n                  <Button\n                    onClick={event => {\n                      setActiveItem(this);\n                    }}\n                    size=\"small\"\n                    variant=\"raised\"\n                    color=\"primary\"\n                  >\n                    Восстановить видимость\n                </Button>\n                </div>\n            }\n\n          </EditorContext.Provider>\n        }}\n      </EditorContext.Consumer>\n\n    }\n\n\n    return <Fragment>\n\n      {super.renderChildren()}\n\n      {customComponents}\n\n\n    </Fragment>\n\n  }\n\n}\n\nexport default ResourceFields;","import React, { Component, Fragment } from 'react';\n// import PropTypes from 'prop-types';\n\n// import { EditableObjectContext } from '@prisma-cms/front-editor/lib/components/App/context';\nimport RichText from '@prisma-cms/front-editor/lib/components/App/components/public/Connectors/Connector/Fields/RichText';\n// import { ObjectContext } from '@prisma-cms/front-editor/lib/components/App/components/public/Connectors/Connector/ListView';\n// import ResourceField from '..';\n\n\n\nexport class RichTextCustom extends RichText {\n\n  renderAddButton(content) {\n\n    return super.renderAddButton(\"Текстовый блок\");\n  }\n}\n\n\n\nclass ResourceContent extends RichTextCustom {\n\n\n  // static defaultProps = {\n  //   ...ResourceField.defaultProps,\n  //   label: undefined,\n  //   helperText: undefined,\n  //   // readOnly: true,\n  // }\n\n  static Name = \"ResourceContent\"\n\n  // onBeforeDrop = () => {\n\n  // }\n\n  // canBeDropped = (dragItem) => {\n  //   return false;\n  // }\n\n\n  // renderPanelView(content) {\n\n  //   const {\n  //     classes,\n  //   } = this.getEditorContext();\n\n  //   return super.renderPanelView(content || <div\n  //     className={classes.panelResourceContent}\n  //   >\n  //     ResourceContent\n  //   </div>);\n  // }\n\n  \n  renderPanelView() {\n\n    return null;\n  }\n\n\n  renderAddButton(content) {\n\n    return null;\n  }\n\n\n  // canBeParent(parent) {\n\n  //   return true;\n  // }\n\n  // canBeChild(child) {\n  //   return false;\n  // }\n\n\n  // renderChildren() {\n\n  //   const {\n  //     Editor,\n  //   } = this.context;\n\n  //   const {\n  //     content,\n  //   } = this.getComponentProps(this);\n\n\n  //   const {\n  //     activeItem,\n  //     inEditMode,\n  //   } = this.getEditorContext();\n\n\n  //   const isActive = activeItem === this;\n\n  //   const readOnly = !inEditMode || !isActive ? true : false;\n\n\n  //   return <Editor\n  //     value={content}\n  //     readOnly={readOnly}\n  //     onChange={!readOnly ? value => {\n\n  //       this.updateComponentProps({\n  //         content: value,\n  //       });\n\n  //     } : undefined}\n  //   />\n\n\n  //   return <EditableObjectContext.Consumer>\n  //     {context => {\n\n  //       const {\n  //         getEditor,\n  //         updateObject,\n  //         inEditMode,\n  //         getObjectWithMutations,\n  //       } = context;\n\n\n  //       if (!getObjectWithMutations) {\n  //         return null;\n  //       }\n\n\n\n  //       const object = getObjectWithMutations();\n\n\n  //       if (!object) {\n  //         return null;\n  //       }\n\n  //       const {\n  //         activeItem,\n  //       } = this.getEditorContext();\n\n\n  //       const isActive = activeItem === this;\n\n  //       const readOnly = !inEditMode || !isActive ? true : false;\n\n  //       {/* console.log(\"ResourceContent content\", JSON.stringify(content, true, 2));\n  //       console.log(\"ResourceContent isActive\", isActive); */}\n\n\n  //       {/* const {\n  //         id: objectId,\n  //       } = object || {}; */}\n\n\n  //       return getEditor ? getEditor({\n  //         ...this.getComponentProps(this),\n  //         Editor,\n  //         readOnly,\n  //         value: content,\n  //         onChange: isActive ? value => {\n\n  //           this.updateComponentProps({\n  //             content: value,\n  //           });\n\n\n  //           {/* const {\n  //             components,\n  //           } = getObjectWithMutations();\n\n\n  //           updateObject({\n  //             components,\n  //           }); */}\n\n  //         } : undefined\n  //       }) : super.renderChildren();\n\n  //     }}\n  //   </EditableObjectContext.Consumer>\n\n  // }\n\n\n}\n\nexport default ResourceContent;\n","import React, { Fragment } from 'react';\n\nimport EditorComponent from '@prisma-cms/front-editor/lib/components/App/components/';\nimport Resource from '..';\nimport { ObjectContext } from '@prisma-cms/front-editor/lib/components/App/components/public/Connectors/Connector/ListView';\nimport TopicComments from '../../../../../../pages/Topics/Topic/view/Comments';\n\n\nexport class Comments extends EditorComponent {\n\n  static Name = 'Comments';\n\n  static defaultProps = {\n    ...EditorComponent.defaultProps,\n  }\n\n\n  renderPanelView() {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(\n      <div\n        className={classes.panelButton}\n      >\n        Comments\n      </div>\n    );\n  }\n\n\n  getRootElement() {\n\n    return super.getRootElement();\n  }\n\n\n  canBeParent(parent) {\n\n    return parent instanceof Resource && super.canBeParent(parent);\n  }\n\n\n  canBeChild(child) {\n\n    return false;\n  }\n\n\n  renderChildren() {\n\n\n    return <ObjectContext.Consumer>\n\n      {objectContext => {\n\n        const {\n          object,\n        } = objectContext;\n\n        return object ? <TopicComments\n          topic={object}\n        /> : null;\n\n\n      }}\n\n    </ObjectContext.Consumer>\n\n  }\n\n}\n\nexport default Comments;","\nimport TopicBlogView from \"../../../../../../../pages/Topics/Topic/view/Blog\";\n\nimport React from 'react';\n\nimport EditorComponent from '@prisma-cms/front-editor/lib/components/App/components/';\nimport { EditableObjectContext } from \"@prisma-cms/front-editor/lib/components/App/context\";\n// import Topic from \"../\";\n\nexport class TopicBlog extends EditorComponent {\n\n  static Name = 'TopicBlog';\n\n  static defaultProps = {\n    ...EditorComponent.defaultProps,\n  }\n\n\n  renderPanelView() {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(\n      <div\n        className={classes.panelButton}\n      >\n        TopicBlog\n      </div>\n    );\n  }\n\n\n  getRootElement() {\n\n    return super.getRootElement();\n  }\n\n\n  // canBeParent(parent) {\n\n  //   return parent instanceof Topic && super.canBeParent(parent);\n  // }\n\n\n  canBeChild(child) {\n\n    return false;\n  }\n\n\n  renderChildren() {\n\n    const {\n    } = this.context;\n\n    const {\n    } = this.getEditorContext();\n\n    const {\n      ...other\n    } = this.getComponentProps(this);\n\n    return <EditableObjectContext.Consumer>\n      {context => {\n\n        const {\n          getEditor,\n          updateObject,\n          inEditMode,\n          getObjectWithMutations,\n        } = context;\n\n\n        if (!getObjectWithMutations) {\n          return null;\n        }\n\n\n        const object = getObjectWithMutations();\n\n\n        if (!object) {\n          return null;\n        }\n\n\n        return <TopicBlogView\n          Topic={object}\n          updateObject={data => updateObject(data)}\n          inEditMode={inEditMode}\n        />;\n\n      }}\n    </EditableObjectContext.Consumer>\n  }\n\n}\n\nexport default TopicBlog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { EditableObjectContext } from '@prisma-cms/front-editor/lib/components/App/context';\nimport { ObjectContext } from '@prisma-cms/front-editor/lib/components/App/components/public/Connectors/Connector/ListView';\nimport ResourceField from '..';\nimport { TextField } from 'material-ui';\n\n\n\nclass Youtube extends ResourceField {\n\n\n  static defaultProps = {\n    ...ResourceField.defaultProps,\n    label: undefined,\n    helperText: undefined,\n    // readOnly: true,\n    style: {\n      ...ResourceField.defaultProps.style,\n      maxWidth: 800,\n      width: \"100%\",\n      margin: \"0 auto\",\n    },\n    src: \"https://www.youtube.com/embed/vqyZrf5i3TM\",\n  }\n\n  static Name = \"Youtube\";\n\n\n  onBeforeDrop = () => {\n\n  }\n\n  canBeDropped = (dragItem) => {\n    return false;\n  }\n\n\n  renderPanelView(content) {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(content || <div\n      className={classes.panelYoutube}\n    >\n      Youtube\n    </div>);\n  }\n\n\n  renderAddButton(content) {\n\n    return super.renderAddButton(\"Youtube видео\");\n  }\n\n\n  // canBeParent(parent) {\n\n  //   return parent instanceof Section && super.canBeParent(parent);\n  // }\n\n  canBeChild(child) {\n    return false;\n  }\n\n\n  renderChildren() {\n\n    const {\n      Editor,\n      Grid,\n    } = this.context;\n\n    const {\n      content,\n      maxWidth,\n      src,\n      ...other\n    } = this.getComponentProps(this);\n\n\n    const {\n      activeItem,\n    } = this.getEditorContext();\n\n\n    return <EditableObjectContext.Consumer>\n      {context => {\n\n        const {\n          getEditor,\n          updateObject,\n          inEditMode,\n          getObjectWithMutations,\n        } = context;\n\n\n        if (!getObjectWithMutations) {\n          return null;\n        }\n\n\n        const readOnly = !inEditMode;\n\n        const object = getObjectWithMutations();\n\n\n        if (!object) {\n          return null;\n        }\n\n\n        let inner = this.renderComponent({\n          name: \"VideoWrapper\",\n          component: \"Section\",\n          props: {\n            ...other,\n          },\n          components: [\n            {\n              \"name\": \"Video\",\n              \"description\": null,\n              \"props\": {\n                \"style\": {\n                  \"height\": 0,\n                  \"position\": \"relative\",\n                  \"paddingTop\": \"56.25%\",\n                  \"overflow\": \"hidden\",\n                  \"boxShadow\": \"0px 0px 6px 1px #dcb16b\",\n                }\n              },\n              \"component\": \"Section\",\n              \"components\": [\n                {\n                  \"name\": \"Tag\",\n                  \"component\": \"Tag\",\n                  \"props\": {\n                    \"tag\": \"iframe\",\n                    \"src\": src,\n                    \"frameborder\": 0,\n                    \"allow\": \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n                    \"allowfullscreen\": \"true\",\n                    \"style\": {\n                      \"position\": \"absolute\",\n                      \"top\": 0,\n                      \"left\": 0,\n                      \"border\": 0,\n                      \"width\": \"100%\",\n                      \"height\": \"100%\"\n                    }\n                  },\n                  \"components\": []\n                }\n              ]\n            },\n          ],\n        });\n\n        let settings;\n\n        const {\n          id: objectId,\n        } = object || {};\n\n\n        if (activeItem && activeItem === this) {\n\n          settings = <Grid\n            container\n            spacing={8}\n          >\n\n            <Grid\n              item\n              xs\n            >\n\n              <TextField\n                name=\"src\"\n                value={src || \"\"}\n                label=\"Ссылка на видео\"\n                helperText=\"Только из youtube\"\n                fullWidth\n                onChange={event => {\n\n                  const {\n                    name,\n                    value,\n                  } = event.target;\n\n                  this.updateComponentProps({\n                    [name]: value,\n                  });\n\n                  // const {\n                  //   components,\n                  // } = getObjectWithMutations();\n\n\n                  // updateObject({\n                  //   components,\n                  // });\n\n                }}\n              />\n\n            </Grid>\n\n          </Grid>\n        }\n\n\n        return <div>\n          {inner}\n          {settings}\n        </div>\n\n      }}\n    </EditableObjectContext.Consumer>\n\n  }\n\n\n}\n\nexport default Youtube;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from \"../../layout\";\n\nimport {\n  ChatRooms,\n} from \"@prisma-cms/society\";\n\n\nclass ChatRoomsPage extends Page {\n\n\n  setPageMeta() {\n\n    return super.setPageMeta({\n      title: \"Чаты\",\n    });\n\n  }\n\n\n  render() {\n\n    return super.render(\n      <ChatRooms\n        {...this.props}\n      />\n    );\n  }\n}\n\n\nexport default ChatRoomsPage;","import React from 'react';\n\nimport EditorComponent from '@prisma-cms/front-editor/lib/components/App/components/';\nimport ChatRoomsPage from '../../../../society/ChatRooms';\n\nexport class ChatRooms extends EditorComponent {\n\n  static Name = 'ChatRooms';\n\n  static defaultProps = {\n    ...EditorComponent.defaultProps,\n  }\n\n\n  renderPanelView(content) {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(\n      content ||\n      <div\n        className={classes.panelButton}\n      >\n        ChatRooms\n      </div>\n    );\n  }\n\n\n  getRootElement() {\n\n    return super.getRootElement();\n  }\n\n\n  canBeParent(parent) {\n\n    return super.canBeParent(parent);\n  }\n\n\n  canBeChild(child) {\n\n    // return super.canBeChild(child);\n    return false;\n  }\n\n\n  renderChildren() {\n\n    const {\n    } = this.context;\n\n    const {\n    } = this.getEditorContext();\n\n    const {\n      ...other\n    } = this.getComponentProps(this);\n\n    // return super.renderChildren();\n\n    return <ChatRoomsPage\n      {...other}\n    />\n  }\n\n}\n\nexport default ChatRooms;","import React from 'react';\n\nimport EditorComponent from '@prisma-cms/front-editor/lib/components/App/components/';\nimport { ObjectContext } from '@prisma-cms/front-editor/lib/components/App/components/public/Connectors/Connector/ListView/';\nimport ChatRoomView from '@prisma-cms/webrtc/lib/components/pages/society/ChatRooms/ChatRoom/View';\nimport { EditableObjectContext } from '@prisma-cms/front-editor/lib/components/App/context';\n\nexport class ChatRoom extends EditorComponent {\n\n  static Name = 'ChatRoom';\n\n  static defaultProps = {\n    ...EditorComponent.defaultProps,\n  }\n\n\n  renderPanelView(content) {\n\n    const {\n      classes,\n    } = this.getEditorContext();\n\n    return super.renderPanelView(\n      content ||\n      <div\n        className={classes.panelButton}\n      >\n        ChatRoom\n      </div>\n    );\n  }\n\n\n  getRootElement() {\n\n    return super.getRootElement();\n  }\n\n\n  canBeParent(parent) {\n\n    return super.canBeParent(parent);\n  }\n\n\n  canBeChild(child) {\n\n    return super.canBeChild(child);\n  }\n\n\n  renderChildren() {\n\n    const {\n    } = this.context;\n\n    const {\n    } = this.getEditorContext();\n\n    const {\n      ...other\n    } = this.getComponentProps(this);\n\n    return <EditableObjectContext.Consumer>\n      {objectContext => {\n\n        const {\n          object,\n          ...otherContext\n        } = objectContext;\n\n\n        return <ChatRoomView\n          {...otherContext}\n          data={{\n            object: object,\n          }}\n        />\n\n      }}\n    </EditableObjectContext.Consumer>\n\n    return `super.renderChildren()`;\n  }\n\n}\n\nexport default ChatRoom;","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport PrismaCmsComponent from \"@prisma-cms/component\";\nimport RootConnector from '@prisma-cms/front-editor/lib/components/Root';\nimport UserPage from './components/pages/Users/User';\nimport OldPageHeader from './components/OldPageHeader';\nimport OldPages from './components/pages/OldPages';\nimport SwitchTemplateLink from './components/Link/SwitchTemplate';\n// import PdfView from './components/PdfView';\nimport CreateUserPage from './components/pages/Users/User/Create';\nimport Topic from './components/Resource/Topic';\nimport ResourceFields from './components/Resource/Fields';\nimport ResourceContent, { RichTextCustom } from './components/Resource/Fields/Field/ResourceContent';\nimport Comments from './components/Resource/Comments';\nimport TopicBlog from './components/Resource/Topic/TopicBlog';\nimport Youtube from './components/Resource/Fields/Field/Youtube';\nimport ChatRooms from './components/pages/ChatRooms';\nimport ChatRoom from './components/pages/ChatRooms/ChatRoom';\n\n\nexport const CustomComponents = [\n  UserPage,\n  OldPageHeader,\n  OldPages,\n  SwitchTemplateLink,\n  CreateUserPage,\n  // PdfView,\n  Topic,\n  Comments,\n  TopicBlog,\n  ResourceFields,\n  ResourceContent,\n  RichTextCustom,\n  Youtube,\n  ChatRooms,\n  ChatRoom,\n];\n\n\nexport class RootPage extends PrismaCmsComponent {\n\n  render() {\n\n    const {\n      ...other\n    } = this.props;\n\n    return <RootConnector\n      CustomComponents={CustomComponents}\n      {...other}\n    />\n  }\n\n}\n\nexport default RootPage;","\nimport React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\n\nimport { Renderer as PrismaCmsRenderer } from \"@prisma-cms/front\";\nimport GraphqlVoyagerPage from \"@prisma-cms/front/lib/components/pages/GraphqlVoyager\";\n\nimport withStyles from \"material-ui/styles/withStyles\";\n\n\n// import MainPage from \"../pages/MainPage\";\n// import UsersPage from \"@prisma-cms/front/lib/components/pages/UsersPage\";\nimport UsersPage from \"../pages/UsersPage/\";\nimport UserPage from \"./pages/UsersPage/UserPage\";\nimport TopicsPage from \"../pages/Topics\";\nimport TopicPage from \"../pages/Topics/Topic\";\nimport TopicCreatePage from \"../pages/Topics/Topic/Create\";\nimport TagPage from \"../pages/Tags/Tag\";\nimport BlogsPage from \"../pages/Blogs\";\nimport BlogPage from \"../pages/Blogs/Blog\";\nimport BlogCreatePage from \"../pages/Blogs/Blog/Create\";\nimport CommentsPage from \"../pages/Comments\";\nimport CommentPage from \"../pages/Comments/Comment\";\nimport ProjectsPage from \"../pages/cooperation/Projects\";\nimport ProjectPage from \"../pages/cooperation/Projects/Project\";\nimport ProjectCreatePage from \"../pages/cooperation/Projects/Project/Create\";\nimport TasksPage from \"../pages/cooperation/Tasks\";\nimport TaskPage from \"../pages/cooperation/Tasks/Task\";\nimport TaskCreatePage from \"../pages/cooperation/Tasks/Task/Create\";\nimport TimersPage from \"../pages/cooperation/Timers\";\nimport TimerPage from \"../pages/cooperation/Timers/Timer\";\n\nimport TransactionsPage from \"../pages/ethereum/Transactions\";\nimport TransactionPage from \"../pages/ethereum/Transactions/Transaction\";\n\nimport ChatRoomsPage from \"../pages/society/ChatRooms\";\nimport ChatRoomPage from \"../pages/society/ChatRooms/ChatRoom\";\nimport CreateChatRoomPage from \"../pages/society/ChatRooms/ChatRoom/Create\";\n\nimport ChatMessagesPage from \"../pages/society/ChatMessages\";\nimport ChatMessagePage from \"../pages/society/ChatMessages/ChatMessage\";\n\nimport SubscriptionProvider from \"./SubscriptionProvider\";\n\nimport ReactLesson1 from \"../pages/lessons/react/lesson1\";\n\nimport Context from \"@prisma-cms/context\";\n\n\nimport {\n  ContextProvider as ResourceContextProvider,\n  SubscriptionProvider as ResourceSubscriptionProvider,\n} from \"@prisma-cms/resource\";\n\nimport {\n  ContextProvider as SocietyContextProvider,\n  SubscriptionProvider as SocietySubscriptionProvider,\n} from \"@prisma-cms/society\";\n\nimport {\n  ContextProvider as EthereumContextProvider,\n  SubscriptionProvider as EthereumSubscriptionProvider,\n} from \"@prisma-cms/ethereum\";\n\nimport ContextProvider from \"./ContextProvider\";\n\n// import UserPage from './pages/UsersPage/UserPage';\n\n// import ChatRoomsPage from \"./pages/society/ChatRooms\";\n// import ChatRoomPage from \"./pages/society/ChatRooms/ChatRoom\";\n// import CreateChatRoomPage from \"./pages/society/ChatRooms/ChatRoom/Create\";\n\n// import ChatMessagesPage from \"./pages/society/ChatMessages\";\n// import ChatMessagePage from \"./pages/society/ChatMessages/ChatMessage\";\n\n// import TransactionsPage from \"./pages/ethereum/Transactions\";\n// import TransactionPage from \"./pages/ethereum/Transactions/Transaction\";\n\nimport MainMenu from \"./MainMenu\";\n\nimport {\n  ContextProvider as WebrtcContextProvider,\n  SubscriptionProvider as WebrtcSubscriptionProvider,\n  WebRtcChatProvider,\n} from \"@prisma-cms/webrtc\";\n\nimport {\n  ContextProvider as CooperationContextProvider,\n  SubscriptionProvider as CooperationSubscriptionProvider,\n} from \"@prisma-cms/cooperation\"\n\nimport {\n  ContextProvider as FrontEditorContextProvider,\n  SubscriptionProvider as FrontEditorSubscriptionProvider,\n  // FrontEditorRoot,\n} from \"@prisma-cms/front-editor\"\n\nimport TemplatesPage from \"@prisma-cms/front-editor/lib/components/pages/Templates/\"\nimport TemplatePage from \"@prisma-cms/front-editor/lib/components/pages/Templates/Template\"\n\nimport RootPage from \"./pages/Root\";\n\nimport * as queryFragments from \"../../schema/generated/api.fragments\";\n\nexport const styles = theme => {\n\n\n\n  const {\n    typography: {\n      fontFamily,\n      fontSize,\n    },\n    palette: {\n      text: {\n        primary,\n      },\n    },\n  } = theme;\n\n  return {\n    root: {\n      fontFamily,\n      fontSize,\n      color: primary,\n\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n\n      \"& #Renderer--body\": {\n        flex: 1,\n        overflow: \"auto\",\n        width: \"100%\",\n      },\n    },\n\n    header: {\n      marginBottom: 6,\n      position: \"relative\",\n      zIndex: 1,\n    },\n\n    body: {\n      flex: 1,\n      overflow: \"auto\",\n    },\n  }\n\n}\n\n\nexport class BoilerplateRenderer extends PrismaCmsRenderer {\n\n  // static contextTypes = {\n  //   ...PrismaCmsRenderer.contextTypes,\n  //   getQueryFragment: PropTypes.func.isRequired,\n  //   client: PropTypes.object.isRequired,\n  //   loadApiData: PropTypes.func.isRequired,\n  // }\n\n\n  // static childContextTypes = {\n  //   ...PrismaCmsRenderer.childContextTypes,\n  //   UserLink: PropTypes.func,\n  //   ProjectLink: PropTypes.func,\n  //   TaskLink: PropTypes.func,\n  //   TransactionLink: PropTypes.func,\n  // }\n\n\n  // getChildContext() {\n\n  //   const {\n  //     UserLink,\n  //     ProjectLink,\n  //     TaskLink,\n  //     TransactionLink,\n  //   } = UI;\n\n  //   return {\n  //     ...super.getChildContext(),\n  //     UserLink,\n  //     ProjectLink,\n  //     TaskLink,\n  //     TransactionLink,\n  //   }\n  // }\n\n\n  getRoutes__() {\n\n\n    const {\n      getQueryFragment,\n    } = this.context;\n\n\n    let baseRoutes = super.getRoutes();\n\n    let mainPageIndex = baseRoutes.findIndex(n => n.path === \"/\");\n    if (mainPageIndex) {\n      baseRoutes.splice(mainPageIndex, 1);\n    }\n\n\n\n    var routeIndex;\n\n    while ((routeIndex = baseRoutes.findIndex(n => n.path.startsWith(\"/user\"))) !== -1) {\n\n      baseRoutes.splice(routeIndex, 1);\n\n    };\n\n\n    let routes = [\n      {\n        exact: true,\n        path: \"/people\",\n        component: UsersPage,\n      },\n      {\n        exact: true,\n        path: \"/profile/:username\",\n        render: (props) => {\n          const {\n            params,\n          } = props.match;\n\n          const {\n            username,\n          } = params || {};\n\n          return <UserPage\n            getQueryFragment={getQueryFragment}\n            key={username}\n            where={{\n              username,\n            }}\n            {...props}\n          />\n        }\n      },\n      {\n        exact: true,\n        path: \"/comments\",\n        component: CommentsPage,\n      },\n      {\n        exact: true,\n        path: \"/comments/comment-:commentOldID(\\\\d+).html\",\n        render: (props) => {\n\n\n\n          const {\n            match: {\n              params: {\n                commentOldID,\n              },\n            },\n          } = props;\n\n          return <CommentPage\n            key={commentOldID}\n            where={{\n              commentOldID: parseInt(commentOldID),\n            }}\n            {...props}\n          />\n        }\n      },\n      {\n        exact: false,\n        path: \"/comments/(.+)\",\n        render: (props) => {\n\n          const {\n            match: {\n              url,\n              // params: {\n              //   0: commentId,\n              // },\n            },\n          } = props;\n\n          return <CommentPage\n            key={url}\n            where={{\n              uri: url,\n            }}\n            {...props}\n          />\n        }\n      },\n      {\n        exact: true,\n        path: \"/add-topic.html\",\n        component: TopicCreatePage,\n      },\n      {\n        exact: true,\n        path: \"/topics\",\n        component: TopicsPage,\n      },\n      {\n        exact: false,\n        // path: \"(/topics/.+|blog/.+[0-9].html)\",\n        path: /^(\\/topics\\/.+|\\/blog\\/.+[0-9].html)/,\n        render: (props) => {\n\n          const {\n            match: {\n              params: {\n                0: uri,\n              },\n              // url: uri,\n            },\n          } = props;\n\n          return <TopicPage\n            key={uri}\n            where={{\n              uri: uri,\n            }}\n            {...props}\n          />\n        }\n      },\n      {\n        exact: true,\n        path: \"/blogs\",\n        component: BlogsPage,\n      },\n      {\n        exact: true,\n        path: \"/blogs/create\",\n        component: BlogCreatePage,\n      },\n      {\n        exact: false,\n        path: \"(/blogs?/.+)\",\n        render: (props) => {\n\n          const {\n            match: {\n              params: {\n                0: uri,\n              },\n            },\n          } = props;\n\n          return <BlogPage\n            where={{\n              uri,\n            }}\n            {...props}\n          />\n        }\n      },\n      {\n        exact: false,\n        path: /^\\/tag\\/(.+?)\\/?$/,\n        render: (props) => {\n          const {\n            match: {\n              params: {\n                0: tagName,\n              },\n            },\n          } = props;\n\n          return <TagPage\n            tagName={tagName}\n            {...props}\n          />\n        }\n      },\n      {\n        exact: true,\n        path: [\n          \"/projects\",\n          \"/katalog-sajtov\",\n        ],\n        component: ProjectsPage,\n      },\n      {\n        exact: true,\n        path: \"/projects/create\",\n        component: ProjectCreatePage,\n      },\n      {\n        exact: false,\n        path: [\n          \"/projects\",\n          \"/katalog-sajtov\",\n        ],\n        // component: ProjectPage,\n        // path: \"/projects/:projectId\",\n        render: (props) => {\n          const {\n            location: {\n              pathname,\n            },\n          } = props;\n\n\n\n\n          return <ProjectPage\n            key={pathname}\n            where={{\n              // uri: \"/projects/dvazhdy-proekt\",\n              uri: pathname,\n            }}\n            {...props}\n          />\n        }\n      },\n      {\n        exact: true,\n        path: \"/timers\",\n        component: TimersPage,\n      },\n      // {\n      //   exact: true,\n      //   path: \"/timers/:timerId\",\n      //   render: (props) => {\n      //     const {\n      //       params,\n      //     } = props.match;\n\n      //     const {\n      //       timerId,\n      //     } = params || {};\n\n      //     return <TimerPage\n      //       key={timerId}\n      //       where={{\n      //         id: timerId,\n      //       }}\n      //       {...props}\n      //     />\n      //   }\n      // },\n      {\n        exact: true,\n        path: \"/tasks\",\n        component: TasksPage,\n      },\n      {\n        exact: false,\n        path: [\n          \"/tasks/create/:projectId\",\n          // \"/tasks/create\",\n        ],\n        component: TaskCreatePage,\n      },\n      {\n        exact: true,\n        path: \"/tasks/:taskId\",\n        render: (props) => {\n          const {\n            params,\n          } = props.match;\n\n          const {\n            taskId,\n          } = params || {};\n\n          return <TaskPage\n            key={taskId}\n            where={{\n              id: taskId,\n            }}\n            {...props}\n          />\n        }\n      },\n      {\n        exact: true,\n        path: \"/eth-transactions\",\n        render: props => <TransactionsPage\n          {...props}\n          where={{}}\n          first={10}\n          orderBy=\"createdAt_DESC\"\n        />\n      },\n      {\n        exact: true,\n        path: \"/eth-transactions/:transactionId\",\n        component: TransactionPage,\n      },\n      {\n        path: \"/react-lessons/lesson1\",\n        component: ReactLesson1,\n      },\n      {\n        exact: true,\n        path: \"/chat-rooms\",\n        component: ChatRoomsPage,\n      },\n      {\n        exact: true,\n        path: \"/chat-rooms/create\",\n        component: CreateChatRoomPage,\n      },\n      {\n        exact: true,\n        path: \"/chat-rooms/:id\",\n        render: props => {\n\n          const {\n            match: {\n              params: {\n                id,\n              },\n            },\n          } = props;\n\n          return <ChatRoomPage\n            key={id}\n            where={{\n              id,\n            }}\n            {...props}\n          />\n        },\n      },\n      {\n        exact: true,\n        path: \"/chat-messages\",\n        component: ChatMessagesPage,\n      },\n      {\n        exact: true,\n        path: \"/chat-messages/:id\",\n        render: props => {\n\n          const {\n            match: {\n              params: {\n                id,\n              },\n            },\n          } = props;\n\n          return <ChatMessagePage\n            key={id}\n            where={{\n              id,\n            }}\n            {...props}\n          />\n        },\n      },\n      // {\n      //   exact: false,\n      //   path: \"*\",\n      //   // component: MainPage,\n      //   // component: PromoPage,\n      //   component: RootPage,\n      // },\n      // {\n      //   path: \"*\",\n      //   render: props => this.renderOtherPages(props),\n      // },\n    ].concat(baseRoutes);\n\n\n\n\n\n    return routes;\n  }\n\n  getRoutes() {\n\n\n    const {\n      getQueryFragment,\n    } = this.context;\n\n\n    let baseRoutes = super.getRoutes();\n\n    let mainPageIndex = baseRoutes.findIndex(n => n.path === \"/\");\n    if (mainPageIndex) {\n      baseRoutes.splice(mainPageIndex, 1);\n    }\n\n\n\n    var routeIndex;\n\n    while ((routeIndex = baseRoutes.findIndex(n => n.path.startsWith(\"/user\"))) !== -1) {\n\n      baseRoutes.splice(routeIndex, 1);\n\n    };\n\n\n\n    let routes = [\n      {\n        exact: true,\n        path: \"/graphql-voyager\",\n        component: GraphqlVoyagerPage,\n      },\n      {\n        exact: true,\n        path: \"/templates\",\n        component: TemplatesPage,\n      },\n      // {\n      //   exact: true,\n      //   path: \"/templates/create\",\n      //   component: TemplateCreatePage,\n      // },\n      {\n        exact: true,\n        path: \"/templates/:id\",\n        render: props => {\n\n          const {\n            match: {\n              params: {\n                id,\n              },\n            },\n          } = props;\n\n          return <TemplatePage\n            key={id}\n            where={{\n              id,\n            }}\n            {...props}\n          />\n        },\n      },\n      {\n        exact: true,\n        path: \"/graphql-voyager\",\n        component: GraphqlVoyagerPage,\n      },\n      {\n        exact: false,\n        path: \"*\",\n        // component: MainPage,\n        // component: PromoPage,\n        component: RootPage,\n        // render: props => <RootPage\n        //   {...props}\n        //   oldRoutes={this.getRoutes__()}\n        // />\n      },\n      // {\n      //   path: \"*\",\n      //   render: props => this.renderOtherPages(props),\n      // },\n    ].concat(baseRoutes);\n\n\n\n\n\n    return routes;\n  }\n\n\n  renderMenu() {\n\n    return <MainMenu />;\n  }\n\n  // getRoutes() {\n\n  //   const {\n  //     getQueryFragment,\n  //   } = this.context;\n\n  //   let routers = [\n  //     {\n  //       exact: true,\n  //       path: \"/users/:userId\",\n  //       render: (props) => {\n  //         const {\n  //           params,\n  //         } = props.match;\n\n  //         const {\n  //           userId,\n  //         } = params || {};\n\n  //         return <UserPage\n  //           key={userId}\n  //           getQueryFragment={getQueryFragment}\n  //           where={{\n  //             id: userId,\n  //           }}\n  //           {...props}\n  //         />\n  //       }\n  //     },\n  //     {\n  //       exact: true,\n  //       path: \"/\",\n  //       component: ChatRoomsPage,\n  //     },\n  //     {\n  //       exact: true,\n  //       path: \"/chat-rooms\",\n  //       component: ChatRoomsPage,\n  //     },\n  //     {\n  //       exact: true,\n  //       path: \"/chat-rooms/create\",\n  //       component: CreateChatRoomPage,\n  //     },\n  //     {\n  //       exact: true,\n  //       path: \"/chat-rooms/:id\",\n  //       render: props => {\n\n  //         const {\n  //           match: {\n  //             params: {\n  //               id,\n  //             },\n  //           },\n  //         } = props;\n\n  //         return <ChatRoomPage\n  //           key={id}\n  //           where={{\n  //             id,\n  //           }}\n  //           {...props}\n  //         />\n  //       },\n  //     },\n  //     {\n  //       exact: true,\n  //       path: \"/chat-messages\",\n  //       component: ChatMessagesPage,\n  //     },\n  //     {\n  //       exact: true,\n  //       path: \"/chat-messages/:id\",\n  //       render: props => {\n\n  //         const {\n  //           match: {\n  //             params: {\n  //               id,\n  //             },\n  //           },\n  //         } = props;\n\n  //         return <ChatMessagePage\n  //           key={id}\n  //           where={{\n  //             id,\n  //           }}\n  //           {...props}\n  //         />\n  //       },\n  //     },\n  //     {\n  //       exact: true,\n  //       path: \"/eth-transactions\",\n  //       render: props => <TransactionsPage\n  //         {...props}\n  //         where={{}}\n  //         first={10}\n  //         orderBy=\"createdAt_DESC\"\n  //       />\n  //     },\n  //     {\n  //       exact: true,\n  //       path: \"/eth-transactions/:transactionId\",\n  //       component: TransactionPage,\n  //     },\n  //   ].concat(super.getRoutes());\n\n  //   return routers;\n  // }\n\n\n  renderWrapper() {\n\n    let iceServers = [];\n\n    iceServers.push({\n      'urls': [\n        // 'stun:coturn.modxclub.ru:443'\n        'stun:prisma-cms.com:3478'\n      ],\n      'username': 'test',\n      'credential': 'test',\n    });\n\n    iceServers.push({\n      'urls': [\n        // 'stun:coturn.modxclub.ru:443'\n        'turn:prisma-cms.com:3478'\n      ],\n      'username': 'test',\n      'credential': 'test',\n\n    });\n\n    // const {\n    //   queryFragments,\n    // } = this.context;\n\n    if(!queryFragments) {\n      return null;\n    }\n\n    return <Context.Consumer>\n      {context => {\n\n        const {\n          schema,\n        } = context;\n\n        if (!schema || !queryFragments) {\n          return null;\n        }\n\n        return <Context.Provider\n          value={Object.assign(context, {\n            oldRoutes: this.getRoutes__(),\n            queryFragments,\n          })}\n        >\n\n          <ResourceContextProvider>\n            <ResourceSubscriptionProvider>\n              <SocietyContextProvider>\n                <SocietySubscriptionProvider>\n                  <EthereumContextProvider>\n                    <EthereumSubscriptionProvider>\n                      <FrontEditorContextProvider>\n                        <FrontEditorSubscriptionProvider>\n                          <WebrtcContextProvider>\n                            <WebrtcSubscriptionProvider>\n                              <WebRtcChatProvider\n                                connectionProps={{\n                                  iceServers,\n                                }}\n                              >\n                                <CooperationContextProvider>\n                                  <CooperationSubscriptionProvider>\n                                    <ContextProvider>\n                                      {super.renderWrapper()}\n\n\n                                    </ContextProvider>\n                                  </CooperationSubscriptionProvider>\n                                </CooperationContextProvider>\n                              </WebRtcChatProvider>\n                            </WebrtcSubscriptionProvider>\n                          </WebrtcContextProvider>\n                        </FrontEditorSubscriptionProvider>\n                      </FrontEditorContextProvider>\n                    </EthereumSubscriptionProvider>\n                  </EthereumContextProvider>\n                </SocietySubscriptionProvider>\n              </SocietyContextProvider>\n            </ResourceSubscriptionProvider>\n          </ResourceContextProvider>\n\n        </Context.Provider>\n      }}\n    </Context.Consumer>\n\n\n\n  }\n\n\n  render() {\n\n    const {\n      user: currentUser,\n      client,\n      loadApiData,\n    } = this.context;\n\n    const {\n      classes,\n    } = this.props;\n\n    return <div\n      className={classes.root}\n    >\n      <style\n        dangerouslySetInnerHTML={{\n          __html: `\n            html, body, #root {\n              height: 100%;\n            }\n          `,\n        }}\n      />\n      <SubscriptionProvider\n        user={currentUser}\n        client={client}\n        loadApiData={loadApiData}\n      >\n        {super.render()}\n      </SubscriptionProvider>\n    </div>\n  }\n\n}\n\nexport default withStyles(styles)(props => <BoilerplateRenderer\n  {...props}\n/>);\n","var map = {\n\t\".\": 183,\n\t\"./\": 183,\n\t\"./GraphQLLanguageService\": 503,\n\t\"./GraphQLLanguageService.js\": 503,\n\t\"./GraphQLLanguageService.js.flow\": 1824,\n\t\"./autocompleteUtils\": 347,\n\t\"./autocompleteUtils.js\": 347,\n\t\"./autocompleteUtils.js.flow\": 1825,\n\t\"./getAutocompleteSuggestions\": 273,\n\t\"./getAutocompleteSuggestions.js\": 273,\n\t\"./getAutocompleteSuggestions.js.flow\": 1826,\n\t\"./getDefinition\": 348,\n\t\"./getDefinition.js\": 348,\n\t\"./getDefinition.js.flow\": 1827,\n\t\"./getDiagnostics\": 350,\n\t\"./getDiagnostics.js\": 350,\n\t\"./getDiagnostics.js.flow\": 1828,\n\t\"./getHoverInformation\": 351,\n\t\"./getHoverInformation.js\": 351,\n\t\"./getHoverInformation.js.flow\": 1829,\n\t\"./getOutline\": 502,\n\t\"./getOutline.js\": 502,\n\t\"./getOutline.js.flow\": 1830,\n\t\"./index\": 183,\n\t\"./index.js\": 183,\n\t\"./index.js.flow\": 1831\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 799;","\nimport \"../../styles/less/styles.css\";\n\nimport { Component } from \"react\";\n\nimport { App as PrismaApp } from \"@prisma-cms/front\";\n\nimport Renderer from \"../Renderer\";\n\nimport * as queryFragments from \"../../schema/generated/api.fragments\";\n\n\nimport { createMuiTheme } from 'material-ui/styles';\n\nimport pink from 'material-ui/colors/pink';\nimport { darken } from 'material-ui/styles/colorManipulator';\nimport blue from 'material-ui/colors/blue';\n\nimport \"moment/locale/ru\";\n\nexport {\n  Renderer,\n  queryFragments,\n}\n\nexport const getTheme = function (uiTheme) {\n\n  const {\n    direction,\n    paletteType,\n    typography,\n    ...other\n  } = uiTheme;\n\n  const theme = createMuiTheme({\n    direction,\n    nprogress: {\n      color: paletteType === 'light' ? '#000' : '#fff',\n    },\n    palette: {\n      primary: {\n        ...blue,\n        // main: \"#ff0000\",\n      },\n      secondary: {\n        // Darken so we reach the AA contrast ratio level.\n        main: darken(pink.A400, 0.08),\n      },\n      type: paletteType,\n      // background: {\n      //   default: \"#fff\",\n      // },\n    },\n    typography: {\n      // fontFamily: \"'Open Sans', sans-serif,Tahoma, Helvetica\",\n      fontFamily: \"Roboto, sans-serif,Tahoma, Helvetica\",\n      fontSize: 14,\n      display1: {\n        color: \"#222\",\n        fontSize: 30,\n      },\n      ...typography,\n    },\n    ...other,\n  });\n\n  // Expose the theme as a global variable so people can play with it.\n  if (process.browser) {\n    global.theme = theme;\n  }\n\n  return theme;\n}\n\nexport default class ModxclubApp extends PrismaApp {\n\n  static defaultProps = {\n    ...PrismaApp.defaultProps,\n    Renderer,\n    queryFragments,\n    // lang: \"ru\",\n    themeOptions: {\n      direction: 'ltr',\n      paletteType: 'light',\n    },\n  }\n\n\n\n  getTheme() {\n\n    const {\n      themeOptions,\n    } = this.state;\n\n    return getTheme({\n      ...themeOptions,\n    });\n  }\n\n}\n"],"sourceRoot":""}